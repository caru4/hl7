// Code generated by "hl7fetch -pkgdir h260 -root ./genjson -version 2.6 -network"; DO NOT EDIT.

package h260

// Abstract
//
// This segment was created to communicate patient abstract information used for billing and reimbursement purposes. Abstract
// is a condensed form of medical history created for analysis, care planning, etc.
type ABS struct {
	HL7                        HL7Name `hl7:",name=ABS,type=s"`
	DischargeCareProvider      *XCN    `hl7:"1,len=250,table=0010,display=Discharge Care Provider"`
	TransferMedicalServiceCode *CWE    `hl7:"2,len=250,table=0069,display=Transfer Medical Service Code"`
	SeverityOfIllnessCode      *CWE    `hl7:"3,len=250,table=0421,display=Severity of Illness Code"`
	DateTimeOfAttestation      DTM     `hl7:"4,len=24,format=YMDHM,display=Date/Time of Attestation"`
	AttestedBy                 *XCN    `hl7:"5,len=250,display=Attested By"`
	TriageCode                 *CWE    `hl7:"6,len=250,table=0422,display=Triage Code"`
	AbstractCompletionDateTime DTM     `hl7:"7,len=24,format=YMDHM,display=Abstract Completion Date/Time"`
	AbstractedBy               *XCN    `hl7:"8,len=250,display=Abstracted By"`
	CaseCategoryCode           *CWE    `hl7:"9,len=250,table=0423,display=Case Category Code"`
	CaesarianSectionIndicator  ID      `hl7:"10,len=1,table=0136,display=Caesarian Section Indicator"`
	GestationCategoryCode      *CWE    `hl7:"11,len=250,table=0424,display=Gestation Category Code"`
	GestationPeriodWeeks       NM      `hl7:"12,len=3,display=Gestation Period - Weeks"`
	NewbornCode                *CWE    `hl7:"13,len=250,table=0425,display=Newborn Code"`
	StillbornIndicator         ID      `hl7:"14,len=1,table=0136,display=Stillborn Indicator"`
}

// Accident
//
// The ACC segment contains patient information relative to an accident in which the patient has been involved.
type ACC struct {
	HL7                         HL7Name `hl7:",name=ACC,type=s"`
	AccidentDateTime            DTM     `hl7:"1,len=24,format=YMDHM,display=Accident Date/Time"`
	AccidentCode                *CWE    `hl7:"2,len=250,table=0050,display=Accident Code"`
	AccidentLocation            ST      `hl7:"3,len=25,display=Accident Location"`
	AutoAccidentState           CWE     `hl7:"4,len=250,table=0347,display=Auto Accident State"`
	AccidentJobRelatedIndicator ID      `hl7:"5,len=1,table=0136,display=Accident Job Related Indicator"`
	AccidentDeathIndicator      ID      `hl7:"6,len=12,table=0136,display=Accident Death Indicator"`
	EnteredBy                   *XCN    `hl7:"7,len=3220,display=Entered By"`
	AccidentDescription         ST      `hl7:"8,len=25,display=Accident Description"`
	BroughtInBy                 ST      `hl7:"9,len=80,display=Brought In By"`
	PoliceNotifiedIndicator     ID      `hl7:"10,len=1,table=0136,display=Police Notified Indicator"`
	AccidentAddress             *XAD    `hl7:"11,len=250,display=Accident Address"`
}

// Addendum
//
// The ADD segment is used to define the continuation of the prior segment in a continuation message. See Section 2.10.2, "
// Continuation messages and segments ," for details.
type ADD struct {
	HL7                         HL7Name `hl7:",name=ADD,type=s"`
	AddendumContinuationPointer ST      `hl7:"1,len=65536,display=Addendum Continuation Pointer"`
}

// Adjustment
//
// This segment describes Provider and/or Payer adjustments to a Product/Service Line Item or Response Summary. These include
// surcharges such as tax, dispensing fees and mark ups.
type ADJ struct {
	HL7                                                HL7Name `hl7:",name=ADJ,type=s"`
	ProviderAdjustmentNumber                           EI      `hl7:"1,required,len=73,display=Provider Adjustment Number"`
	PayerAdjustmentNumber                              EI      `hl7:"2,required,len=73,display=Payer Adjustment Number"`
	AdjustmentSequenceNumber                           SI      `hl7:"3,required,len=4,display=Adjustment Sequence Number"`
	AdjustmentCategory                                 IS      `hl7:"4,required,len=4,table=0564,display=Adjustment Category"`
	AdjustmentAmount                                   []CP    `hl7:"5,max=5,len=254,display=Adjustment Amount"`
	AdjustmentQuantity                                 *CQ     `hl7:"6,len=222,display=Adjustment Quantity"`
	AdjustmentReasonPA                                 *CWE    `hl7:"7,conditional,len=211,table=0565,display=Adjustment Reason PA"`
	AdjustmentDescription                              ST      `hl7:"8,len=250,display=Adjustment Description"`
	OriginalValue                                      NM      `hl7:"9,len=250,display=Original Value"`
	SubstituteValue                                    NM      `hl7:"10,len=250,display=Substitute Value"`
	AdjustmentAction                                   IS      `hl7:"11,len=4,table=0569,display=Adjustment Action"`
	ProviderAdjustmentNumberCrossReference             *EI     `hl7:"12,len=73,display=Provider Adjustment Number Cross Reference"`
	ProviderProductServiceLineItemNumberCrossReference *EI     `hl7:"13,len=73,display=Provider Product/Service Line Item Number Cross Reference"`
	AdjustmentDate                                     DTM     `hl7:"14,required,len=26,format=YMDHM,display=Adjustment Date"`
	ResponsibleOrganization                            *XON    `hl7:"15,len=183,display=Responsible Organization"`
}

// Professional Affiliation
//
// The AFF segment adds detailed information regarding professional affiliations with which the staff member identified
// by the STF segment is/was associated.
type AFF struct {
	HL7                                          HL7Name `hl7:",name=AFF,type=s"`
	SetID                                        SI      `hl7:"1,seq,required,len=60,display=Set ID - AFF"`
	ProfessionalOrganization                     XON     `hl7:"2,required,len=250,display=Professional Organization"`
	ProfessionalOrganizationAddress              *XAD    `hl7:"3,len=250,display=Professional Organization Address"`
	ProfessionalOrganizationAffiliationDateRange []DR    `hl7:"4,len=52,display=Professional Organization Affiliation Date Range"`
	ProfessionalAffiliationAdditionalInformation ST      `hl7:"5,len=60,display=Professional Affiliation Additional Information"`
}

// Appointment Information - General Resource
//
// The AIG segment contains information about various kinds of resources (other than those with specifically defined segments
// in this chapter) that can be scheduled. Resources included in a transaction using this segment are assumed to be controlled
// by a schedule on a schedule filler application. Resources not controlled by a schedule are not identified on a schedule
// request using this segment. Resources described by this segment are general kinds of resources, such as equipment, that
// are identified with a simple identification code.
type AIG struct {
	HL7                      HL7Name `hl7:",name=AIG,type=s"`
	SetID                    SI      `hl7:"1,seq,required,len=4,display=Set ID - AIG"`
	SegmentActionCode        ID      `hl7:"2,conditional,len=3,table=0206,display=Segment Action Code"`
	ResourceID               *CWE    `hl7:"3,conditional,len=250,display=Resource ID"`
	ResourceType             CWE     `hl7:"4,required,len=250,display=Resource Type"`
	ResourceGroup            []CWE   `hl7:"5,len=250,display=Resource Group"`
	ResourceQuantity         NM      `hl7:"6,len=5,display=Resource Quantity"`
	ResourceQuantityUnits    *CNE    `hl7:"7,len=250,display=Resource Quantity Units"`
	StartDateTime            DTM     `hl7:"8,conditional,len=24,format=YMDHM,display=Start Date/Time"`
	StartDateTimeOffset      NM      `hl7:"9,conditional,len=20,display=Start Date/Time Offset"`
	StartDateTimeOffsetUnits *CNE    `hl7:"10,conditional,len=250,display=Start Date/Time Offset Units"`
	Duration                 NM      `hl7:"11,len=20,display=Duration"`
	DurationUnits            *CNE    `hl7:"12,len=250,display=Duration Units"`
	AllowSubstitutionCode    IS      `hl7:"13,conditional,len=10,table=0279,display=Allow Substitution Code"`
	FillerStatusCode         *CWE    `hl7:"14,conditional,len=250,table=0278,display=Filler Status Code"`
}

// Appointment Information - Location Resource
//
// The AIL segment contains information about location resources (meeting rooms, operating rooms, examination rooms,
// or other locations) that can be scheduled. Resources included in a transaction using this segment are assumed to be controlled
// by a schedule on a schedule filler application. Resources not controlled by a schedule are not identified on a schedule
// request using this segment. Location resources are identified with this specific segment because of the specific encoding
// of locations used by the HL7 specification.
type AIL struct {
	HL7                      HL7Name `hl7:",name=AIL,type=s"`
	SetID                    SI      `hl7:"1,seq,required,len=4,display=Set ID - AIL"`
	SegmentActionCode        ID      `hl7:"2,conditional,len=3,table=0206,display=Segment Action Code"`
	LocationResourceID       []PL    `hl7:"3,conditional,len=80,display=Location Resource ID"`
	LocationType             *CWE    `hl7:"4,conditional,len=250,table=0305,display=Location Type-AIL"`
	LocationGroup            *CWE    `hl7:"5,len=250,display=Location Group"`
	StartDateTime            DTM     `hl7:"6,conditional,len=24,format=YMDHM,display=Start Date/Time"`
	StartDateTimeOffset      NM      `hl7:"7,conditional,len=20,display=Start Date/Time Offset"`
	StartDateTimeOffsetUnits *CNE    `hl7:"8,conditional,len=250,display=Start Date/Time Offset Units"`
	Duration                 NM      `hl7:"9,len=20,display=Duration"`
	DurationUnits            *CNE    `hl7:"10,len=250,display=Duration Units"`
	AllowSubstitutionCode    IS      `hl7:"11,conditional,len=10,table=0279,display=Allow Substitution Code"`
	FillerStatusCode         *CWE    `hl7:"12,conditional,len=250,table=0278,display=Filler Status Code"`
}

// Appointment Information - Personnel Resource
//
// The AIP segment contains information about the personnel types that can be scheduled. Personnel included in a transaction
// using this segment are assumed to be controlled by a schedule on a schedule filler application. Personnel not controlled
// by a schedule are not identified on a schedule request using this segment. The kinds of personnel described on this segment
// include any healthcare provider in the institution controlled by a schedule (for example: technicians, physicians,
// nurses, surgeons, anesthesiologists, or CRNAs).
type AIP struct {
	HL7                      HL7Name `hl7:",name=AIP,type=s"`
	SetID                    SI      `hl7:"1,seq,required,len=4,display=Set ID - AIP"`
	SegmentActionCode        ID      `hl7:"2,conditional,len=3,table=0206,display=Segment Action Code"`
	PersonnelResourceID      []XCN   `hl7:"3,conditional,len=250,display=Personnel Resource ID"`
	ResourceType             *CWE    `hl7:"4,conditional,len=250,table=0182,display=Resource Type"`
	ResourceGroup            *CWE    `hl7:"5,len=250,display=Resource Group"`
	StartDateTime            DTM     `hl7:"6,conditional,len=24,format=YMDHM,display=Start Date/Time"`
	StartDateTimeOffset      NM      `hl7:"7,conditional,len=20,display=Start Date/Time Offset"`
	StartDateTimeOffsetUnits *CNE    `hl7:"8,conditional,len=250,display=Start Date/Time Offset Units"`
	Duration                 NM      `hl7:"9,len=20,display=Duration"`
	DurationUnits            *CNE    `hl7:"10,len=250,display=Duration Units"`
	AllowSubstitutionCode    IS      `hl7:"11,conditional,len=10,table=0279,display=Allow Substitution Code"`
	FillerStatusCode         *CWE    `hl7:"12,conditional,len=250,table=0278,display=Filler Status Code"`
}

// Appointment Information
//
// The AIS segment contains information about various kinds of services that can be scheduled. Services included in a transaction
// using this segment are assumed to be controlled by a schedule on a schedule filler application. Services not controlled
// by a schedule are not identified on a schedule request using this segment.
type AIS struct {
	HL7                                  HL7Name `hl7:",name=AIS,type=s"`
	SetID                                SI      `hl7:"1,seq,required,len=4,display=Set ID - AIS"`
	SegmentActionCode                    ID      `hl7:"2,conditional,len=3,table=0206,display=Segment Action Code"`
	UniversalServiceIdentifier           CWE     `hl7:"3,required,len=705,display=Universal Service Identifier"`
	StartDateTime                        DTM     `hl7:"4,conditional,len=24,format=YMDHM,display=Start Date/Time"`
	StartDateTimeOffset                  NM      `hl7:"5,conditional,len=20,display=Start Date/Time Offset"`
	StartDateTimeOffsetUnits             *CNE    `hl7:"6,conditional,len=250,display=Start Date/Time Offset Units"`
	Duration                             NM      `hl7:"7,len=20,display=Duration"`
	DurationUnits                        *CNE    `hl7:"8,len=250,display=Duration Units"`
	AllowSubstitutionCode                IS      `hl7:"9,conditional,len=10,table=0279,display=Allow Substitution Code"`
	FillerStatusCode                     *CWE    `hl7:"10,conditional,len=250,table=0278,display=Filler Status Code"`
	PlacerSupplementalServiceInformation []CWE   `hl7:"11,len=705,table=0411,display=Placer Supplemental Service Information"`
	FillerSupplementalServiceInformation []CWE   `hl7:"12,len=705,table=0411,display=Filler Supplemental Service Information"`
}

// Patient Allergy Information
//
// The AL1 segment contains patient allergy information of various types. Most of this information will be derived from user-defined
// tables. Each AL1 segment describes a single patient allergy.
type AL1 struct {
	HL7                             HL7Name `hl7:",name=AL1,type=s"`
	SetID                           SI      `hl7:"1,seq,required,len=4,display=Set ID - AL1"`
	AllergenTypeCode                *CWE    `hl7:"2,len=705,table=0127,display=Allergen Type Code"`
	AllergenCodeMnemonicDescription CWE     `hl7:"3,required,len=705,display=Allergen Code/Mnemonic/Description"`
	AllergySeverityCode             *CWE    `hl7:"4,len=705,table=0128,display=Allergy Severity Code"`
	AllergyReactionCode             []ST    `hl7:"5,len=15,display=Allergy Reaction Code"`
	IdentificationDate              DT      `hl7:"6,len=8,format=YMD,display=Identification Date"`
}

// Appointment Preferences
//
// The APR segment contains parameters and preference specifications used for requesting appointments in the SRM message.
// It allows placer applications to provide coded parameters and preference indicators to the filler application, to help
// determine when a requested appointment should be scheduled. An APR segment can be provided in conjunction with either
// the ARQ segment or any of the service and resource segments (AIG, AIS, AIP, and AIL). If an APR segment appears in conjunction
// with an ARQ segment, its parameters and preference indicators pertain to the schedule request as a whole. If the APR segment
// appears with any of the service and resource segments, then its parameters and preferences apply only to the immediately
// preceding service or resource.
type APR struct {
	HL7                       HL7Name `hl7:",name=APR,type=s"`
	TimeSelectionCriteria     []SCV   `hl7:"1,len=80,display=Time Selection Criteria"`
	ResourceSelectionCriteria []SCV   `hl7:"2,len=80,display=Resource Selection Criteria"`
	LocationSelectionCriteria []SCV   `hl7:"3,len=80,display=Location Selection Criteria"`
	SlotSpacingCriteria       NM      `hl7:"4,len=5,display=Slot Spacing Criteria"`
	FillerOverrideCriteria    []SCV   `hl7:"5,len=80,display=Filler Override Criteria"`
}

// Appointment Request
//
// The ARQ segment defines a request for the booking of an appointment. It is used in transactions sent from an application
// acting in the role of a placer.
type ARQ struct {
	HL7                         HL7Name `hl7:",name=ARQ,type=s"`
	PlacerAppointmentID         EI      `hl7:"1,required,len=75,display=Placer Appointment ID"`
	FillerAppointmentID         *EI     `hl7:"2,conditional,len=75,display=Filler Appointment ID"`
	OccurrenceNumber            NM      `hl7:"3,conditional,len=5,display=Occurrence Number"`
	PlacerGroupNumber           *EI     `hl7:"4,len=22,display=Placer Group Number"`
	ScheduleID                  *CWE    `hl7:"5,len=250,display=Schedule ID"`
	RequestEventReason          *CWE    `hl7:"6,len=250,display=Request Event Reason"`
	AppointmentReason           *CWE    `hl7:"7,len=250,table=0276,display=Appointment Reason"`
	AppointmentType             *CWE    `hl7:"8,len=250,table=0277,display=Appointment Type"`
	AppointmentDuration         NM      `hl7:"9,len=20,display=Appointment Duration"`
	AppointmentDurationUnits    *CNE    `hl7:"10,len=250,display=Appointment Duration Units"`
	RequestedStartDateTimeRange []DR    `hl7:"11,len=49,display=Requested Start Date/Time Range"`
	Priority                    ST      `hl7:"12,len=5,display=Priority-ARQ"`
	RepeatingInterval           *RI     `hl7:"13,len=100,display=Repeating Interval"`
	RepeatingIntervalDuration   ST      `hl7:"14,len=5,display=Repeating Interval Duration"`
	PlacerContactPerson         []XCN   `hl7:"15,required,len=250,display=Placer Contact Person"`
	PlacerContactPhoneNumber    []XTN   `hl7:"16,len=250,display=Placer Contact Phone Number"`
	PlacerContactAddress        []XAD   `hl7:"17,len=250,display=Placer Contact Address"`
	PlacerContactLocation       *PL     `hl7:"18,len=80,display=Placer Contact Location"`
	EnteredByPerson             []XCN   `hl7:"19,required,len=250,display=Entered By Person"`
	EnteredByPhoneNumber        []XTN   `hl7:"20,len=250,display=Entered By Phone Number"`
	EnteredByLocation           *PL     `hl7:"21,len=80,display=Entered By Location"`
	ParentPlacerAppointmentID   *EI     `hl7:"22,len=75,display=Parent Placer Appointment ID"`
	ParentFillerAppointmentID   *EI     `hl7:"23,len=75,display=Parent Filler Appointment ID"`
	PlacerOrderNumber           []EI    `hl7:"24,conditional,len=427,display=Placer Order Number"`
	FillerOrderNumber           []EI    `hl7:"25,conditional,len=427,display=Filler Order Number"`
}

// Access Restrictions
//
// The ARV segment is used to communicate the requested/required type of access restrictions from system to system, at both
// the person/patient and the encounter/visit level.
type ARV struct {
	HL7                                  HL7Name `hl7:",name=ARV,type=s"`
	SetID                                SI      `hl7:"1,seq,len=4,display=Set ID"`
	AccessRestrictionActionCode          CNE     `hl7:"2,required,len=705,table=0206,display=Access Restriction Action Code"`
	AccessRestrictionValue               CWE     `hl7:"3,required,len=705,table=0717,display=Access Restriction Value"`
	AccessRestrictionReason              []CWE   `hl7:"4,len=705,table=0719,display=Access Restriction Reason"`
	SpecialAccessRestrictionInstructions []ST    `hl7:"5,len=250,display=Special Access Restriction Instructions"`
	AccessRestrictionDateRange           *DR     `hl7:"6,len=49,display=Access Restriction Date Range"`
}

// Authorization Information
//
// This segment represents an authorization or a pre-authorization for a referred procedure or requested service by the
// payor covering the patient's health care.
type AUT struct {
	HL7                          HL7Name `hl7:",name=AUT,type=s"`
	AuthorizingPayorPlanID       *CWE    `hl7:"1,len=250,table=0072,display=Authorizing Payor- Plan ID"`
	AuthorizingPayorCompanyID    CWE     `hl7:"2,required,len=250,table=0285,display=Authorizing Payor- Company ID"`
	AuthorizingPayorCompanyName  ST      `hl7:"3,len=45,display=Authorizing Payor- Company Name"`
	AuthorizationEffectiveDate   DTM     `hl7:"4,len=24,format=YMDHM,display=Authorization Effective Date"`
	AuthorizationExpirationDate  DTM     `hl7:"5,len=24,format=YMDHM,display=Authorization Expiration Date"`
	AuthorizationIdentifier      *EI     `hl7:"6,conditional,len=30,display=Authorization Identifier"`
	ReimbursementLimit           *CP     `hl7:"7,len=25,display=Reimbursement Limit"`
	RequestedNumberOfTreatments  NM      `hl7:"8,len=2,display=Requested Number of Treatments"`
	AuthorizedNumberOfTreatments NM      `hl7:"9,len=2,display=Authorized Number of Treatments"`
	ProcessDate                  DTM     `hl7:"10,len=24,format=YMDHM,display=Process Date"`
}

// Batch Header
//
// The BHS segment defines the start of a batch.
type BHS struct {
	HL7                          HL7Name `hl7:",name=BHS,type=s"`
	BatchFieldSeparator          ST      `hl7:"1,required,len=1,display=Batch Field Separator"`
	BatchEncodingCharacters      ST      `hl7:"2,required,len=4,display=Batch Encoding Characters"`
	BatchSendingApplication      *HD     `hl7:"3,len=227,display=Batch Sending Application"`
	BatchSendingFacility         *HD     `hl7:"4,len=227,display=Batch Sending Facility"`
	BatchReceivingApplication    *HD     `hl7:"5,len=227,display=Batch Receiving Application"`
	BatchReceivingFacility       *HD     `hl7:"6,len=227,display=Batch Receiving Facility"`
	BatchCreationDateTime        DTM     `hl7:"7,len=24,format=YMDHM,display=Batch Creation Date/Time"`
	BatchSecurity                ST      `hl7:"8,len=40,display=Batch Security"`
	BatchNameIDType              ST      `hl7:"9,len=20,display=Batch Name/ID/Type"`
	BatchComment                 ST      `hl7:"10,len=80,display=Batch Comment"`
	BatchControlID               ST      `hl7:"11,len=20,display=Batch Control ID"`
	ReferenceBatchControlID      ST      `hl7:"12,len=20,display=Reference Batch Control ID"`
	BatchSendingNetworkAddress   *HD     `hl7:"13,len=227,display=Batch Sending Network Address"`
	BatchReceivingNetworkAddress *HD     `hl7:"14,len=227,display=Batch Receiving Network Address"`
}

// Blood Code
//
// The BLC segment contains data necessary to communicate patient abstract blood information used for billing and reimbursement
// purposes. This segment is repeating to report blood product codes and the associated blood units.
type BLC struct {
	HL7              HL7Name `hl7:",name=BLC,type=s"`
	BloodProductCode *CWE    `hl7:"1,len=250,table=0426,display=Blood Product Code"`
	BloodAmount      *CQ     `hl7:"2,len=267,display=Blood Amount"`
}

// Billing
//
// The BLG segment is used to provide billing information, on the ordered service, to the filling application.
type BLG struct {
	HL7              HL7Name `hl7:",name=BLG,type=s"`
	WhenToCharge     *CCD    `hl7:"1,len=40,display=When to Charge"`
	ChargeType       ID      `hl7:"2,len=50,table=0122,display=Charge Type"`
	AccountID        *CX     `hl7:"3,len=100,display=Account ID"`
	ChargeTypeReason *CWE    `hl7:"4,len=60,table=0475,display=Charge Type Reason"`
}

// Blood product order
//
// Blood product order messages require additional information that is not available in other standard HL7 order messages.
// Blood product order messages need to contain accompanying details regarding the blood product component, such as special
// processing requirements (e.g., irradiation and leukoreduction) and the amount of the blood product to be administered.
type BPO struct {
	HL7                            HL7Name `hl7:",name=BPO,type=s"`
	SetID                          SI      `hl7:"1,seq,required,len=4,display=Set ID – BPO"`
	BPUniversalServiceIdentifier   CWE     `hl7:"2,required,len=250,display=BP Universal Service Identifier"`
	BPProcessingRequirements       []CWE   `hl7:"3,len=250,table=0508,display=BP  Processing Requirements"`
	BPQuantity                     NM      `hl7:"4,required,len=5,display=BP Quantity"`
	BPAmount                       NM      `hl7:"5,len=5,display=BP Amount"`
	BPUnits                        *CWE    `hl7:"6,len=250,display=BP Units"`
	BPIntendedUseDateTime          DTM     `hl7:"7,len=24,format=YMDHM,display=BP Intended Use Date/Time"`
	BPIntendedDispenseFromLocation *PL     `hl7:"8,len=80,display=BP Intended Dispense From Location"`
	BPIntendedDispenseFromAddress  *XAD    `hl7:"9,len=250,display=BP Intended Dispense From Address"`
	BPRequestedDispenseDateTime    DTM     `hl7:"10,len=24,format=YMDHM,display=BP Requested Dispense Date/Time"`
	BPRequestedDispenseToLocation  *PL     `hl7:"11,len=80,display=BP Requested Dispense To Location"`
	BPRequestedDispenseToAddress   *XAD    `hl7:"12,len=250,display=BP Requested Dispense To Address"`
	BPIndicationForUse             []CWE   `hl7:"13,len=250,table=0509,display=BP Indication for Use"`
	BPInformedConsentIndicator     ID      `hl7:"14,len=1,table=0136,display=BP Informed Consent Indicator"`
}

// Blood product dispense status
//
// In the processing of blood products, it is necessary for the transfusion service and the placer system to communicate information.
// The status messages need to contain additional information regarding the blood products requested, such as the unique
// donation ID, product code, blood type, expiration date/time of the blood product, and current status of the product. This
// segment is similar to an OBX segment, but contains additional attributes.
type BPX struct {
	HL7                         HL7Name `hl7:",name=BPX,type=s"`
	SetID                       SI      `hl7:"1,seq,required,len=4,display=Set ID – BPX"`
	BPDispenseStatus            CWE     `hl7:"2,required,len=250,table=0510,display=BP Dispense Status"`
	BPStatus                    ID      `hl7:"3,required,len=1,table=0511,display=BP Status"`
	BPDateTimeOfStatus          DTM     `hl7:"4,required,len=24,format=YMDHM,display=BP Date/Time of Status"`
	BCDonationID                *EI     `hl7:"5,conditional,len=22,display=BC Donation ID"`
	BCComponent                 *CNE    `hl7:"6,conditional,len=250,display=BC Component"`
	BCDonationTypeIntendedUse   *CNE    `hl7:"7,len=250,display=BC Donation Type / Intended Use"`
	CPCommercialProduct         *CWE    `hl7:"8,conditional,len=250,table=0512,display=CP Commercial Product"`
	CPManufacturer              *XON    `hl7:"9,conditional,len=250,display=CP Manufacturer"`
	CPLotNumber                 *EI     `hl7:"10,conditional,len=22,display=CP Lot Number"`
	BPBloodGroup                *CNE    `hl7:"11,len=250,display=BP Blood Group"`
	BCSpecialTesting            []CNE   `hl7:"12,len=250,display=BC Special Testing"`
	BPExpirationDateTime        DTM     `hl7:"13,len=24,format=YMDHM,display=BP Expiration Date/Time"`
	BPQuantity                  NM      `hl7:"14,required,len=5,display=BP Quantity"`
	BPAmount                    NM      `hl7:"15,len=5,display=BP Amount"`
	BPUnits                     *CWE    `hl7:"16,len=250,display=BP Units"`
	BPUniqueID                  *EI     `hl7:"17,len=22,display=BP Unique ID"`
	BPActualDispensedToLocation *PL     `hl7:"18,len=80,display=BP Actual Dispensed To Location"`
	BPActualDispensedToAddress  *XAD    `hl7:"19,len=250,display=BP Actual Dispensed To Address"`
	BPDispensedToReceiver       *XCN    `hl7:"20,len=250,display=BP Dispensed to Receiver"`
	BPDispensingIndividual      *XCN    `hl7:"21,len=250,display=BP Dispensing Individual"`
}

// Batch Trailer
//
// The BTS segment defines the end of a batch
type BTS struct {
	HL7               HL7Name `hl7:",name=BTS,type=s"`
	BatchMessageCount ST      `hl7:"1,len=10,display=Batch Message Count"`
	BatchComment      ST      `hl7:"2,len=80,display=Batch Comment"`
	BatchTotals       []NM    `hl7:"3,len=100,display=Batch Totals"`
}

// Blood Product Transfusion/Disposition
type BTX struct {
	HL7                                HL7Name `hl7:",name=BTX,type=s"`
	SetID                              SI      `hl7:"1,seq,required,len=4,display=Set ID – BTX"`
	BCDonationID                       *EI     `hl7:"2,conditional,len=22,display=BC Donation ID"`
	BCComponent                        *CNE    `hl7:"3,conditional,len=250,display=BC Component"`
	BCBloodGroup                       *CNE    `hl7:"4,conditional,len=250,display=BC Blood Group"`
	CPCommercialProduct                *CWE    `hl7:"5,conditional,len=250,table=0512,display=CP Commercial Product"`
	CPManufacturer                     *XON    `hl7:"6,conditional,len=250,display=CP Manufacturer"`
	CPLotNumber                        *EI     `hl7:"7,conditional,len=22,display=CP Lot Number"`
	BPQuantity                         NM      `hl7:"8,required,len=5,display=BP Quantity"`
	BPAmount                           NM      `hl7:"9,len=5,display=BP Amount"`
	BPUnits                            *CWE    `hl7:"10,len=250,display=BP Units"`
	BPTransfusionDispositionStatus     CWE     `hl7:"11,required,len=250,table=0513,display=BP Transfusion/Disposition Status"`
	BPMessageStatus                    ID      `hl7:"12,required,len=1,table=0511,display=BP Message Status"`
	BPDateTimeOfStatus                 DTM     `hl7:"13,required,len=24,format=YMDHM,display=BP Date/Time of Status"`
	BPAdministrator                    *XCN    `hl7:"14,len=250,display=BP Administrator"`
	BPVerifier                         *XCN    `hl7:"15,len=250,display=BP Verifier"`
	BPTransfusionStartDateTimeOfStatus DTM     `hl7:"16,len=24,format=YMDHM,display=BP Transfusion Start Date/Time of Status"`
	BPTransfusionEndDateTimeOfStatus   DTM     `hl7:"17,len=24,format=YMDHM,display=BP Transfusion End Date/Time of Status"`
	BPAdverseReactionType              []CWE   `hl7:"18,len=250,table=0514,display=BP Adverse Reaction Type"`
	BPTransfusionInterruptedReason     *CWE    `hl7:"19,len=250,table=0515,display=BP Transfusion Interrupted Reason"`
}

// Charge Description Master
//
// The Technical Steward for the CDM segment is Financial Management.
//
// The CDM segment contains the fields for identifying anything which is charged to patient accounts, including procedures,
// services, supplies.  It is intended to be used to maintain a list of valid chargeable utilization items.  Its purpose is to
// keep billing codes synchronized between HIS, Patient Accounting, and other departmental systems.  It is not intended
// to completely support materials management, inventory, or complex pricing structures for which additional complex
// fields would be required.  Given an identifying charge code, the associated fields in the charge description master file
// will provide basic pricing and billing data.  All the additional information necessary for patient accounting systems
// to do billing and claims is not intended to be included in this segment; those should be part of insurance or billing profile
// tables.
type CDM struct {
	HL7                          HL7Name `hl7:",name=CDM,type=s"`
	PrimaryKeyValue              CWE     `hl7:"1,required,len=250,table=0132,display=Primary Key Value - CDM"`
	ChargeCodeAlias              []CWE   `hl7:"2,len=250,display=Charge Code Alias"`
	ChargeDescriptionShort       ST      `hl7:"3,required,len=20,display=Charge Description Short"`
	ChargeDescriptionLong        ST      `hl7:"4,len=250,display=Charge Description Long"`
	DescriptionOverrideIndicator IS      `hl7:"5,len=1,table=0268,display=Description Override Indicator"`
	ExplodingCharges             []CWE   `hl7:"6,len=250,table=0132,display=Exploding Charges"`
	ProcedureCode                []CWE   `hl7:"7,len=705,table=0088,display=Procedure Code"`
	ActiveInactiveFlag           ID      `hl7:"8,len=1,table=0183,display=Active/Inactive Flag"`
	InventoryNumber              []CWE   `hl7:"9,len=250,table=0463,display=Inventory Number"`
	ResourceLoad                 NM      `hl7:"10,len=12,display=Resource Load"`
	ContractNumber               []CX    `hl7:"11,len=250,display=Contract Number"`
	ContractOrganization         []XON   `hl7:"12,len=250,display=Contract Organization"`
	RoomFeeIndicator             ID      `hl7:"13,len=1,table=0136,display=Room Fee Indicator"`
}

// Certificate Detail
//
// The CER segment adds detailed information regarding the formal authorizations to provide a service (e.g. licenses, certificates)
// held by the health professional identified by the STF segment.
type CER struct {
	HL7                                HL7Name `hl7:",name=CER,type=s"`
	SetID                              SI      `hl7:"1,seq,required,len=4,display=Set ID – CER"`
	SerialNumber                       ST      `hl7:"2,len=80,display=Serial Number"`
	Version                            ST      `hl7:"3,len=80,display=Version"`
	GrantingAuthority                  *XON    `hl7:"4,len=250,display=Granting Authority"`
	IssuingAuthority                   *XCN    `hl7:"5,len=250,display=Issuing Authority"`
	SignatureOfIssuingAuthority        *ED     `hl7:"6,len=65536,display=Signature of Issuing Authority"`
	GrantingCountry                    ID      `hl7:"7,len=3,table=0399,display=Granting Country"`
	GrantingStateProvince              *CWE    `hl7:"8,len=250,table=0347,display=Granting State/Province"`
	GrantingCountyParish               *CWE    `hl7:"9,len=250,table=0289,display=Granting County/Parish"`
	CertificateType                    *CWE    `hl7:"10,len=250,display=Certificate Type"`
	CertificateDomain                  *CWE    `hl7:"11,len=250,display=Certificate Domain"`
	SubjectID                          ID      `hl7:"12,conditional,len=250,display=Subject ID"`
	SubjectName                        ST      `hl7:"13,required,len=250,display=Subject Name"`
	SubjectDirectoryAttributeExtension []CWE   `hl7:"14,len=250,display=Subject Directory Attribute Extension"`
	SubjectPublicKeyInfo               *CWE    `hl7:"15,len=250,display=Subject Public Key Info"`
	AuthorityKeyIdentifier             *CWE    `hl7:"16,len=250,display=Authority Key Identifier"`
	BasicConstraint                    ID      `hl7:"17,len=250,table=0136,display=Basic Constraint"`
	CRLDistributionPoint               []CWE   `hl7:"18,len=250,display=CRL Distribution Point"`
	JurisdictionCountry                ID      `hl7:"19,len=3,table=0399,display=Jurisdiction Country"`
	JurisdictionStateProvince          *CWE    `hl7:"20,len=250,table=0347,display=Jurisdiction State/Province"`
	JurisdictionCountyParish           *CWE    `hl7:"21,len=250,table=0289,display=Jurisdiction County/Parish"`
	JurisdictionBreadth                []CWE   `hl7:"22,len=250,table=0547,display=Jurisdiction Breadth"`
	GrantingDate                       DTM     `hl7:"23,len=24,format=YMDHM,display=Granting Date"`
	IssuingDate                        DTM     `hl7:"24,len=24,format=YMDHM,display=Issuing Date"`
	ActivationDate                     DTM     `hl7:"25,len=24,format=YMDHM,display=Activation Date"`
	InactivationDate                   DTM     `hl7:"26,len=24,format=YMDHM,display=Inactivation Date"`
	ExpirationDate                     DTM     `hl7:"27,len=24,format=YMDHM,display=Expiration Date"`
	RenewalDate                        DTM     `hl7:"28,len=24,format=YMDHM,display=Renewal Date"`
	RevocationDate                     DTM     `hl7:"29,len=24,format=YMDHM,display=Revocation Date"`
	RevocationReasonCode               *CWE    `hl7:"30,len=250,display=Revocation Reason Code"`
	CertificateStatusCode              *CWE    `hl7:"31,len=250,table=0536,display=Certificate Status Code"`
}

// Clinical Study Master
//
// The Technical Steward for the CM0 segment is Orders and Observations.
//
// The Clinical Study Master (CM0) segment contains the information about the study itself.  The sending application study
// number for each patient is sent in the CSR segment.  The optional CM0 enables information about the study at the sending application
// that may be useful to the receiving systems.  All of the fields in the segment describe the study status at the sending facility
// unless otherwise agreed upon.
type CM0 struct {
	HL7                     HL7Name `hl7:",name=CM0,type=s"`
	SetID                   SI      `hl7:"1,seq,len=4,display=Set ID - CM0"`
	SponsorStudyID          EI      `hl7:"2,required,len=427,display=Sponsor Study ID"`
	AlternateStudyID        []EI    `hl7:"3,max=3,len=427,display=Alternate Study ID"`
	TitleOfStudy            ST      `hl7:"4,required,len=300,display=Title of Study"`
	ChairmanOfStudy         []XCN   `hl7:"5,len=250,display=Chairman of Study"`
	LastIRBApprovalDate     DT      `hl7:"6,len=8,format=YMD,display=Last IRB Approval Date"`
	TotalAccrualToDate      NM      `hl7:"7,len=8,display=Total Accrual to Date"`
	LastAccrualDate         DT      `hl7:"8,len=8,format=YMD,display=Last Accrual Date"`
	ContactForStudy         []XCN   `hl7:"9,len=250,display=Contact for Study"`
	ContactsTelephoneNumber *XTN    `hl7:"10,len=250,display=Contact's Telephone Number"`
	ContactsAddress         []XAD   `hl7:"11,len=250,display=Contact's Address"`
}

// Clinical Study Phase Master
//
// The Technical Steward for the CM1 segment is Orders and Observations.
//
// Each Clinical Study Phase Master (CM1) segment contains the information about one phase of a study identified in the preceding
// CM0.  This is an optional structure to be used if the study has more than one treatment or evaluation phase within it.  The identification
// of study phases that the patient enters are sent in the CSP segment: sequence 2.  The CM1 segment describes the phase in general
// for the receiving system.
type CM1 struct {
	HL7                     HL7Name `hl7:",name=CM1,type=s"`
	SetID                   SI      `hl7:"1,seq,required,len=4,display=Set ID - CM1"`
	StudyPhaseIdentifier    CWE     `hl7:"2,required,len=705,display=Study Phase Identifier"`
	DescriptionOfStudyPhase ST      `hl7:"3,required,len=300,display=Description of Study Phase"`
}

// Clinical Study Schedule Master
//
// The Technical Steward for the CM2 segment is Orders and Observations.
//
// The Clinical Study Schedule Master (CM2) contains the information about the scheduled time points for study or phase-related
// treatment or evaluation events.  The fact that a patient has data satisfying a scheduled time point is sent in the CSS segment,
// sequence 2.  The CM2 segment describes the scheduled time points in general.
type CM2 struct {
	HL7                          HL7Name `hl7:",name=CM2,type=s"`
	SetID                        SI      `hl7:"1,seq,len=4,display=Set ID - CM2"`
	ScheduledTimePoint           CWE     `hl7:"2,required,len=250,display=Scheduled Time Point"`
	DescriptionOfTimePoint       ST      `hl7:"3,len=300,display=Description of Time Point"`
	EventsScheduledThisTimePoint []CWE   `hl7:"4,required,max=200,len=250,display=Events Scheduled This Time Point"`
}

// Clear Notification
//
// The clear equipment notification segment contains the data necessary to allow the receiving equipment to clear any associated
// notifications.
type CNS struct {
	HL7                                 HL7Name `hl7:",name=CNS,type=s"`
	StartingNotificationReferenceNumber NM      `hl7:"1,len=20,display=Starting Notification Reference Number"`
	EndingNotificationReferenceNumber   NM      `hl7:"2,len=20,display=Ending Notification Reference Number"`
	StartingNotificationDateTime        DTM     `hl7:"3,len=24,format=YMDHM,display=Starting Notification Date/Time"`
	EndingNotificationDateTime          DTM     `hl7:"4,len=24,format=YMDHM,display=Ending Notification Date/Time"`
	StartingNotificationCode            *CWE    `hl7:"5,len=705,display=Starting Notification Code"`
	EndingNotificationCode              *CWE    `hl7:"6,len=705,display=Ending Notification Code"`
}

// Clinical Study Phase
//
// The CSP segment contains information on a patients status for a particular phase of the study. This segment is optional
// and is useful when a study has different evaluation intervals within it. (See section 7.8.1, "HL7 Attribute Table - CSR
// - Clinical Study Registration," and section 7.6.1.2, "Phase of a clinical trial:.") The CSP segment is implemented on
// a study-specific basis for messaging purposes. The fact that the patient has entered a phase of the study that represents
// a certain treatment approach may need to be messaged to other systems, like pharmacy, nursing, or order entry. It is also
// important to sponsors and data management centers for tracking patient progress through the study and monitoring the
// data schedule defined for each phase. It may subsume OBR and OBX segments that follow it to indicate that these data describe
// the phase.
type CSP struct {
	HL7                     HL7Name `hl7:",name=CSP,type=s"`
	StudyPhaseIdentifier    CWE     `hl7:"1,required,len=705,display=Study Phase Identifier"`
	DateTimeStudyPhaseBegan DTM     `hl7:"2,required,len=24,format=YMDHM,display=Date/time Study Phase Began"`
	DateTimeStudyPhaseEnded DTM     `hl7:"3,len=24,format=YMDHM,display=Date/time Study Phase Ended"`
	StudyPhaseEvaluability  *CWE    `hl7:"4,conditional,len=705,display=Study Phase Evaluability"`
}

// Clinical Study Registration
//
// The CSR segment will contain fundamental administrative and regulatory information required to document a patients
// enrollment on a clinical trial. This segment is all that is required if one needs to message another system that an enrollment
// has taken place, i.e., from clinical trials to pharmacy, accounting, or order entry systems. The CSR segment may also be
// used to identify that OBR, OBX, RXA, and RXR segments that follow represent data applicable to the identified study.
type CSR struct {
	HL7                                HL7Name `hl7:",name=CSR,type=s"`
	SponsorStudyID                     EI      `hl7:"1,required,len=427,display=Sponsor Study ID"`
	AlternateStudyID                   *EI     `hl7:"2,len=427,display=Alternate Study ID"`
	InstitutionRegisteringThePatient   *CWE    `hl7:"3,len=705,display=Institution Registering the Patient"`
	SponsorPatientID                   CX      `hl7:"4,required,len=1913,display=Sponsor Patient ID"`
	AlternatePatientID                 *CX     `hl7:"5,len=1913,display=Alternate Patient ID - CSR"`
	DateTimeOfPatientStudyRegistration DTM     `hl7:"6,required,len=24,format=YMDHM,display=Date/Time Of Patient Study Registration"`
	PersonPerformingStudyRegistration  []XCN   `hl7:"7,len=3220,display=Person Performing Study Registration"`
	StudyAuthorizingProvider           []XCN   `hl7:"8,required,len=3220,display=Study Authorizing Provider"`
	DateTimePatientStudyConsentSigned  DTM     `hl7:"9,conditional,len=24,format=YMDHM,display=Date/time Patient Study Consent Signed"`
	PatientStudyEligibilityStatus      *CWE    `hl7:"10,conditional,len=705,display=Patient Study Eligibility Status"`
	StudyRandomizationDateTime         []DTM   `hl7:"11,max=3,len=24,format=YMDHM,display=Study Randomization Date/time"`
	RandomizedStudyArm                 []CWE   `hl7:"12,max=3,len=705,display=Randomized Study Arm"`
	StratumForStudyRandomization       []CWE   `hl7:"13,max=3,len=705,display=Stratum for Study Randomization"`
	PatientEvaluabilityStatus          *CWE    `hl7:"14,conditional,len=705,display=Patient Evaluability Status"`
	DateTimeEndedStudy                 DTM     `hl7:"15,conditional,len=24,format=YMDHM,display=Date/Time Ended Study"`
	ReasonEndedStudy                   *CWE    `hl7:"16,conditional,len=705,display=Reason Ended Study"`
}

// Clinical Study Data Schedule Segment
//
// The Clinical Study Data Schedule (CSS) segment is optional depending on whether messaging of study data needs to be linked
// to the scheduled data time points for the study. (See Section 7.6.1.3, " Data schedule: .") The CSS segment enables communication
// of data schedules and adherence that ranges from the basic to the elaborate. Use of the segment must be planned for each implementation.
// Each CSS segment will subsume observation and drug administration segments that follow, indicating that they satisfy
// this scheduled time point.
type CSS struct {
	HL7                            HL7Name `hl7:",name=CSS,type=s"`
	StudyScheduledTimePoint        CWE     `hl7:"1,required,len=705,display=Study Scheduled Time Point"`
	StudyScheduledPatientTimePoint DTM     `hl7:"2,len=24,format=YMDHM,display=Study Scheduled Patient Time Point"`
	StudyQualityControlCodes       []CWE   `hl7:"3,max=3,len=705,display=Study Quality Control Codes"`
}

// Contact Data
//
// The CTD segment may identify any contact personnel associated with a patient referral message and its related transactions.
// The CTD segment will be paired with a PRD segment. The PRD segment contains data specifically focused on provider information
// in a referral. While it is important in an inter-enterprise transaction to transmit specific information regarding the
// providers involved (referring and referred-to), it may also be important to identify the contact personnel associated
// with the given provider. For example, a provider receiving a referral may need to know the office manager or the billing
// person at the institution of the provider who sent the referral. This segment allows for multiple contact personnel to
// be associated with a single provider.
type CTD struct {
	HL7                             HL7Name `hl7:",name=CTD,type=s"`
	ContactRole                     []CWE   `hl7:"1,required,len=705,table=0131,display=Contact Role"`
	ContactName                     []XPN   `hl7:"2,len=250,display=Contact Name"`
	ContactAddress                  []XAD   `hl7:"3,len=2915,display=Contact Address"`
	ContactLocation                 *PL     `hl7:"4,len=60,display=Contact Location"`
	ContactCommunicationInformation []XTN   `hl7:"5,len=250,display=Contact Communication Information"`
	PreferredMethodOfContact        *CWE    `hl7:"6,len=705,table=0185,display=Preferred Method of Contact"`
	ContactIdentifiers              []PLN   `hl7:"7,len=100,display=Contact Identifiers"`
}

// Clinical Trial Identification
//
// The CTI segment is an optional segment that contains information to identify the clinical trial, phase and time point with
// which an order or result is associated.
type CTI struct {
	HL7                     HL7Name `hl7:",name=CTI,type=s"`
	SponsorStudyID          EI      `hl7:"1,required,len=427,display=Sponsor Study ID"`
	StudyPhaseIdentifier    *CWE    `hl7:"2,conditional,len=705,display=Study Phase Identifier"`
	StudyScheduledTimePoint *CWE    `hl7:"3,len=705,display=Study Scheduled Time Point"`
}

// Disability
//
// The disability segment contains information related to the disability of a person. This segment was created instead of
// adding disability attributes to each segment that contains a person (to which disability may apply). This is an optional
// segment that can be used to send disability information about a person already defined by the Patient Administration Chapter.
// The disabled person code and identifier allow for the association of the disability information to the person.
type DB1 struct {
	HL7                        HL7Name `hl7:",name=DB1,type=s"`
	SetID                      SI      `hl7:"1,seq,required,len=4,display=Set ID - DB1"`
	DisabledPersonCode         IS      `hl7:"2,len=2,table=0334,display=Disabled Person Code"`
	DisabledPersonIdentifier   []CX    `hl7:"3,len=250,display=Disabled Person Identifier"`
	DisabledIndicator          ID      `hl7:"4,len=1,table=0136,display=Disabled Indicator"`
	DisabilityStartDate        DT      `hl7:"5,len=8,format=YMD,display=Disability Start Date"`
	DisabilityEndDate          DT      `hl7:"6,len=8,format=YMD,display=Disability End Date"`
	DisabilityReturnToWorkDate DT      `hl7:"7,len=8,format=YMD,display=Disability Return to Work Date"`
	DisabilityUnableToWorkDate DT      `hl7:"8,len=8,format=YMD,display=Disability Unable to Work Date"`
}

// Diagnosis
//
// The DG1 segment contains patient diagnosis information of various types, for example, admitting, primary, etc. The DG1
// segment is used to send multiple diagnoses (for example, for medical records encoding). It is also used when the FT1-19
// - Diagnosis Code - FT1 does not provide sufficient information for a billing system. This diagnosis coding should be distinguished
// from the clinical problem segment used by caregivers to manage the patient (see Chapter 12, Patient Care). Coding methodologies
// are also defined.
type DG1 struct {
	HL7                             HL7Name `hl7:",name=DG1,type=s"`
	SetID                           SI      `hl7:"1,seq,required,len=4,display=Set ID - DG1"`
	DiagnosisCodingMethod           ST      `hl7:"2,display=Diagnosis Coding Method"`
	DiagnosisCode                   CWE     `hl7:"3,required,len=250,table=0051,display=Diagnosis Code - DG1"`
	DiagnosisDescription            ST      `hl7:"4,display=Diagnosis Description"`
	DiagnosisDateTime               DTM     `hl7:"5,len=24,format=YMDHM,display=Diagnosis Date/Time"`
	DiagnosisType                   IS      `hl7:"6,required,len=2,table=0052,display=Diagnosis Type"`
	MajorDiagnosticCategory         ST      `hl7:"7,display=Major Diagnostic Category"`
	DiagnosticRelatedGroup          ST      `hl7:"8,display=Diagnostic Related Group"`
	DRGApprovalIndicator            ST      `hl7:"9,display=DRG Approval Indicator"`
	DRGGrouperReviewCode            ST      `hl7:"10,display=DRG Grouper Review Code"`
	OutlierType                     ST      `hl7:"11,display=Outlier Type"`
	OutlierDays                     ST      `hl7:"12,display=Outlier Days"`
	OutlierCost                     ST      `hl7:"13,display=Outlier Cost"`
	GrouperVersionAndType           ST      `hl7:"14,display=Grouper Version And Type"`
	DiagnosisPriority               ID      `hl7:"15,len=2,table=0359,display=Diagnosis Priority"`
	DiagnosingClinician             []XCN   `hl7:"16,len=250,display=Diagnosing Clinician"`
	DiagnosisClassification         IS      `hl7:"17,len=3,table=0228,display=Diagnosis Classification"`
	ConfidentialIndicator           ID      `hl7:"18,len=1,table=0136,display=Confidential Indicator"`
	AttestationDateTime             DTM     `hl7:"19,len=24,format=YMDHM,display=Attestation Date/Time"`
	DiagnosisIdentifier             *EI     `hl7:"20,conditional,len=427,display=Diagnosis Identifier"`
	DiagnosisActionCode             ID      `hl7:"21,conditional,len=1,table=0206,display=Diagnosis Action Code"`
	ParentDiagnosis                 *EI     `hl7:"22,conditional,len=427,display=Parent Diagnosis"`
	DRGCCLValueCode                 *CWE    `hl7:"23,len=705,table=0728,display=DRG CCL Value Code"`
	DRGGroupingUsage                ID      `hl7:"24,len=20,table=0136,display=DRG Grouping Usage"`
	DRGDiagnosisDeterminationStatus IS      `hl7:"25,len=20,table=0731,display=DRG Diagnosis Determination Status"`
	PresentOnAdmissionPOAIndicator  IS      `hl7:"26,len=1,table=0895,display=Present On Admission (POA) Indicator"`
}

// DRG Master File Information
//
// The Technical Steward for the DMI segment is Financial Management.
//
// The DMI segment contains the DRG related basic information, for example, relative weight, etc.  The DMI segment is used
// to send the fixed information assigned to a specific DRG.
type DMI struct {
	HL7                     HL7Name `hl7:",name=DMI,type=s"`
	DiagnosticRelatedGroup  *CNE    `hl7:"1,len=250,table=0055,display=Diagnostic Related Group"`
	MajorDiagnosticCategory *CNE    `hl7:"2,conditional,len=1,table=0118,display=Major Diagnostic Category"`
	LowerAndUpperTrimPoints *NR     `hl7:"3,conditional,len=7,display=Lower and Upper Trim Points"`
	AverageLengthOfStay     NM      `hl7:"4,conditional,len=5,display=Average Length of Stay"`
	RelativeWeight          NM      `hl7:"5,conditional,len=7,display=Relative Weight"`
}

// Diagnosis Related Group
//
// The DRG segment contains diagnoses-related grouping information of various types. The DRG segment is used to send the
// DRG information, for example, for billing and medical records encoding.
type DRG struct {
	HL7                        HL7Name `hl7:",name=DRG,type=s"`
	DiagnosticRelatedGroup     *CNE    `hl7:"1,len=250,table=0055,display=Diagnostic Related Group"`
	AssignedDateTime           DTM     `hl7:"2,len=24,format=YMDHM,display=DRG Assigned Date/Time"`
	ApprovalIndicator          ID      `hl7:"3,len=1,table=0136,display=DRG Approval Indicator"`
	GrouperReviewCode          IS      `hl7:"4,len=2,table=0056,display=DRG Grouper Review Code"`
	OutlierType                *CWE    `hl7:"5,len=250,table=0083,display=Outlier Type"`
	OutlierDays                NM      `hl7:"6,len=3,display=Outlier Days"`
	OutlierCost                *CP     `hl7:"7,len=12,display=Outlier Cost"`
	Payor                      IS      `hl7:"8,len=1,table=0229,display=DRG Payor"`
	OutlierReimbursement       *CP     `hl7:"9,len=9,display=Outlier Reimbursement"`
	ConfidentialIndicator      ID      `hl7:"10,len=1,table=0136,display=Confidential Indicator"`
	TransferType               IS      `hl7:"11,len=21,table=0415,display=DRG Transfer Type"`
	NameOfCoder                *XPN    `hl7:"12,len=1103,display=Name of Coder"`
	GrouperStatus              *CWE    `hl7:"13,len=705,table=0734,display=Grouper Status"`
	PCCLValueCode              *CWE    `hl7:"14,len=20,table=0136,display=PCCL Value Code"`
	EffectiveWeight            NM      `hl7:"15,len=5,display=Effective Weight"`
	MonetaryAmount             *MO     `hl7:"16,len=20,display=Monetary Amount"`
	StatusPatient              IS      `hl7:"17,len=20,table=0739,display=Status Patient"`
	GrouperSoftwareName        ST      `hl7:"18,len=100,display=Grouper Software Name"`
	GrouperSoftwareVersion     ST      `hl7:"19,len=100,display=Grouper Software Version"`
	StatusFinancialCalculation IS      `hl7:"20,len=20,table=0742,display=Status Financial Calculation"`
	RelativeDiscountSurcharge  *MO     `hl7:"21,len=20,display=Relative Discount/Surcharge"`
	BasicCharge                *MO     `hl7:"22,len=20,display=Basic Charge"`
	TotalCharge                *MO     `hl7:"23,len=20,display=Total Charge"`
	DiscountSurcharge          *MO     `hl7:"24,len=20,display=Discount/Surcharge"`
	CalculatedDays             NM      `hl7:"25,len=5,display=Calculated Days"`
	StatusGender               IS      `hl7:"26,len=20,table=0749,display=Status Gender"`
	StatusAge                  IS      `hl7:"27,len=20,table=0749,display=Status Age"`
	StatusLengthOfStay         IS      `hl7:"28,len=20,table=0749,display=Status Length of Stay"`
	StatusSameDayFlag          IS      `hl7:"29,len=20,table=0749,display=Status Same Day Flag"`
	StatusSeparationMode       IS      `hl7:"30,len=20,table=0749,display=Status Separation Mode"`
	StatusWeightAtBirth        IS      `hl7:"31,len=20,table=0755,display=Status Weight at Birth"`
	StatusRespirationMinutes   IS      `hl7:"32,len=20,table=0757,display=Status Respiration Minutes"`
	StatusAdmission            IS      `hl7:"33,len=20,table=0759,display=Status Admission"`
}

// Continuation Pointer
//
// The DSC segment is used in the continuation protocol.
type DSC struct {
	HL7                 HL7Name `hl7:",name=DSC,type=s"`
	ContinuationPointer ST      `hl7:"1,len=180,display=Continuation Pointer"`
	ContinuationStyle   ID      `hl7:"2,len=1,table=0398,display=Continuation Style"`
}

// Display Data
//
// The DSP segment is used to contain data that has been preformatted by the sender for display. The semantic content of the
// data is lost; the data is simply treated as lines of text.
type DSP struct {
	HL7               HL7Name `hl7:",name=DSP,type=s"`
	SetID             SI      `hl7:"1,seq,len=4,display=Set ID - DSP"`
	DisplayLevel      SI      `hl7:"2,len=4,display=Display Level"`
	DataLine          TX      `hl7:"3,required,len=300,display=Data Line"`
	LogicalBreakPoint ST      `hl7:"4,len=2,display=Logical Break Point"`
	ResultID          TX      `hl7:"5,len=20,display=Result ID"`
}

// Equipment Command
//
// The equipment command segment contains the information required to notify the receiving component what is to happen.
type ECD struct {
	HL7                     HL7Name `hl7:",name=ECD,type=s"`
	ReferenceCommandNumber  NM      `hl7:"1,required,len=20,display=Reference Command Number"`
	RemoteControlCommand    CWE     `hl7:"2,required,len=250,table=0368,display=Remote Control Command"`
	ResponseRequired        ID      `hl7:"3,len=80,table=0136,display=Response Required"`
	RequestedCompletionTime TQ      `hl7:"4,len=200,display=Requested Completion Time"`
	Parameters              []TX    `hl7:"5,len=65536,display=Parameters"`
}

// Equipment Command Response
//
// The equipment command response segment contains the receiving component's response to the previously received command.
type ECR struct {
	HL7                       HL7Name `hl7:",name=ECR,type=s"`
	CommandResponse           CWE     `hl7:"1,required,len=705,table=0387,display=Command Response"`
	DateTimeCompleted         DTM     `hl7:"2,required,len=24,format=YMDHM,display=Date/Time Completed"`
	CommandResponseParameters []TX    `hl7:"3,len=65536,display=Command Response Parameters"`
}

// Educational Detail
//
// The EDU segment adds detailed educational information to the staff member identified by the STF segment. An EDU segment
// may optionally follow an STF segment. An EDU segment must always have been preceded by a corresponding STF segment.
type EDU struct {
	HL7                                         HL7Name `hl7:",name=EDU,type=s"`
	SetID                                       SI      `hl7:"1,seq,required,len=60,display=Set ID – EDU"`
	AcademicDegree                              IS      `hl7:"2,len=10,table=0360,display=Academic Degree"`
	AcademicDegreeProgramDateRange              *DR     `hl7:"3,len=52,display=Academic Degree Program Date Range"`
	AcademicDegreeProgramParticipationDateRange *DR     `hl7:"4,len=52,display=Academic Degree Program Participation Date Range"`
	AcademicDegreeGrantedDate                   DT      `hl7:"5,len=8,format=YMD,display=Academic Degree Granted Date"`
	School                                      *XON    `hl7:"6,len=250,display=School"`
	SchoolTypeCode                              *CWE    `hl7:"7,len=250,table=0402,display=School Type Code"`
	SchoolAddress                               *XAD    `hl7:"8,len=250,display=School Address"`
	MajorFieldOfStudy                           []CWE   `hl7:"9,len=250,display=Major Field of Study"`
}

// Embedded Query Language
//
// The EQL segment is used to define queries using select statements based on the query language of choice (e.g., SQL).  Refer
// to the functional chapters for the lists of HL7-defined EQL select statements.
type EQL struct {
	HL7                     HL7Name `hl7:",name=EQL,type=s"`
	QueryTag                ST      `hl7:"1,len=32,display=Query Tag"`
	QueryResponseFormatCode ID      `hl7:"2,required,len=1,table=0106,display=Query/Response Format Code"`
	QueryName               CE      `hl7:"3,required,len=250,display=EQL Query Name"`
	QueryStatement          ST      `hl7:"4,required,len=4096,display=EQL Query Statement"`
}

// Equipment/log Service
//
// The equipment log/service segment is the data necessary to maintain an adequate audit trail of events that have occurred
// on a particular piece of equipment.
type EQP struct {
	HL7             HL7Name `hl7:",name=EQP,type=s"`
	EventType       CWE     `hl7:"1,required,len=705,table=0450,display=Event type"`
	FileName        ST      `hl7:"2,len=20,display=File Name"`
	StartDateTime   DTM     `hl7:"3,required,len=24,format=YMDHM,display=Start Date/Time"`
	EndDateTime     DTM     `hl7:"4,len=24,format=YMDHM,display=End Date/Time"`
	TransactionData FT      `hl7:"5,required,len=65536,display=Transaction Data"`
}

// Equipment Detail
//
// The equipment detail segment contains the data necessary to identify and maintain the equipment that is being used throughout
// the Laboratory Automation System.
type EQU struct {
	HL7                         HL7Name `hl7:",name=EQU,type=s"`
	EquipmentInstanceIdentifier EI      `hl7:"1,required,len=427,display=Equipment Instance Identifier"`
	EventDateTime               DTM     `hl7:"2,required,len=24,format=YMDHM,display=Event Date/Time"`
	EquipmentState              *CWE    `hl7:"3,conditional,len=705,table=0365,display=Equipment State"`
	LocalRemoteControlState     *CWE    `hl7:"4,len=705,table=0366,display=Local/Remote Control State"`
	AlertLevel                  *CWE    `hl7:"5,len=705,table=0367,display=Alert Level"`
}

// Event replay query
//
// The ERQ segment is used to issue queries where the desired response is formatted as an event replay response message.  This
// enables the querying application to request detailed event data from an application that supports this feature, such
// that it may no longer be necessary for it to capture and store all event information at the time of the original trigger event.
//
type ERQ struct {
	HL7                HL7Name `hl7:",name=ERQ,type=s"`
	QueryTag           ST      `hl7:"1,len=32,display=Query Tag"`
	EventIdentifier    CE      `hl7:"2,required,len=250,display=Event Identifier"`
	InputParameterList []QIP   `hl7:"3,len=256,display=Input Parameter List"`
}

// Error
//
// The ERR segment is used to add error comments to acknowledgment messages.
type ERR struct {
	HL7                       HL7Name `hl7:",name=ERR,type=s"`
	ErrorCodeAndLocation      []ELD   `hl7:"1,len=493,display=Error Code and Location"`
	ErrorLocation             []ERL   `hl7:"2,len=18,display=Error Location"`
	HL7ErrorCode              CWE     `hl7:"3,required,len=705,table=0357,display=HL7 Error Code"`
	Severity                  ID      `hl7:"4,required,len=2,table=0516,display=Severity"`
	ApplicationErrorCode      *CWE    `hl7:"5,len=705,table=0533,display=Application Error Code"`
	ApplicationErrorParameter []ST    `hl7:"6,max=10,len=80,display=Application Error Parameter"`
	DiagnosticInformation     TX      `hl7:"7,len=2048,display=Diagnostic Information"`
	UserMessage               TX      `hl7:"8,len=250,display=User Message"`
	InformPersonIndicator     []IS    `hl7:"9,len=20,table=0517,display=Inform Person Indicator"`
	OverrideType              *CWE    `hl7:"10,len=705,table=0518,display=Override Type"`
	OverrideReasonCode        []CWE   `hl7:"11,len=705,table=0519,display=Override Reason Code"`
	HelpDeskContactPoint      []XTN   `hl7:"12,len=652,display=Help Desk Contact Point"`
}

// Event Type
//
// The EVN segment is used to communicate necessary trigger event information to receiving applications. Valid event types
// for all chapters are contained in HL7 Table 0003 - Event Type.
type EVN struct {
	HL7                  HL7Name `hl7:",name=EVN,type=s"`
	EventTypeCode        ID      `hl7:"1,len=3,table=0003,display=Event Type Code"`
	RecordedDateTime     DTM     `hl7:"2,required,len=24,format=YMDHM,display=Recorded Date/Time"`
	DateTimePlannedEvent DTM     `hl7:"3,len=24,format=YMDHM,display=Date/Time Planned Event"`
	EventReasonCode      IS      `hl7:"4,len=3,table=0062,display=Event Reason Code"`
	OperatorID           []XCN   `hl7:"5,len=250,table=0188,display=Operator ID"`
	EventOccurred        DTM     `hl7:"6,len=24,format=YMDHM,display=Event Occurred"`
	EventFacility        *HD     `hl7:"7,len=241,display=Event Facility"`
}

// Facility
type FAC struct {
	HL7                                 HL7Name `hl7:",name=FAC,type=s"`
	FacilityID                          EI      `hl7:"1,required,len=427,display=Facility ID-FAC"`
	FacilityType                        ID      `hl7:"2,len=1,table=0331,display=Facility Type"`
	FacilityAddress                     []XAD   `hl7:"3,required,len=2915,display=Facility Address"`
	FacilityTelecommunication           XTN     `hl7:"4,required,len=2743,display=Facility Telecommunication"`
	ContactPerson                       []XCN   `hl7:"5,len=3220,display=Contact Person"`
	ContactTitle                        []ST    `hl7:"6,len=60,display=Contact Title"`
	ContactAddress                      []XAD   `hl7:"7,len=2915,display=Contact Address"`
	ContactTelecommunication            []XTN   `hl7:"8,len=2743,display=Contact Telecommunication"`
	SignatureAuthority                  []XCN   `hl7:"9,required,len=3220,display=Signature Authority"`
	SignatureAuthorityTitle             ST      `hl7:"10,len=199,display=Signature Authority Title"`
	SignatureAuthorityAddress           []XAD   `hl7:"11,len=2915,display=Signature Authority Address"`
	SignatureAuthorityTelecommunication *XTN    `hl7:"12,len=2743,display=Signature Authority Telecommunication"`
}

// File Header
//
// The FHS segment is used to head a file (group of batches) as defined in Section 2.10.3, "HL7 batch protocol".
type FHS struct {
	HL7                         HL7Name `hl7:",name=FHS,type=s"`
	FileFieldSeparator          ST      `hl7:"1,required,len=1,display=File Field Separator"`
	FileEncodingCharacters      ST      `hl7:"2,required,len=4,display=File Encoding Characters"`
	FileSendingApplication      *HD     `hl7:"3,len=227,display=File Sending Application"`
	FileSendingFacility         *HD     `hl7:"4,len=227,display=File Sending Facility"`
	FileReceivingApplication    *HD     `hl7:"5,len=227,display=File Receiving Application"`
	FileReceivingFacility       *HD     `hl7:"6,len=227,display=File Receiving Facility"`
	FileCreationDateTime        DTM     `hl7:"7,len=24,format=YMDHM,display=File Creation Date/Time"`
	FileSecurity                ST      `hl7:"8,len=40,display=File Security"`
	FileNameID                  ST      `hl7:"9,len=20,display=File Name/ID"`
	FileHeaderComment           ST      `hl7:"10,len=80,display=File Header Comment"`
	FileControlID               ST      `hl7:"11,len=20,display=File Control ID"`
	ReferenceFileControlID      ST      `hl7:"12,len=20,display=Reference File Control ID"`
	FileSendingNetworkAddress   *HD     `hl7:"13,len=227,display=File Sending Network Address"`
	FileReceivingNetworkAddress *HD     `hl7:"14,len=227,display=File Receiving Network Address"`
}

// Financial Transaction
//
// The FT1 segment contains the detail data necessary to post charges, payments, adjustments, etc., to patient accounting
// records.
type FT1 struct {
	HL7                                        HL7Name `hl7:",name=FT1,type=s"`
	SetID                                      SI      `hl7:"1,seq,len=4,display=Set ID - FT1"`
	TransactionID                              ST      `hl7:"2,len=12,display=Transaction ID"`
	TransactionBatchID                         ST      `hl7:"3,len=10,display=Transaction Batch ID"`
	TransactionDate                            DR      `hl7:"4,required,len=53,display=Transaction Date"`
	TransactionPostingDate                     DTM     `hl7:"5,len=24,format=YMDHM,display=Transaction Posting Date"`
	TransactionType                            IS      `hl7:"6,required,len=8,table=0017,display=Transaction Type"`
	TransactionCode                            CWE     `hl7:"7,required,len=250,table=0132,display=Transaction Code"`
	TransactionDescription                     ST      `hl7:"8,display=Transaction Description"`
	TransactionDescriptionAlt                  ST      `hl7:"9,display=Transaction Description - Alt"`
	TransactionQuantity                        NM      `hl7:"10,len=6,display=Transaction Quantity"`
	TransactionAmountExtended                  *CP     `hl7:"11,len=12,display=Transaction Amount - Extended"`
	TransactionAmountUnit                      *CP     `hl7:"12,len=12,display=Transaction Amount - Unit"`
	DepartmentCode                             *CWE    `hl7:"13,len=250,table=0049,display=Department Code"`
	InsurancePlanID                            *CWE    `hl7:"14,len=250,table=0072,display=Insurance Plan ID"`
	InsuranceAmount                            *CP     `hl7:"15,len=12,display=Insurance Amount"`
	AssignedPatientLocation                    *PL     `hl7:"16,len=80,display=Assigned Patient Location"`
	FeeSchedule                                IS      `hl7:"17,len=1,table=0024,display=Fee Schedule"`
	PatientType                                IS      `hl7:"18,len=2,table=0018,display=Patient Type"`
	DiagnosisCode                              []CWE   `hl7:"19,len=250,table=0051,display=Diagnosis Code - FT1"`
	PerformedByCode                            []XCN   `hl7:"20,len=250,table=0084,display=Performed By Code"`
	OrderedByCode                              []XCN   `hl7:"21,len=250,display=Ordered By Code"`
	UnitCost                                   *CP     `hl7:"22,len=12,display=Unit Cost"`
	FillerOrderNumber                          *EI     `hl7:"23,len=427,display=Filler Order Number"`
	EnteredByCode                              []XCN   `hl7:"24,len=250,display=Entered By Code"`
	ProcedureCode                              *CNE    `hl7:"25,len=705,table=0088,display=Procedure Code"`
	ProcedureCodeModifier                      []CNE   `hl7:"26,len=705,table=0340,display=Procedure Code Modifier"`
	AdvancedBeneficiaryNoticeCode              *CWE    `hl7:"27,len=250,table=0339,display=Advanced Beneficiary Notice Code"`
	MedicallyNecessaryDuplicateProcedureReason *CWE    `hl7:"28,len=705,table=0476,display=Medically Necessary Duplicate Procedure Reason."`
	NDCCode                                    *CWE    `hl7:"29,len=250,table=0549,display=NDC Code"`
	PaymentReferenceID                         *CX     `hl7:"30,len=250,display=Payment Reference ID"`
	TransactionReferenceKey                    []SI    `hl7:"31,len=4,display=Transaction Reference Key"`
}

// File Trailer
//
// The FTS segment defines the end of a file.
type FTS struct {
	HL7                HL7Name `hl7:",name=FTS,type=s"`
	FileBatchCount     NM      `hl7:"1,len=10,display=File Batch Count"`
	FileTrailerComment ST      `hl7:"2,len=80,display=File Trailer Comment"`
}

// Goal Detail
//
// The goal detail segment contains the data necessary to add, update, correct, and delete the goals for an individual.
type GOL struct {
	HL7                         HL7Name `hl7:",name=GOL,type=s"`
	ActionCode                  ID      `hl7:"1,required,len=2,table=0287,display=Action Code"`
	ActionDateTime              DTM     `hl7:"2,required,len=24,format=YMDHM,display=Action Date/Time"`
	GoalID                      CWE     `hl7:"3,required,len=705,display=Goal ID"`
	GoalInstanceID              EI      `hl7:"4,required,len=60,display=Goal Instance ID"`
	EpisodeOfCareID             *EI     `hl7:"5,len=60,display=Episode of Care ID"`
	GoalListPriority            NM      `hl7:"6,len=60,display=Goal List Priority"`
	GoalEstablishedDateTime     DTM     `hl7:"7,len=24,format=YMDHM,display=Goal Established Date/Time"`
	ExpectedGoalAchieveDateTime DTM     `hl7:"8,len=24,format=YMDHM,display=Expected Goal Achieve Date/Time"`
	GoalClassification          *CWE    `hl7:"9,len=705,display=Goal Classification"`
	GoalManagementDiscipline    *CWE    `hl7:"10,len=705,display=Goal Management Discipline"`
	CurrentGoalReviewStatus     *CWE    `hl7:"11,len=705,display=Current Goal Review Status"`
	CurrentGoalReviewDateTime   DTM     `hl7:"12,len=24,format=YMDHM,display=Current Goal Review Date/Time"`
	NextGoalReviewDateTime      DTM     `hl7:"13,len=24,format=YMDHM,display=Next Goal Review Date/Time"`
	PreviousGoalReviewDateTime  DTM     `hl7:"14,len=24,format=YMDHM,display=Previous Goal Review Date/Time"`
	GoalReviewInterval          *TQ     `hl7:"15,len=200,display=Goal Review Interval"`
	GoalEvaluation              *CWE    `hl7:"16,len=705,display=Goal Evaluation"`
	GoalEvaluationComment       []ST    `hl7:"17,len=300,display=Goal Evaluation Comment"`
	GoalLifeCycleStatus         *CWE    `hl7:"18,len=705,display=Goal Life Cycle Status"`
	GoalLifeCycleStatusDateTime DTM     `hl7:"19,len=24,format=YMDHM,display=Goal Life Cycle Status Date/Time"`
	GoalTargetType              []CWE   `hl7:"20,len=705,display=Goal Target Type"`
	GoalTargetName              []XPN   `hl7:"21,len=250,display=Goal Target Name"`
	MoodCode                    *CNE    `hl7:"22,conditional,len=705,table=0725,display=Mood Code"`
}

// Grouping/Reimbursement - Visit
//
// These fields are used in grouping and reimbursement for CMS APCs. Please refer to the "Outpatient Prospective Payment
// System Final Rule" ("OPPS Final Rule") issued by CMS.
//
// The GP1 segment is specific to the US and may not be implemented in non-US systems.
type GP1 struct {
	HL7                         HL7Name `hl7:",name=GP1,type=s"`
	TypeOfBillCode              IS      `hl7:"1,required,len=3,table=0455,display=Type of Bill Code"`
	RevenueCode                 []IS    `hl7:"2,len=3,table=0456,display=Revenue Code"`
	OverallClaimDispositionCode IS      `hl7:"3,len=1,table=0457,display=Overall Claim Disposition Code"`
	OCEEditsPerVisitCode        []IS    `hl7:"4,len=2,table=0458,display=OCE Edits per Visit Code"`
	OutlierCost                 *CP     `hl7:"5,len=12,display=Outlier Cost"`
}

// Grouping/Reimbursement - Procedure Line Item
//
// This segment is used for items that pertain to each HCPC/CPT line item.
//
// The GP2 segment is specific to the US and may not be implemented in non-US systems.
type GP2 struct {
	HL7                                 HL7Name `hl7:",name=GP2,type=s"`
	RevenueCode                         IS      `hl7:"1,len=3,table=0456,display=Revenue Code"`
	NumberOfServiceUnits                NM      `hl7:"2,len=7,display=Number of Service Units"`
	Charge                              *CP     `hl7:"3,len=12,display=Charge"`
	ReimbursementActionCode             IS      `hl7:"4,len=1,table=0459,display=Reimbursement Action Code"`
	DenialOrRejectionCode               IS      `hl7:"5,len=1,table=0460,display=Denial or Rejection Code"`
	OCEEditCode                         []IS    `hl7:"6,len=3,table=0458,display=OCE Edit Code"`
	AmbulatoryPaymentClassificationCode *CWE    `hl7:"7,len=250,table=0466,display=Ambulatory Payment Classification Code"`
	ModifierEditCode                    []IS    `hl7:"8,len=1,table=0467,display=Modifier Edit Code"`
	PaymentAdjustmentCode               IS      `hl7:"9,len=1,table=0468,display=Payment Adjustment Code"`
	PackagingStatusCode                 IS      `hl7:"10,len=1,table=0469,display=Packaging Status Code"`
	ExpectedCMSPaymentAmount            *CP     `hl7:"11,len=12,display=Expected CMS Payment Amount"`
	ReimbursementTypeCode               IS      `hl7:"12,len=2,table=0470,display=Reimbursement Type Code"`
	CoPayAmount                         *CP     `hl7:"13,len=12,display=Co-Pay Amount"`
	PayRatePerServiceUnit               NM      `hl7:"14,len=4,display=Pay Rate per Service Unit"`
}

// Guarantor
//
// The GT1 segment contains guarantor (e.g., the person or the organization with financial responsibility for payment of
// a patient account) data for patient and insurance billing applications.
type GT1 struct {
	HL7                                HL7Name `hl7:",name=GT1,type=s"`
	SetID                              SI      `hl7:"1,seq,required,len=4,display=Set ID - GT1"`
	GuarantorNumber                    []CX    `hl7:"2,len=250,display=Guarantor Number"`
	GuarantorName                      []XPN   `hl7:"3,required,len=250,display=Guarantor Name"`
	GuarantorSpouseName                []XPN   `hl7:"4,len=250,display=Guarantor Spouse Name"`
	GuarantorAddress                   []XAD   `hl7:"5,len=250,display=Guarantor Address"`
	GuarantorPhNumHome                 []XTN   `hl7:"6,len=250,display=Guarantor Ph Num - Home"`
	GuarantorPhNumBusiness             []XTN   `hl7:"7,len=250,display=Guarantor Ph Num - Business"`
	GuarantorDateTimeOfBirth           DTM     `hl7:"8,len=24,format=YMDHM,display=Guarantor Date/Time Of Birth"`
	GuarantorAdministrativeSex         IS      `hl7:"9,len=1,table=0001,display=Guarantor Administrative Sex"`
	GuarantorType                      IS      `hl7:"10,len=2,table=0068,display=Guarantor Type"`
	GuarantorRelationship              *CWE    `hl7:"11,len=250,table=0063,display=Guarantor Relationship"`
	GuarantorSSN                       ST      `hl7:"12,len=11,display=Guarantor SSN"`
	GuarantorDateBegin                 DT      `hl7:"13,len=8,format=YMD,display=Guarantor Date - Begin"`
	GuarantorDateEnd                   DT      `hl7:"14,len=8,format=YMD,display=Guarantor Date - End"`
	GuarantorPriority                  NM      `hl7:"15,len=2,display=Guarantor Priority"`
	GuarantorEmployerName              []XPN   `hl7:"16,len=250,display=Guarantor Employer Name"`
	GuarantorEmployerAddress           []XAD   `hl7:"17,len=250,display=Guarantor Employer Address"`
	GuarantorEmployerPhoneNumber       []XTN   `hl7:"18,len=250,display=Guarantor Employer Phone Number"`
	GuarantorEmployeeIDNumber          []CX    `hl7:"19,len=250,display=Guarantor Employee ID Number"`
	GuarantorEmploymentStatus          IS      `hl7:"20,len=2,table=0066,display=Guarantor Employment Status"`
	GuarantorOrganizationName          []XON   `hl7:"21,len=250,display=Guarantor Organization Name"`
	GuarantorBillingHoldFlag           ID      `hl7:"22,len=1,table=0136,display=Guarantor Billing Hold Flag"`
	GuarantorCreditRatingCode          *CWE    `hl7:"23,len=250,table=0341,display=Guarantor Credit Rating Code"`
	GuarantorDeathDateAndTime          DTM     `hl7:"24,len=24,format=YMDHM,display=Guarantor Death Date And Time"`
	GuarantorDeathFlag                 ID      `hl7:"25,len=1,table=0136,display=Guarantor Death Flag"`
	GuarantorChargeAdjustmentCode      *CWE    `hl7:"26,len=250,table=0218,display=Guarantor Charge Adjustment Code"`
	GuarantorHouseholdAnnualIncome     *CP     `hl7:"27,len=10,display=Guarantor Household Annual Income"`
	GuarantorHouseholdSize             NM      `hl7:"28,len=3,display=Guarantor Household Size"`
	GuarantorEmployerIDNumber          []CX    `hl7:"29,len=250,display=Guarantor Employer ID Number"`
	GuarantorMaritalStatusCode         *CWE    `hl7:"30,len=250,table=0002,display=Guarantor Marital Status Code"`
	GuarantorHireEffectiveDate         DT      `hl7:"31,len=8,format=YMD,display=Guarantor Hire Effective Date"`
	EmploymentStopDate                 DT      `hl7:"32,len=8,format=YMD,display=Employment Stop Date"`
	LivingDependency                   IS      `hl7:"33,len=2,table=0223,display=Living Dependency"`
	AmbulatoryStatus                   []IS    `hl7:"34,len=2,table=0009,display=Ambulatory Status"`
	Citizenship                        []CWE   `hl7:"35,len=705,table=0171,display=Citizenship"`
	PrimaryLanguage                    *CWE    `hl7:"36,len=705,table=0296,display=Primary Language"`
	LivingArrangement                  IS      `hl7:"37,len=2,table=0220,display=Living Arrangement"`
	PublicityCode                      *CWE    `hl7:"38,len=705,table=0215,display=Publicity Code"`
	ProtectionIndicator                ID      `hl7:"39,len=1,table=0136,display=Protection Indicator"`
	StudentIndicator                   IS      `hl7:"40,len=2,table=0231,display=Student Indicator"`
	Religion                           *CWE    `hl7:"41,len=705,table=0006,display=Religion"`
	MothersMaidenName                  []XPN   `hl7:"42,len=250,display=Mother's Maiden Name"`
	Nationality                        *CWE    `hl7:"43,len=705,table=0212,display=Nationality"`
	EthnicGroup                        []CWE   `hl7:"44,len=705,table=0189,display=Ethnic Group"`
	ContactPersonsName                 []XPN   `hl7:"45,len=250,display=Contact Person's Name"`
	ContactPersonsTelephoneNumber      []XTN   `hl7:"46,len=250,display=Contact Person's Telephone Number"`
	ContactReason                      *CWE    `hl7:"47,len=705,table=0212,display=Contact Reason"`
	ContactRelationship                IS      `hl7:"48,len=3,table=0063,display=Contact Relationship"`
	JobTitle                           ST      `hl7:"49,len=20,display=Job Title"`
	JobCodeClass                       *JCC    `hl7:"50,len=20,display=Job Code/Class"`
	GuarantorEmployersOrganizationName []XON   `hl7:"51,len=250,display=Guarantor Employer's Organization Name"`
	Handicap                           IS      `hl7:"52,len=2,table=0295,display=Handicap"`
	JobStatus                          IS      `hl7:"53,len=2,table=0311,display=Job Status"`
	GuarantorFinancialClass            *FC     `hl7:"54,len=50,display=Guarantor Financial Class"`
	GuarantorRace                      []CWE   `hl7:"55,len=250,table=0005,display=Guarantor Race"`
	GuarantorBirthPlace                ST      `hl7:"56,len=250,display=Guarantor Birth Place"`
	VIPIndicator                       IS      `hl7:"57,len=2,table=0099,display=VIP Indicator"`
}

// Patient Adverse Reaction Information
//
// The IAM segment contains person/patient adverse reaction information of various types. Most of this information will
// be derived from user-defined tables. Each IAM segment describes a single person/patient adverse reaction. This segment
// is used in lieu of the AL1 - Patient Allergy Information Segment to support action code/unique identifier mode update definition
// of repeating segments as defined in 2.10.4.2 in chapter 2, section 2.4.10, "Protocol for interpreting repeating segments
// or segment groups in an update Message." The AL1 segment is used to support Snapshot mode update definition as defined in
// 2.10.4.1.
type IAM struct {
	HL7                                  HL7Name `hl7:",name=IAM,type=s"`
	SetID                                SI      `hl7:"1,seq,required,len=4,display=Set ID - IAM"`
	AllergenTypeCode                     *CWE    `hl7:"2,len=705,table=0127,display=Allergen Type Code"`
	AllergenCodeMnemonicDescription      CWE     `hl7:"3,required,len=705,display=Allergen Code/Mnemonic/Description"`
	AllergySeverityCode                  *CWE    `hl7:"4,len=705,table=0128,display=Allergy Severity Code"`
	AllergyReactionCode                  []ST    `hl7:"5,len=15,display=Allergy Reaction Code"`
	AllergyActionCode                    CNE     `hl7:"6,required,len=250,table=0206,display=Allergy Action Code"`
	AllergyUniqueIdentifier              *EI     `hl7:"7,conditional,len=427,display=Allergy Unique Identifier"`
	ActionReason                         ST      `hl7:"8,len=60,display=Action Reason"`
	SensitivityToCausativeAgentCode      *CWE    `hl7:"9,len=705,table=0436,display=Sensitivity to Causative Agent Code"`
	AllergenGroupCodeMnemonicDescription *CWE    `hl7:"10,len=705,display=Allergen Group Code/Mnemonic/Description"`
	OnsetDate                            DT      `hl7:"11,len=8,format=YMD,display=Onset Date"`
	OnsetDateText                        ST      `hl7:"12,len=60,display=Onset Date Text"`
	ReportedDateTime                     DTM     `hl7:"13,len=8,format=YMDHM,display=Reported Date/Time"`
	ReportedBy                           *XPN    `hl7:"14,len=250,display=Reported By"`
	RelationshipToPatientCode            *CWE    `hl7:"15,len=705,table=0063,display=Relationship to Patient Code"`
	AlertDeviceCode                      *CWE    `hl7:"16,len=705,table=0437,display=Alert Device Code"`
	AllergyClinicalStatusCode            *CWE    `hl7:"17,len=705,table=0438,display=Allergy Clinical Status Code"`
	StatusedByPerson                     *XCN    `hl7:"18,len=250,display=Statused by Person"`
	StatusedByOrganization               *XON    `hl7:"19,len=250,display=Statused by Organization"`
	StatusedAtDateTime                   DTM     `hl7:"20,len=8,format=YMDHM,display=Statused at Date/Time"`
}

// Inventory Item Master
//
// The Inventory Item Master segment (IIM) contains information about the stock of product that can be used to fulfill an ordered
// test/service. All of the fields in this segment describe the test/service and other basic attributes pertaining to Service
// Item defined within an Other Observation/Service Item master file. This segment is related to centrally stocked or supply
// management concerns.
type IIM struct {
	HL7                           HL7Name `hl7:",name=IIM,type=s"`
	PrimaryKeyValue               CWE     `hl7:"1,required,len=250,display=Primary Key Value - IIM"`
	ServiceItemCode               CWE     `hl7:"2,required,len=250,display=Service Item Code"`
	InventoryLotNumber            ST      `hl7:"3,len=250,display=Inventory Lot Number"`
	InventoryExpirationDate       DTM     `hl7:"4,len=24,format=YMDHM,display=Inventory Expiration Date"`
	InventoryManufacturerName     *CWE    `hl7:"5,len=250,display=Inventory Manufacturer Name"`
	InventoryLocation             *CWE    `hl7:"6,len=250,display=Inventory Location"`
	InventoryReceivedDate         DTM     `hl7:"7,len=24,format=YMDHM,display=Inventory Received Date"`
	InventoryReceivedQuantity     NM      `hl7:"8,len=12,display=Inventory Received Quantity"`
	InventoryReceivedQuantityUnit *CWE    `hl7:"9,len=250,display=Inventory Received Quantity Unit"`
	InventoryReceivedItemCost     *MO     `hl7:"10,len=12,display=Inventory Received Item Cost"`
	InventoryOnHandDate           DTM     `hl7:"11,len=24,format=YMDHM,display=Inventory On Hand Date"`
	InventoryOnHandQuantity       NM      `hl7:"12,len=12,display=Inventory On Hand Quantity"`
	InventoryOnHandQuantityUnit   *CWE    `hl7:"13,len=250,display=Inventory On Hand Quantity Unit"`
	ProcedureCode                 *CNE    `hl7:"14,len=705,table=0088,display=Procedure Code"`
	ProcedureCodeModifier         []CNE   `hl7:"15,len=705,table=0340,display=Procedure Code Modifier"`
}

// Material Lot Segment
//
// The Material Lot segment (ILT) contains material information specific to a lot within an inventory location associated
// with the item in the IVT segment. This segment is similar to the IIM segment used with the limited inventory item master message.
type ILT struct {
	HL7                           HL7Name `hl7:",name=ILT,type=s"`
	SetID                         SI      `hl7:"1,seq,required,len=4,display=Set Id - ILT"`
	InventoryLotNumber            ST      `hl7:"2,required,len=250,display=Inventory Lot Number"`
	InventoryExpirationDate       DTM     `hl7:"3,len=24,format=YMDHM,display=Inventory Expiration Date"`
	InventoryReceivedDate         DTM     `hl7:"4,len=24,format=YMDHM,display=Inventory Received Date"`
	InventoryReceivedQuantity     NM      `hl7:"5,len=12,display=Inventory Received Quantity"`
	InventoryReceivedQuantityUnit *CWE    `hl7:"6,len=250,display=Inventory Received Quantity Unit"`
	InventoryReceivedItemCost     *MO     `hl7:"7,len=12,display=Inventory Received Item Cost"`
	InventoryOnHandDate           DTM     `hl7:"8,len=24,format=YMDHM,display=Inventory On Hand Date"`
	InventoryOnHandQuantity       NM      `hl7:"9,len=12,display=Inventory On Hand Quantity"`
	InventoryOnHandQuantityUnit   *CWE    `hl7:"10,len=250,display=Inventory On Hand Quantity Unit"`
}

// Insurance
//
// The IN1 segment contains insurance policy coverage information necessary to produce properly pro-rated and patient
// and insurance bills.
type IN1 struct {
	HL7                           HL7Name `hl7:",name=IN1,type=s"`
	SetID                         SI      `hl7:"1,seq,required,len=4,display=Set ID - IN1"`
	InsurancePlanID               CWE     `hl7:"2,required,len=250,table=0072,display=Insurance Plan ID"`
	InsuranceCompanyID            []CX    `hl7:"3,required,len=250,display=Insurance Company ID"`
	InsuranceCompanyName          []XON   `hl7:"4,len=250,display=Insurance Company Name"`
	InsuranceCompanyAddress       []XAD   `hl7:"5,len=250,display=Insurance Company Address"`
	InsuranceCoContactPerson      []XPN   `hl7:"6,len=250,display=Insurance Co Contact Person"`
	InsuranceCoPhoneNumber        []XTN   `hl7:"7,len=250,display=Insurance Co Phone Number"`
	GroupNumber                   ST      `hl7:"8,len=12,display=Group Number"`
	GroupName                     []XON   `hl7:"9,len=250,display=Group Name"`
	InsuredsGroupEmpID            []CX    `hl7:"10,len=250,display=Insured's Group Emp ID"`
	InsuredsGroupEmpName          []XON   `hl7:"11,len=250,display=Insured's Group Emp Name"`
	PlanEffectiveDate             DT      `hl7:"12,len=8,format=YMD,display=Plan Effective Date"`
	PlanExpirationDate            DT      `hl7:"13,len=8,format=YMD,display=Plan Expiration Date"`
	AuthorizationInformation      *AUI    `hl7:"14,len=239,display=Authorization Information"`
	PlanType                      IS      `hl7:"15,len=3,table=0086,display=Plan Type"`
	NameOfInsured                 []XPN   `hl7:"16,len=250,display=Name Of Insured"`
	InsuredsRelationshipToPatient *CWE    `hl7:"17,len=250,table=0063,display=Insured's Relationship To Patient"`
	InsuredsDateOfBirth           DTM     `hl7:"18,len=24,format=YMDHM,display=Insured's Date Of Birth"`
	InsuredsAddress               []XAD   `hl7:"19,len=250,display=Insured's Address"`
	AssignmentOfBenefits          IS      `hl7:"20,len=2,table=0135,display=Assignment Of Benefits"`
	CoordinationOfBenefits        IS      `hl7:"21,len=2,table=0173,display=Coordination Of Benefits"`
	CoordOfBenPriority            ST      `hl7:"22,len=2,display=Coord Of Ben. Priority"`
	NoticeOfAdmissionFlag         ID      `hl7:"23,len=1,table=0136,display=Notice Of Admission Flag"`
	NoticeOfAdmissionDate         DT      `hl7:"24,len=8,format=YMD,display=Notice Of Admission Date"`
	ReportOfEligibilityFlag       ID      `hl7:"25,len=1,table=0136,display=Report Of Eligibility Flag"`
	ReportOfEligibilityDate       DT      `hl7:"26,len=8,format=YMD,display=Report Of Eligibility Date"`
	ReleaseInformationCode        IS      `hl7:"27,len=2,table=0093,display=Release Information Code"`
	PreAdmitCertPAC               ST      `hl7:"28,len=15,display=Pre-Admit Cert (PAC)"`
	VerificationDateTime          DTM     `hl7:"29,len=24,format=YMDHM,display=Verification Date/Time"`
	VerificationBy                []XCN   `hl7:"30,len=250,display=Verification By"`
	TypeOfAgreementCode           IS      `hl7:"31,len=2,table=0098,display=Type Of Agreement Code"`
	BillingStatus                 IS      `hl7:"32,len=2,table=0022,display=Billing Status"`
	LifetimeReserveDays           NM      `hl7:"33,len=4,display=Lifetime Reserve Days"`
	DelayBeforeLRDay              NM      `hl7:"34,len=4,display=Delay Before L.R. Day"`
	CompanyPlanCode               IS      `hl7:"35,len=20,table=0042,display=Company Plan Code"`
	PolicyNumber                  ST      `hl7:"36,len=15,display=Policy Number"`
	PolicyDeductible              *CP     `hl7:"37,len=12,display=Policy Deductible"`
	PolicyLimitAmount             ST      `hl7:"38,display=Policy Limit - Amount"`
	PolicyLimitDays               NM      `hl7:"39,len=4,display=Policy Limit - Days"`
	RoomRateSemiPrivate           ST      `hl7:"40,display=Room Rate - Semi-Private"`
	RoomRatePrivate               ST      `hl7:"41,display=Room Rate - Private"`
	InsuredsEmploymentStatus      *CWE    `hl7:"42,len=250,table=0066,display=Insured's Employment Status"`
	InsuredsAdministrativeSex     IS      `hl7:"43,len=1,table=0001,display=Insured's Administrative Sex"`
	InsuredsEmployersAddress      []XAD   `hl7:"44,len=250,display=Insured's Employer's Address"`
	VerificationStatus            ST      `hl7:"45,len=2,display=Verification Status"`
	PriorInsurancePlanID          IS      `hl7:"46,len=8,table=0072,display=Prior Insurance Plan ID"`
	CoverageType                  IS      `hl7:"47,len=3,table=0309,display=Coverage Type"`
	Handicap                      IS      `hl7:"48,len=2,table=0295,display=Handicap"`
	InsuredsIDNumber              []CX    `hl7:"49,len=250,display=Insured's ID Number"`
	SignatureCode                 IS      `hl7:"50,len=1,table=0535,display=Signature Code"`
	SignatureCodeDate             DT      `hl7:"51,len=8,format=YMD,display=Signature Code Date"`
	InsuredsBirthPlace            ST      `hl7:"52,len=250,display=Insured's Birth Place"`
	VIPIndicator                  IS      `hl7:"53,len=2,table=0099,display=VIP Indicator"`
}

// Insurance Additional Information
//
// The IN2 segment contains additional insurance policy coverage and benefit information necessary for proper billing
// and reimbursement. Fields used by this segment are defined by CMS or other regulatory agencies.
type IN2 struct {
	HL7                                  HL7Name `hl7:",name=IN2,type=s"`
	InsuredsEmployeeID                   []CX    `hl7:"1,len=250,display=Insured's Employee ID"`
	InsuredsSocialSecurityNumber         ST      `hl7:"2,len=11,display=Insured's Social Security Number"`
	InsuredsEmployersNameAndID           []XCN   `hl7:"3,len=250,display=Insured's Employer's Name and ID"`
	EmployerInformationData              IS      `hl7:"4,len=1,table=0139,display=Employer Information Data"`
	MailClaimParty                       []IS    `hl7:"5,len=1,table=0137,display=Mail Claim Party"`
	MedicareHealthInsCardNumber          ST      `hl7:"6,len=15,display=Medicare Health Ins Card Number"`
	MedicaidCaseName                     []XPN   `hl7:"7,len=250,display=Medicaid Case Name"`
	MedicaidCaseNumber                   ST      `hl7:"8,len=15,display=Medicaid Case Number"`
	MilitarySponsorName                  []XPN   `hl7:"9,len=250,display=Military Sponsor Name"`
	MilitaryIDNumber                     ST      `hl7:"10,len=20,display=Military ID Number"`
	DependentOfMilitaryRecipient         *CWE    `hl7:"11,len=250,table=0342,display=Dependent Of Military Recipient"`
	MilitaryOrganization                 ST      `hl7:"12,len=25,display=Military Organization"`
	MilitaryStation                      ST      `hl7:"13,len=25,display=Military Station"`
	MilitaryService                      IS      `hl7:"14,len=14,table=0140,display=Military Service"`
	MilitaryRankGrade                    IS      `hl7:"15,len=2,table=0141,display=Military Rank/Grade"`
	MilitaryStatus                       IS      `hl7:"16,len=3,table=0142,display=Military Status"`
	MilitaryRetireDate                   DT      `hl7:"17,len=8,format=YMD,display=Military Retire Date"`
	MilitaryNonAvailCertOnFile           ID      `hl7:"18,len=1,table=0136,display=Military Non-Avail Cert On File"`
	BabyCoverage                         ID      `hl7:"19,len=1,table=0136,display=Baby Coverage"`
	CombineBabyBill                      ID      `hl7:"20,len=1,table=0136,display=Combine Baby Bill"`
	BloodDeductible                      ST      `hl7:"21,len=1,display=Blood Deductible"`
	SpecialCoverageApprovalName          []XPN   `hl7:"22,len=250,display=Special Coverage Approval Name"`
	SpecialCoverageApprovalTitle         ST      `hl7:"23,len=30,display=Special Coverage Approval Title"`
	NonCoveredInsuranceCode              []IS    `hl7:"24,len=8,table=0143,display=Non-Covered Insurance Code"`
	PayorID                              []CX    `hl7:"25,len=250,display=Payor ID"`
	PayorSubscriberID                    []CX    `hl7:"26,len=250,display=Payor Subscriber ID"`
	EligibilitySource                    IS      `hl7:"27,len=1,table=0144,display=Eligibility Source"`
	RoomCoverageTypeAmount               []RMC   `hl7:"28,len=82,display=Room Coverage Type/Amount"`
	PolicyTypeAmount                     []PTA   `hl7:"29,len=56,display=Policy Type/Amount"`
	DailyDeductible                      *DDI    `hl7:"30,len=25,display=Daily Deductible"`
	LivingDependency                     IS      `hl7:"31,len=2,table=0223,display=Living Dependency"`
	AmbulatoryStatus                     []IS    `hl7:"32,len=2,table=0009,display=Ambulatory Status"`
	Citizenship                          []CWE   `hl7:"33,len=705,table=0171,display=Citizenship"`
	PrimaryLanguage                      *CWE    `hl7:"34,len=705,table=0296,display=Primary Language"`
	LivingArrangement                    IS      `hl7:"35,len=2,table=0220,display=Living Arrangement"`
	PublicityCode                        *CWE    `hl7:"36,len=705,table=0215,display=Publicity Code"`
	ProtectionIndicator                  ID      `hl7:"37,len=1,table=0136,display=Protection Indicator"`
	StudentIndicator                     IS      `hl7:"38,len=2,table=0231,display=Student Indicator"`
	Religion                             *CWE    `hl7:"39,len=705,table=0006,display=Religion"`
	MothersMaidenName                    []XPN   `hl7:"40,len=250,display=Mother's Maiden Name"`
	Nationality                          *CWE    `hl7:"41,len=705,table=0212,display=Nationality"`
	EthnicGroup                          []CWE   `hl7:"42,len=705,table=0189,display=Ethnic Group"`
	MaritalStatus                        []CWE   `hl7:"43,len=705,table=0002,display=Marital Status"`
	InsuredsEmploymentStartDate          DT      `hl7:"44,len=8,format=YMD,display=Insured's Employment Start Date"`
	EmploymentStopDate                   DT      `hl7:"45,len=8,format=YMD,display=Employment Stop Date"`
	JobTitle                             ST      `hl7:"46,len=20,display=Job Title"`
	JobCodeClass                         *JCC    `hl7:"47,len=20,display=Job Code/Class"`
	JobStatus                            IS      `hl7:"48,len=2,table=0311,display=Job Status"`
	EmployerContactPersonName            []XPN   `hl7:"49,len=250,display=Employer Contact Person Name"`
	EmployerContactPersonPhoneNumber     []XTN   `hl7:"50,len=250,display=Employer Contact Person Phone Number"`
	EmployerContactReason                IS      `hl7:"51,len=2,table=0222,display=Employer Contact Reason"`
	InsuredsContactPersonsName           []XPN   `hl7:"52,len=250,display=Insured's Contact Person's Name"`
	InsuredsContactPersonPhoneNumber     []XTN   `hl7:"53,len=250,display=Insured's Contact Person Phone Number"`
	InsuredsContactPersonReason          []IS    `hl7:"54,len=2,table=0222,display=Insured's Contact Person Reason"`
	RelationshipToThePatientStartDate    DT      `hl7:"55,len=8,format=YMD,display=Relationship to the Patient Start Date"`
	RelationshipToThePatientStopDate     []DT    `hl7:"56,len=8,format=YMD,display=Relationship to the Patient Stop Date"`
	InsuranceCoContactReason             IS      `hl7:"57,len=2,table=0232,display=Insurance Co. Contact Reason"`
	InsuranceCoContactPhoneNumber        []XTN   `hl7:"58,len=250,display=Insurance Co Contact Phone Number"`
	PolicyScope                          IS      `hl7:"59,len=2,table=0312,display=Policy Scope"`
	PolicySource                         IS      `hl7:"60,len=2,table=0313,display=Policy Source"`
	PatientMemberNumber                  *CX     `hl7:"61,len=250,display=Patient Member Number"`
	GuarantorsRelationshipToInsured      *CWE    `hl7:"62,len=250,table=0063,display=Guarantor's Relationship To Insured"`
	InsuredsPhoneNumberHome              []XTN   `hl7:"63,len=250,display=Insured's Phone Number - Home"`
	InsuredsEmployerPhoneNumber          []XTN   `hl7:"64,len=250,display=Insured's Employer Phone Number"`
	MilitaryHandicappedProgram           *CWE    `hl7:"65,len=250,table=0343,display=Military Handicapped Program"`
	SuspendFlag                          ID      `hl7:"66,len=1,table=0136,display=Suspend Flag"`
	CopayLimitFlag                       ID      `hl7:"67,len=1,table=0136,display=Copay Limit Flag"`
	StoplossLimitFlag                    ID      `hl7:"68,len=1,table=0136,display=Stoploss Limit Flag"`
	InsuredOrganizationNameAndID         []XON   `hl7:"69,len=250,display=Insured Organization Name and ID"`
	InsuredEmployerOrganizationNameAndID []XON   `hl7:"70,len=250,display=Insured Employer Organization Name and ID"`
	Race                                 []CWE   `hl7:"71,len=705,table=0005,display=Race"`
	CMSPatientsRelationshipToInsured     *CWE    `hl7:"72,len=705,table=0344,display=CMS Patient's Relationship to Insured"`
}

// Insurance Additional Information, Certification
//
// The IN3 segment contains additional insurance information for certifying the need for patient care. Fields used by this
// segment are defined by CMS, or other regulatory agencies.
type IN3 struct {
	HL7                                HL7Name `hl7:",name=IN3,type=s"`
	SetID                              SI      `hl7:"1,seq,required,len=4,display=Set ID - IN3"`
	CertificationNumber                *CX     `hl7:"2,len=250,display=Certification Number"`
	CertifiedBy                        []XCN   `hl7:"3,len=250,display=Certified By"`
	CertificationRequired              ID      `hl7:"4,len=1,table=0136,display=Certification Required"`
	Penalty                            *MOP    `hl7:"5,len=23,display=Penalty"`
	CertificationDateTime              DTM     `hl7:"6,len=24,format=YMDHM,display=Certification Date/Time"`
	CertificationModifyDateTime        DTM     `hl7:"7,len=24,format=YMDHM,display=Certification Modify Date/Time"`
	Operator                           []XCN   `hl7:"8,len=250,display=Operator"`
	CertificationBeginDate             DT      `hl7:"9,len=8,format=YMD,display=Certification Begin Date"`
	CertificationEndDate               DT      `hl7:"10,len=8,format=YMD,display=Certification End Date"`
	Days                               *DTN    `hl7:"11,len=6,display=Days"`
	NonConcurCodeDescription           *CWE    `hl7:"12,len=250,table=0233,display=Non-Concur Code/Description"`
	NonConcurEffectiveDateTime         DTM     `hl7:"13,len=24,format=YMDHM,display=Non-Concur Effective Date/Time"`
	PhysicianReviewer                  []XCN   `hl7:"14,len=250,table=0010,display=Physician Reviewer"`
	CertificationContact               ST      `hl7:"15,len=48,display=Certification Contact"`
	CertificationContactPhoneNumber    []XTN   `hl7:"16,len=250,display=Certification Contact Phone Number"`
	AppealReason                       *CWE    `hl7:"17,len=250,table=0345,display=Appeal Reason"`
	CertificationAgency                *CWE    `hl7:"18,len=250,table=0346,display=Certification Agency"`
	CertificationAgencyPhoneNumber     []XTN   `hl7:"19,len=250,display=Certification Agency Phone Number"`
	PreCertificationRequirement        []ICD   `hl7:"20,len=40,display=Pre-Certification Requirement"`
	CaseManager                        ST      `hl7:"21,len=48,display=Case Manager"`
	SecondOpinionDate                  DT      `hl7:"22,len=8,format=YMD,display=Second Opinion Date"`
	SecondOpinionStatus                IS      `hl7:"23,len=1,table=0151,display=Second Opinion Status"`
	SecondOpinionDocumentationReceived []IS    `hl7:"24,len=1,table=0152,display=Second Opinion Documentation Received"`
	SecondOpinionPhysician             []XCN   `hl7:"25,len=250,table=0010,display=Second Opinion Physician"`
}

// Inventory Detail
//
// The inventory detail segment is the data necessary to track the inventory of substances (e.g. reagent, tips, waste) on
// equipment.
type INV struct {
	HL7                          HL7Name `hl7:",name=INV,type=s"`
	SubstanceIdentifier          CWE     `hl7:"1,required,len=705,table=0451,display=Substance Identifier"`
	SubstanceStatus              []CWE   `hl7:"2,required,len=705,table=0383,display=Substance Status"`
	SubstanceType                *CWE    `hl7:"3,len=705,table=0384,display=Substance Type"`
	InventoryContainerIdentifier *CWE    `hl7:"4,len=705,display=Inventory Container Identifier"`
	ContainerCarrierIdentifier   *CWE    `hl7:"5,len=705,display=Container Carrier Identifier"`
	PositionOnCarrier            *CWE    `hl7:"6,len=705,display=Position on Carrier"`
	InitialQuantity              NM      `hl7:"7,len=20,display=Initial Quantity"`
	CurrentQuantity              NM      `hl7:"8,len=20,display=Current Quantity"`
	AvailableQuantity            NM      `hl7:"9,len=20,display=Available Quantity"`
	ConsumptionQuantity          NM      `hl7:"10,len=20,display=Consumption Quantity"`
	QuantityUnits                *CWE    `hl7:"11,len=705,display=Quantity Units"`
	ExpirationDateTime           DTM     `hl7:"12,len=24,format=YMDHM,display=Expiration Date/Time"`
	FirstUsedDateTime            DTM     `hl7:"13,len=24,format=YMDHM,display=First Used Date/Time"`
	OnBoardStabilityDuration     TQ      `hl7:"14,len=200,display=On Board Stability Duration"`
	TestFluidIdentifier          []CWE   `hl7:"15,len=705,display=Test/Fluid Identifier"`
	ManufacturerLotNumber        ST      `hl7:"16,len=200,display=Manufacturer Lot Number"`
	ManufacturerIdentifier       *CWE    `hl7:"17,len=705,table=0385,display=Manufacturer Identifier"`
	SupplierIdentifier           *CWE    `hl7:"18,len=705,table=0386,display=Supplier Identifier"`
	OnBoardStabilityTime         *CQ     `hl7:"19,len=722,display=On Board Stability Time"`
	TargetValue                  *CQ     `hl7:"20,len=722,display=Target Value"`
}

// Imaging Procedure Control Segment
//
// The IPC segment contains information about tasks that need to be performed in order to fulfill the request for imaging service.
// The information includes location, type and instance identification of equipment (acquisition modality) and stages
// (procedure steps).
type IPC struct {
	HL7                            HL7Name `hl7:",name=IPC,type=s"`
	AccessionIdentifier            EI      `hl7:"1,required,len=427,display=Accession Identifier"`
	RequestedProcedureID           EI      `hl7:"2,required,len=22,display=Requested Procedure ID"`
	StudyInstanceUID               EI      `hl7:"3,required,len=70,display=Study Instance UID"`
	ScheduledProcedureStepID       EI      `hl7:"4,required,len=22,display=Scheduled Procedure Step ID"`
	Modality                       *CWE    `hl7:"5,len=16,display=Modality"`
	ProtocolCode                   []CWE   `hl7:"6,len=250,display=Protocol Code"`
	ScheduledStationName           *EI     `hl7:"7,len=22,display=Scheduled Station Name"`
	ScheduledProcedureStepLocation []CWE   `hl7:"8,len=250,display=Scheduled Procedure Step Location"`
	ScheduledStationAETitle        ST      `hl7:"9,len=16,display=Scheduled Station AE Title"`
}

// Invoice Processing Results
//
// The Invoice Processing Results (IPR) segment provides summary information about an adjudicated Product/Service Group
// or Product/Service Line Item.
type IPR struct {
	HL7                              HL7Name `hl7:",name=IPR,type=s"`
	Identifier                       EI      `hl7:"1,required,len=73,display=IPR Identifier"`
	ProviderCrossReferenceIdentifier EI      `hl7:"2,required,len=73,display=Provider Cross Reference Identifier"`
	PayerCrossReferenceIdentifier    EI      `hl7:"3,required,len=73,display=Payer Cross Reference Identifier"`
	Status                           CWE     `hl7:"4,required,len=177,table=0571,display=IPR Status"`
	DateTime                         DTM     `hl7:"5,required,len=26,format=YMDHM,display=IPR Date/Time"`
	AdjudicatedPaidAmount            *CP     `hl7:"6,len=254,display=Adjudicated/Paid Amount"`
	ExpectedPaymentDateTime          DTM     `hl7:"7,len=26,format=YMDHM,display=Expected Payment Date/Time"`
	Checksum                         ST      `hl7:"8,required,len=10,display=IPR Checksum"`
}

// Interaction Status Detail
//
// The interaction detail segment contains information about the status of specific interaction (e.g., processing  see
// section Glossary) on the specific equipment.
type ISD struct {
	HL7                        HL7Name `hl7:",name=ISD,type=s"`
	ReferenceInteractionNumber NM      `hl7:"1,required,len=20,display=Reference Interaction Number"`
	InteractionTypeIdentifier  *CWE    `hl7:"2,len=705,table=0368,display=Interaction Type Identifier"`
	InteractionActiveState     CWE     `hl7:"3,required,len=705,table=0387,display=Interaction Active State"`
}

// Material Item
//
// The Material Item segment (ITM) contains information about inventory supply items (stocked or non-stocked).
type ITM struct {
	HL7                                   HL7Name `hl7:",name=ITM,type=s"`
	ItemIdentifier                        EI      `hl7:"1,required,len=250,display=Item Identifier"`
	ItemDescription                       ST      `hl7:"2,len=999,display=Item Description"`
	ItemStatus                            *CWE    `hl7:"3,len=250,table=0776,display=Item Status"`
	ItemType                              *CWE    `hl7:"4,len=250,table=0778,display=Item Type"`
	ItemCategory                          *CWE    `hl7:"5,len=250,display=Item Category"`
	SubjectToExpirationIndicator          *CNE    `hl7:"6,len=4,table=0532,display=Subject to Expiration Indicator"`
	ManufacturerIdentifier                *EI     `hl7:"7,len=250,display=Manufacturer Identifier"`
	ManufacturerName                      ST      `hl7:"8,len=999,display=Manufacturer Name"`
	ManufacturerCatalogNumber             ST      `hl7:"9,len=20,display=Manufacturer Catalog Number"`
	ManufacturerLabelerIdentificationCode *CWE    `hl7:"10,len=4,display=Manufacturer Labeler Identification Code"`
	PatientChargeableIndicator            *CNE    `hl7:"11,len=4,table=0532,display=Patient Chargeable Indicator"`
	TransactionCode                       *CWE    `hl7:"12,len=250,table=0132,display=Transaction Code"`
	TransactionAmountUnit                 *CP     `hl7:"13,len=12,display=Transaction amount - unit"`
	StockedItemIndicator                  *CNE    `hl7:"14,len=4,table=0532,display=Stocked Item Indicator"`
	SupplyRiskCodes                       *CWE    `hl7:"15,len=250,table=0871,display=Supply Risk Codes"`
	ApprovingRegulatoryAgency             []XON   `hl7:"16,len=250,table=0790,display=Approving Regulatory Agency"`
	LatexIndicator                        *CNE    `hl7:"17,len=4,table=0532,display=Latex Indicator"`
	RulingAct                             []CWE   `hl7:"18,len=250,table=0793,display=Ruling Act"`
	ItemNaturalAccountCode                IS      `hl7:"19,len=30,table=0320,display=Item Natural Account Code"`
	ApprovedToBuyQuantity                 NM      `hl7:"20,len=6,display=Approved To Buy Quantity"`
	ApprovedToBuyPrice                    *MO     `hl7:"21,len=10,display=Approved To Buy Price"`
	TaxableItemIndicator                  *CNE    `hl7:"22,len=4,table=0532,display=Taxable Item Indicator"`
	FreightChargeIndicator                *CNE    `hl7:"23,len=4,table=0532,display=Freight Charge Indicator"`
	ItemSetIndicator                      *CNE    `hl7:"24,len=4,table=0532,display=Item Set Indicator"`
	ItemSetIdentifier                     *EI     `hl7:"25,len=250,display=Item Set Identifier"`
	TrackDepartmentUsageIndicator         *CNE    `hl7:"26,len=4,table=0532,display=Track Department Usage Indicator"`
	ProcedureCode                         *CNE    `hl7:"27,len=705,table=0088,display=Procedure Code"`
	ProcedureCodeModifier                 []CNE   `hl7:"28,len=705,table=0340,display=Procedure Code Modifier"`
	SpecialHandlingCode                   *CWE    `hl7:"29,len=705,table=0376,display=Special Handling Code"`
}

// Invoice
//
// The Invoice segment is used for HealthCare Services Invoices and contains header style information for an invoice including
// invoice numbers, Provider Organization and Payer Organization identification.
type IVC struct {
	HL7                                    HL7Name `hl7:",name=IVC,type=s"`
	ProviderInvoiceNumber                  EI      `hl7:"1,required,len=74,display=Provider Invoice Number"`
	PayerInvoiceNumber                     *EI     `hl7:"2,len=74,display=Payer Invoice Number"`
	ContractAgreementNumber                *EI     `hl7:"3,len=74,display=Contract/Agreement Number"`
	InvoiceControl                         IS      `hl7:"4,required,len=2,table=0553,display=Invoice Control"`
	InvoiceReason                          IS      `hl7:"5,required,len=4,table=0554,display=Invoice Reason"`
	InvoiceType                            IS      `hl7:"6,required,len=2,table=0555,display=Invoice Type"`
	InvoiceDateTime                        DTM     `hl7:"7,required,len=24,format=YMDHM,display=Invoice Date/Time"`
	InvoiceAmount                          CP      `hl7:"8,required,len=254,display=Invoice Amount"`
	PaymentTerms                           ST      `hl7:"9,len=80,display=Payment Terms"`
	ProviderOrganization                   XON     `hl7:"10,required,len=183,display=Provider Organization"`
	PayerOrganization                      XON     `hl7:"11,required,len=183,display=Payer Organization"`
	Attention                              *XCN    `hl7:"12,len=637,display=Attention"`
	LastInvoiceIndicator                   ID      `hl7:"13,len=1,table=0136,display=Last Invoice Indicator"`
	InvoiceBookingPeriod                   DTM     `hl7:"14,len=24,format=YMDHM,display=Invoice Booking Period"`
	Origin                                 ST      `hl7:"15,len=250,display=Origin"`
	InvoiceFixedAmount                     *CP     `hl7:"16,len=254,display=Invoice Fixed Amount"`
	SpecialCosts                           *CP     `hl7:"17,len=254,display=Special Costs"`
	AmountForDoctorsTreatment              *CP     `hl7:"18,len=254,display=Amount for Doctors Treatment"`
	ResponsiblePhysician                   *XCN    `hl7:"19,len=250,display=Responsible Physician"`
	CostCenter                             *CX     `hl7:"20,len=250,display=Cost Center"`
	InvoicePrepaidAmount                   *CP     `hl7:"21,len=254,display=Invoice Prepaid Amount"`
	TotalInvoiceAmountWithoutPrepaidAmount *CP     `hl7:"22,len=254,display=Total Invoice Amount without Prepaid Amount"`
	TotalAmountOfVAT                       *CP     `hl7:"23,conditional,len=254,display=Total-Amount of VAT"`
	VATRatesApplied                        []NM    `hl7:"24,len=1024,display=VAT-Rates applied"`
	BenefitGroup                           IS      `hl7:"25,required,len=4,table=0556,display=Benefit Group"`
	ProviderTaxID                          ST      `hl7:"26,len=20,display=Provider Tax ID"`
	PayerTaxID                             ST      `hl7:"27,len=20,display=Payer Tax ID"`
	ProviderTaxStatus                      IS      `hl7:"28,len=4,table=0572,display=Provider Tax status"`
	PayerTaxStatus                         IS      `hl7:"29,len=4,table=0572,display=Payer Tax status"`
	SalesTaxID                             ST      `hl7:"30,len=20,display=Sales Tax ID"`
}

// Material Location
//
// The Material Location segment (IVT) contains information specific to an inventory location for the inventory supply
// item in the Material Item (ITM) segment.
type IVT struct {
	HL7                               HL7Name `hl7:",name=IVT,type=s"`
	SetID                             SI      `hl7:"1,seq,required,len=4,display=Set Id – IVT"`
	InventoryLocationIdentifier       EI      `hl7:"2,required,len=250,display=Inventory Location Identifier"`
	InventoryLocationName             ST      `hl7:"3,len=999,display=Inventory Location Name"`
	SourceLocationIdentifier          *EI     `hl7:"4,len=250,display=Source Location Identifier"`
	SourceLocationName                ST      `hl7:"5,len=999,display=Source Location Name"`
	ItemStatus                        *CWE    `hl7:"6,len=250,table=0625,display=Item Status"`
	BinLocationIdentifier             []EI    `hl7:"7,len=250,display=Bin Location Identifier"`
	OrderPackaging                    *CWE    `hl7:"8,len=250,display=Order Packaging"`
	IssuePackaging                    *CWE    `hl7:"9,len=250,display=Issue Packaging"`
	DefaultInventoryAssetAccount      *EI     `hl7:"10,len=16,display=Default Inventory Asset Account"`
	PatientChargeableIndicator        *CNE    `hl7:"11,len=4,table=0532,display=Patient Chargeable Indicator"`
	TransactionCode                   *CWE    `hl7:"12,len=250,table=0132,display=Transaction Code"`
	TransactionAmountUnit             *CP     `hl7:"13,len=12,display=Transaction amount - unit"`
	ItemImportanceCode                *CWE    `hl7:"14,len=250,table=0634,display=Item Importance Code"`
	StockedItemIndicator              *CNE    `hl7:"15,len=4,table=0532,display=Stocked Item Indicator"`
	ConsignmentItemIndicator          *CNE    `hl7:"16,len=4,table=0532,display=Consignment Item Indicator"`
	ReusableItemIndicator             *CNE    `hl7:"17,len=4,table=0532,display=Reusable Item Indicator"`
	ReusableCost                      *CP     `hl7:"18,len=12,display=Reusable Cost"`
	SubstituteItemIdentifier          []EI    `hl7:"19,len=250,display=Substitute Item Identifier"`
	LatexFreeSubstituteItemIdentifier *EI     `hl7:"20,len=250,display=Latex-Free Substitute Item Identifier"`
	RecommendedReorderTheory          *CWE    `hl7:"21,len=250,table=0642,display=Recommended Reorder Theory"`
	RecommendedSafetyStockDays        NM      `hl7:"22,len=4,display=Recommended Safety Stock Days"`
	RecommendedMaximumDaysInventory   NM      `hl7:"23,len=4,display=Recommended Maximum Days Inventory"`
	RecommendedOrderPoint             NM      `hl7:"24,len=8,display=Recommended Order Point"`
	RecommendedOrderAmount            NM      `hl7:"25,len=8,display=Recommended Order Amount"`
	OperatingRoomParLevelIndicator    *CNE    `hl7:"26,len=4,table=0532,display=Operating Room Par Level Indicator"`
}

// Language Detail
//
// The LAN segment adds detailed language information to the staff member identified by the STF segment. An LAN segment may
// optionally follow an STF segment. An LAN segment must always have been preceded by a corresponding STF segment.
type LAN struct {
	HL7                     HL7Name `hl7:",name=LAN,type=s"`
	SetID                   SI      `hl7:"1,seq,required,len=60,display=Set ID – LAN"`
	LanguageCode            CWE     `hl7:"2,required,len=250,table=0296,display=Language Code"`
	LanguageAbilityCode     []CWE   `hl7:"3,len=250,table=0403,display=Language Ability Code"`
	LanguageProficiencyCode *CWE    `hl7:"4,len=250,table=0404,display=Language Proficiency Code"`
}

// Location Charge Code
//
// The Technical Steward for the LCC segment is PA.
//
// The optional LCC segment identifies how a patient location room can be billed by a certain department.  A department can
// use different charge codes for the same room or bed, so there can be multiple LCC segments following an LDP segment.
type LCC struct {
	HL7                HL7Name `hl7:",name=LCC,type=s"`
	PrimaryKeyValue    PL      `hl7:"1,required,len=200,display=Primary Key Value - LCC"`
	LocationDepartment CWE     `hl7:"2,required,len=250,table=0264,display=Location Department"`
	AccommodationType  []CWE   `hl7:"3,len=250,table=0129,display=Accommodation Type"`
	ChargeCode         []CWE   `hl7:"4,required,len=250,table=0132,display=Charge Code"`
}

// Location Characteristic
//
// The Technical Steward for the LCH segment is Patient Administration.
//
// The LCH segment is used to identify location characteristics which determine which patients will be assigned to the room
// or bed.  It contains the location characteristics of the room or bed identified in the preceding LOC segment. There should
// be one LCH segment for each attribute.
type LCH struct {
	HL7                         HL7Name `hl7:",name=LCH,type=s"`
	PrimaryKeyValue             PL      `hl7:"1,required,len=200,display=Primary Key Value - LCH"`
	SegmentActionCode           ID      `hl7:"2,len=3,table=0206,display=Segment Action Code"`
	SegmentUniqueKey            *EI     `hl7:"3,len=80,display=Segment Unique Key"`
	LocationCharacteristicID    CWE     `hl7:"4,required,len=250,table=0324,display=Location Characteristic ID"`
	LocationCharacteristicValue CWE     `hl7:"5,required,len=250,display=Location Characteristic Value-LCH"`
}

// Location Department
//
// The Technical Steward for the LDP segment is Patient Administration.
//
// The LDP segment identifies how a patient location room is being used by a certain department.  Multiple departments can
// use the same patient location, so there can be multiple LDP segments following an LOC segment.  There must be at least one
// LDP segment for each LOC segment.  This is not intended to include any current occupant information.
type LDP struct {
	HL7                 HL7Name `hl7:",name=LDP,type=s"`
	PrimaryKeyValue     PL      `hl7:"1,required,len=200,display=Primary Key Value - LDP"`
	LocationDepartment  CWE     `hl7:"2,required,len=250,table=0264,display=Location Department"`
	LocationService     []IS    `hl7:"3,len=3,table=0069,display=Location Service"`
	SpecialtyType       []CWE   `hl7:"4,len=250,table=0265,display=Specialty Type"`
	ValidPatientClasses []IS    `hl7:"5,len=1,table=0004,display=Valid Patient Classes"`
	ActiveInactiveFlag  ID      `hl7:"6,len=1,table=0183,display=Active/Inactive Flag"`
	ActivationDate      DTM     `hl7:"7,len=24,format=YMDHM,display=Activation Date  LDP"`
	InactivationDate    DTM     `hl7:"8,len=24,format=YMDHM,display=Inactivation Date - LDP"`
	InactivatedReason   ST      `hl7:"9,len=80,display=Inactivated Reason"`
	VisitingHours       []VH    `hl7:"10,len=80,display=Visiting Hours"`
	ContactPhone        *XTN    `hl7:"11,len=250,display=Contact Phone"`
	LocationCostCenter  *CWE    `hl7:"12,len=250,table=0462,display=Location Cost Center"`
}

// Location Identification
//
// The Technical Steward for the LOC segment is Patient Administration.
//
// The LOC segment can identify any patient location referenced by information systems.  This segment gives physical set
// up information about the location.  This is not intended to include any current occupant or current use information.  There
// should be one LOC segment for each patient location.  If desired, there can also be one LOC segment for each nursing unit and
// room.
type LOC struct {
	HL7                 HL7Name `hl7:",name=LOC,type=s"`
	PrimaryKeyValue     PL      `hl7:"1,required,len=200,display=Primary Key Value - LOC"`
	LocationDescription ST      `hl7:"2,len=48,display=Location Description"`
	LocationType        []IS    `hl7:"3,required,len=2,table=0260,display=Location Type - LOC"`
	OrganizationName    []XON   `hl7:"4,len=250,display=Organization Name - LOC"`
	LocationAddress     []XAD   `hl7:"5,len=250,display=Location Address"`
	LocationPhone       []XTN   `hl7:"6,len=250,display=Location Phone"`
	LicenseNumber       []CWE   `hl7:"7,len=250,table=0461,display=License Number"`
	LocationEquipment   []IS    `hl7:"8,len=3,table=0261,display=Location Equipment"`
	LocationServiceCode IS      `hl7:"9,len=1,table=0442,display=Location Service Code"`
}

// Location Relationship
//
// The Technical Steward for the LRL segment is Patient Administration.
//
// The LRL segment is used to identify one location's relationship to another location, the nearest lab, pharmacy, etc.
type LRL struct {
	HL7                                     HL7Name `hl7:",name=LRL,type=s"`
	PrimaryKeyValue                         PL      `hl7:"1,required,len=200,display=Primary Key Value - LRL"`
	SegmentActionCode                       ID      `hl7:"2,len=3,table=0206,display=Segment Action Code"`
	SegmentUniqueKey                        *EI     `hl7:"3,len=80,display=Segment Unique Key"`
	LocationRelationshipID                  CWE     `hl7:"4,required,len=250,table=0325,display=Location Relationship ID"`
	OrganizationalLocationRelationshipValue []XON   `hl7:"5,conditional,len=250,display=Organizational Location Relationship Value"`
	PatientLocationRelationshipValue        *PL     `hl7:"6,conditional,len=80,display=Patient Location Relationship Value"`
}

// Master File Acknowledgment
//
// The Technical Steward for the MFA segment is Infrastructure and Messaging.
type MFA struct {
	HL7                       HL7Name  `hl7:",name=MFA,type=s"`
	RecordLevelEventCode      ID       `hl7:"1,required,len=3,table=0180,display=Record-Level Event Code"`
	MFNControlID              ST       `hl7:"2,conditional,len=20,display=MFN Control ID"`
	EventCompletionDateTime   DTM      `hl7:"3,len=24,format=YMDHM,display=Event Completion Date/Time"`
	MFNRecordLevelErrorReturn CWE      `hl7:"4,required,len=250,table=0181,display=MFN Record Level Error Return"`
	PrimaryKeyValue           []VARIES `hl7:"5,required,len=250,display=Primary Key Value - MFA"`
	PrimaryKeyValueType       []ID     `hl7:"6,required,len=3,table=0355,display=Primary Key Value Type - MFA"`
}

// Master File Entry
//
// The Technical Steward for the MFE segment is Infrastructure and Messaging.
type MFE struct {
	HL7                  HL7Name  `hl7:",name=MFE,type=s"`
	RecordLevelEventCode ID       `hl7:"1,required,len=3,table=0180,display=Record-Level Event Code"`
	MFNControlID         ST       `hl7:"2,conditional,len=20,display=MFN Control ID"`
	EffectiveDateTime    DTM      `hl7:"3,len=26,format=YMDHM,display=Effective Date/Time"`
	PrimaryKeyValue      []VARIES `hl7:"4,required,len=200,display=Primary Key Value - MFE"`
	PrimaryKeyValueType  []ID     `hl7:"5,required,len=3,table=0355,display=Primary Key Value Type"`
	EnteredDateTime      DTM      `hl7:"6,len=24,format=YMDHM,display=Entered Date/Time"`
	EnteredBy            *XCN     `hl7:"7,len=3220,display=Entered By"`
}

// Master File Identification
//
// The Technical Steward for the MFI segment is Infrastructure and Messaging.
type MFI struct {
	HL7                             HL7Name `hl7:",name=MFI,type=s"`
	MasterFileIdentifier            CWE     `hl7:"1,required,len=250,table=0175,display=Master File Identifier"`
	MasterFileApplicationIdentifier []HD    `hl7:"2,len=180,table=0361,display=Master File Application Identifier"`
	FileLevelEventCode              ID      `hl7:"3,required,len=3,table=0178,display=File-Level Event Code"`
	EnteredDateTime                 DTM     `hl7:"4,len=24,format=YMDHM,display=Entered Date/Time"`
	EffectiveDateTime               DTM     `hl7:"5,len=24,format=YMDHM,display=Effective Date/Time"`
	ResponseLevelCode               ID      `hl7:"6,required,len=2,table=0179,display=Response Level Code"`
}

// Merge Patient Information
//
// The MRG segment provides receiving applications with information necessary to initiate the merging of patient data as
// well as groups of records. It is intended that this segment be used throughout the Standard to allow the merging of registration,
// accounting, and clinical records within specific applications.
type MRG struct {
	HL7                        HL7Name `hl7:",name=MRG,type=s"`
	PriorPatientIdentifierList []CX    `hl7:"1,required,len=250,display=Prior Patient Identifier List"`
	PriorAlternatePatientID    []CX    `hl7:"2,len=250,display=Prior Alternate Patient ID"`
	PriorPatientAccountNumber  *CX     `hl7:"3,len=250,display=Prior Patient Account Number"`
	PriorPatientID             CX      `hl7:"4,len=250,display=Prior Patient ID"`
	PriorVisitNumber           *CX     `hl7:"5,len=250,display=Prior Visit Number"`
	PriorAlternateVisitID      *CX     `hl7:"6,len=250,display=Prior Alternate Visit ID"`
	PriorPatientName           []XPN   `hl7:"7,len=250,display=Prior Patient Name"`
}

// Message Acknowledgment
//
// The MSA segment contains information sent while acknowledging another message.
type MSA struct {
	HL7                       HL7Name `hl7:",name=MSA,type=s"`
	AcknowledgmentCode        ID      `hl7:"1,required,len=2,table=0008,display=Acknowledgment Code"`
	MessageControlID          ST      `hl7:"2,required,len=199,display=Message Control ID"`
	TextMessage               ST      `hl7:"3,len=80,display=Text Message"`
	ExpectedSequenceNumber    NM      `hl7:"4,len=15,display=Expected Sequence Number"`
	DelayedAcknowledgmentType ST      `hl7:"5,display=Delayed Acknowledgment Type"`
	ErrorCondition            CE      `hl7:"6,len=250,table=0357,display=Error Condition"`
	MessageWaitingNumber      NM      `hl7:"7,len=5,display=Message Waiting Number"`
	MessageWaitingPriority    ID      `hl7:"8,len=1,table=0520,display=Message Waiting Priority"`
}

// Message Header
//
// The MSH segment defines the intent, source, destination, and some specifics of the syntax of a message.
type MSH struct {
	HL7                                 HL7Name `hl7:",name=MSH,type=s"`
	FieldSeparator                      ST      `hl7:"1,noescape,fieldsep,omit,required,len=1,display=Field Separator"`
	EncodingCharacters                  ST      `hl7:"2,noescape,fieldchars,required,len=4,display=Encoding Characters"`
	SendingApplication                  *HD     `hl7:"3,len=227,table=0361,display=Sending Application"`
	SendingFacility                     *HD     `hl7:"4,len=227,table=0362,display=Sending Facility"`
	ReceivingApplication                *HD     `hl7:"5,len=227,table=0361,display=Receiving Application"`
	ReceivingFacility                   *HD     `hl7:"6,len=227,table=0362,display=Receiving Facility"`
	DateTimeOfMessage                   DTM     `hl7:"7,required,len=24,format=YMDHM,display=Date/Time Of Message"`
	Security                            ST      `hl7:"8,len=40,display=Security"`
	MessageType                         MSG     `hl7:"9,required,len=15,display=Message Type"`
	MessageControlID                    ST      `hl7:"10,required,len=199,display=Message Control ID"`
	ProcessingID                        PT      `hl7:"11,required,len=3,display=Processing ID"`
	VersionID                           VID     `hl7:"12,required,len=60,display=Version ID"`
	SequenceNumber                      NM      `hl7:"13,len=15,display=Sequence Number"`
	ContinuationPointer                 ST      `hl7:"14,len=180,display=Continuation Pointer"`
	AcceptAcknowledgmentType            ID      `hl7:"15,len=2,table=0155,display=Accept Acknowledgment Type"`
	ApplicationAcknowledgmentType       ID      `hl7:"16,len=2,table=0155,display=Application Acknowledgment Type"`
	CountryCode                         ID      `hl7:"17,len=3,table=0399,display=Country Code"`
	CharacterSet                        []ID    `hl7:"18,len=16,table=0211,display=Character Set"`
	PrincipalLanguageOfMessage          *CWE    `hl7:"19,len=250,display=Principal Language Of Message"`
	AlternateCharacterSetHandlingScheme ID      `hl7:"20,len=20,table=0356,display=Alternate Character Set Handling Scheme"`
	MessageProfileIdentifier            []EI    `hl7:"21,len=427,display=Message Profile Identifier"`
	SendingResponsibleOrganization      *XON    `hl7:"22,len=567,display=Sending Responsible Organization"`
	ReceivingResponsibleOrganization    *XON    `hl7:"23,len=567,display=Receiving Responsible Organization"`
	SendingNetworkAddress               *HD     `hl7:"24,len=227,display=Sending Network Address"`
	ReceivingNetworkAddress             *HD     `hl7:"25,len=227,display=Receiving Network Address"`
}

// MessageStructureID returns the code for the message structure.
// Implements the interface for decoders.
func (s MSH) MessageStructureID() string {
	return s.MessageType.MessageStructureID()
}

// System Clock
//
// The NCK segment is used to allow the various applications on the network to synchronize their system clocks (system date
// and time).
type NCK struct {
	HL7            HL7Name `hl7:",name=NCK,type=s"`
	SystemDateTime DTM     `hl7:"1,required,len=24,format=YMDHM,display=System Date/Time"`
}

// Notification Detail
//
// The equipment notification detail segment is the data necessary to maintain an adequate audit trail as well as notifications
// of events, (e.g., alarms that have occurred on a particular piece of equipment.
type NDS struct {
	HL7                         HL7Name `hl7:",name=NDS,type=s"`
	NotificationReferenceNumber NM      `hl7:"1,required,len=20,display=Notification Reference Number"`
	NotificationDateTime        DTM     `hl7:"2,required,len=24,format=YMDHM,display=Notification Date/Time"`
	NotificationAlertSeverity   CWE     `hl7:"3,required,len=705,table=0367,display=Notification Alert Severity"`
	NotificationCode            CWE     `hl7:"4,required,len=705,display=Notification Code"`
}

// Next of Kin / Associated Parties
//
// The NK1 segment contains information about the patient's other related parties. Any associated parties may be identified.
// Utilizing NK1-1 - set ID, multiple NK1 segments can be sent to patient accounts.
type NK1 struct {
	HL7                                      HL7Name `hl7:",name=NK1,type=s"`
	SetID                                    SI      `hl7:"1,seq,required,len=4,display=Set ID - NK1"`
	Name                                     []XPN   `hl7:"2,len=250,display=Name"`
	Relationship                             *CWE    `hl7:"3,len=705,table=0063,display=Relationship"`
	Address                                  []XAD   `hl7:"4,len=250,display=Address"`
	PhoneNumber                              []XTN   `hl7:"5,len=250,display=Phone Number"`
	BusinessPhoneNumber                      []XTN   `hl7:"6,len=250,display=Business Phone Number"`
	ContactRole                              *CWE    `hl7:"7,len=705,table=0131,display=Contact Role"`
	StartDate                                DT      `hl7:"8,len=8,format=YMD,display=Start Date"`
	EndDate                                  DT      `hl7:"9,len=8,format=YMD,display=End Date"`
	NextOfKinAssociatedPartiesJobTitle       ST      `hl7:"10,len=60,display=Next of Kin / Associated Parties Job Title"`
	NextOfKinAssociatedPartiesJobCodeClass   *JCC    `hl7:"11,len=20,display=Next of Kin / Associated Parties Job Code/Class"`
	NextOfKinAssociatedPartiesEmployeeNumber *CX     `hl7:"12,len=250,display=Next of Kin / Associated Parties Employee Number"`
	OrganizationName                         []XON   `hl7:"13,len=250,display=Organization Name - NK1"`
	MaritalStatus                            *CWE    `hl7:"14,len=705,table=0002,display=Marital Status"`
	AdministrativeSex                        IS      `hl7:"15,len=1,table=0001,display=Administrative Sex"`
	DateTimeOfBirth                          DTM     `hl7:"16,len=24,format=YMDHM,display=Date/Time of Birth"`
	LivingDependency                         []IS    `hl7:"17,len=2,table=0223,display=Living Dependency"`
	AmbulatoryStatus                         []IS    `hl7:"18,len=2,table=0009,display=Ambulatory Status"`
	Citizenship                              []CWE   `hl7:"19,len=705,table=0171,display=Citizenship"`
	PrimaryLanguage                          *CWE    `hl7:"20,len=705,table=0296,display=Primary Language"`
	LivingArrangement                        IS      `hl7:"21,len=2,table=0220,display=Living Arrangement"`
	PublicityCode                            *CWE    `hl7:"22,len=705,table=0215,display=Publicity Code"`
	ProtectionIndicator                      ID      `hl7:"23,len=1,table=0136,display=Protection Indicator"`
	StudentIndicator                         IS      `hl7:"24,len=2,table=0231,display=Student Indicator"`
	Religion                                 *CWE    `hl7:"25,len=705,table=0006,display=Religion"`
	MothersMaidenName                        []XPN   `hl7:"26,len=250,display=Mother's Maiden Name"`
	Nationality                              *CWE    `hl7:"27,len=705,table=0212,display=Nationality"`
	EthnicGroup                              []CWE   `hl7:"28,len=705,table=0189,display=Ethnic Group"`
	ContactReason                            []CWE   `hl7:"29,len=705,table=0222,display=Contact Reason"`
	ContactPersonsName                       []XPN   `hl7:"30,len=250,display=Contact Person's Name"`
	ContactPersonsTelephoneNumber            []XTN   `hl7:"31,len=250,display=Contact Person's Telephone Number"`
	ContactPersonsAddress                    []XAD   `hl7:"32,len=250,display=Contact Person's Address"`
	NextOfKinAssociatedPartysIdentifiers     []CX    `hl7:"33,len=250,display=Next of Kin/Associated Party's Identifiers"`
	JobStatus                                IS      `hl7:"34,len=2,table=0311,display=Job Status"`
	Race                                     []CWE   `hl7:"35,len=705,table=0005,display=Race"`
	Handicap                                 IS      `hl7:"36,len=2,table=0295,display=Handicap"`
	ContactPersonSocialSecurityNumber        ST      `hl7:"37,len=16,display=Contact Person Social Security Number"`
	NextOfKinBirthPlace                      ST      `hl7:"38,len=250,display=Next of Kin Birth Place"`
	VIPIndicator                             IS      `hl7:"39,len=2,table=0099,display=VIP Indicator"`
}

// Bed Status Update
//
// The NPU segment allows the updating of census (bed status) data without sending patient-specific data. An example might
// include changing the status of a bed from "housekeeping" to "unoccupied."
type NPU struct {
	HL7         HL7Name `hl7:",name=NPU,type=s"`
	BedLocation PL      `hl7:"1,required,len=80,display=Bed Location"`
	BedStatus   IS      `hl7:"2,len=1,table=0116,display=Bed Status"`
}

// Application Status Change
//
// The NSC segment is used to inform (NMR query response) or announce (NMD unsolicited update) the start-up, shut-down, and/or
// migration (to a different CPU or file-server/file-system) of a particular application.
type NSC struct {
	HL7                   HL7Name `hl7:",name=NSC,type=s"`
	ApplicationChangeType IS      `hl7:"1,required,len=4,table=0409,display=Application Change Type"`
	CurrentCPU            ST      `hl7:"2,len=30,display=Current CPU"`
	CurrentFileserver     ST      `hl7:"3,len=30,display=Current Fileserver"`
	CurrentApplication    *HD     `hl7:"4,len=30,display=Current Application"`
	CurrentFacility       *HD     `hl7:"5,len=30,display=Current Facility"`
	NewCPU                ST      `hl7:"6,len=30,display=New CPU"`
	NewFileserver         ST      `hl7:"7,len=30,display=New Fileserver"`
	NewApplication        *HD     `hl7:"8,len=30,display=New Application"`
	NewFacility           *HD     `hl7:"9,len=30,display=New Facility"`
}

// Application control level statistics
//
// The NST segment allows application control-level statistical information to be passed between the various systems on
// the network. Some fields in this segment refer to portions of lower level protocols; they contain information that can
// be used by application management applications monitoring the state of various network links.
type NST struct {
	HL7                           HL7Name `hl7:",name=NST,type=s"`
	StatisticsAvailable           ID      `hl7:"1,required,len=1,table=0136,display=Statistics Available"`
	SourceIdentifier              ST      `hl7:"2,len=30,display=Source Identifier"`
	SourceType                    ID      `hl7:"3,len=3,table=0332,display=Source Type"`
	StatisticsStart               DTM     `hl7:"4,conditional,len=24,format=YMDHM,display=Statistics Start"`
	StatisticsEnd                 DTM     `hl7:"5,conditional,len=24,format=YMDHM,display=Statistics End"`
	ReceiveCharacterCount         NM      `hl7:"6,len=10,display=Receive Character Count"`
	SendCharacterCount            NM      `hl7:"7,len=10,display=Send Character Count"`
	MessagesReceived              NM      `hl7:"8,len=10,display=Messages Received"`
	MessagesSent                  NM      `hl7:"9,len=10,display=Messages Sent"`
	ChecksumErrorsReceived        NM      `hl7:"10,len=10,display=Checksum Errors Received"`
	LengthErrorsReceived          NM      `hl7:"11,len=10,display=Length Errors Received"`
	OtherErrorsReceived           NM      `hl7:"12,len=10,display=Other Errors Received"`
	ConnectTimeouts               NM      `hl7:"13,len=10,display=Connect Timeouts"`
	ReceiveTimeouts               NM      `hl7:"14,len=10,display=Receive Timeouts"`
	ApplicationControlLevelErrors NM      `hl7:"15,len=10,display=Application control-level Errors"`
}

// Notes and Comments
//
// The NTE segment is defined here for inclusion in messages defined in other chapters. It is commonly used for sending notes
// and comments.
type NTE struct {
	HL7                HL7Name `hl7:",name=NTE,type=s"`
	SetID              SI      `hl7:"1,seq,len=4,display=Set ID - NTE"`
	SourceOfComment    ID      `hl7:"2,len=8,table=0105,display=Source of Comment"`
	Comment            []FT    `hl7:"3,len=65536,display=Comment"`
	CommentType        *CWE    `hl7:"4,len=250,table=0364,display=Comment Type"`
	EnteredBy          *XCN    `hl7:"5,len=3220,display=Entered By"`
	EnteredDateTime    DTM     `hl7:"6,len=24,format=YMDHM,display=Entered Date/Time"`
	EffectiveStartDate DTM     `hl7:"7,len=24,format=YMDHM,display=Effective Start Date"`
	ExpirationDate     DTM     `hl7:"8,len=24,format=YMDHM,display=Expiration Date"`
}

// Observation Request
//
// General (taken from ASTM E1238)
//
// The Observation Request (OBR) segment is used to transmit information specific to an order for a diagnostic study or observation,
// physical exam, or assessment.
type OBR struct {
	HL7                                        HL7Name `hl7:",name=OBR,type=s"`
	SetID                                      SI      `hl7:"1,seq,len=4,display=Set ID - OBR"`
	PlacerOrderNumber                          *EI     `hl7:"2,conditional,len=427,display=Placer Order Number"`
	FillerOrderNumber                          *EI     `hl7:"3,conditional,len=427,display=Filler Order Number"`
	UniversalServiceIdentifier                 CWE     `hl7:"4,required,len=705,display=Universal Service Identifier"`
	Priority                                   ID      `hl7:"5,len=2,display=Priority"`
	RequestedDateTime                          DTM     `hl7:"6,len=24,format=YMDHM,display=Requested Date/Time"`
	ObservationDateTime                        DTM     `hl7:"7,conditional,len=24,format=YMDHM,display=Observation Date/Time"`
	ObservationEndDateTime                     DTM     `hl7:"8,len=24,format=YMDHM,display=Observation End Date/Time"`
	CollectionVolume                           *CQ     `hl7:"9,len=722,display=Collection Volume"`
	CollectorIdentifier                        []XCN   `hl7:"10,len=3220,display=Collector Identifier"`
	SpecimenActionCode                         ID      `hl7:"11,len=1,table=0065,display=Specimen Action Code"`
	DangerCode                                 *CWE    `hl7:"12,len=705,display=Danger Code"`
	RelevantClinicalInformation                ST      `hl7:"13,len=300,display=Relevant Clinical Information"`
	SpecimenReceivedDateTime                   DTM     `hl7:"14,len=24,format=YMDHM,display=Specimen Received Date/Time"`
	SpecimenSource                             SPS     `hl7:"15,len=300,display=Specimen Source"`
	OrderingProvider                           []XCN   `hl7:"16,len=3220,display=Ordering Provider"`
	OrderCallbackPhoneNumber                   []XTN   `hl7:"17,max=2,len=2743,display=Order Callback Phone Number"`
	PlacerField1                               ST      `hl7:"18,len=199,display=Placer Field 1"`
	PlacerField2                               ST      `hl7:"19,len=199,display=Placer Field 2"`
	FillerField1                               ST      `hl7:"20,len=199,display=Filler Field 1"`
	FillerField2                               ST      `hl7:"21,len=199,display=Filler Field 2"`
	ResultsRptStatusChngDateTime               DTM     `hl7:"22,conditional,len=24,format=YMDHM,display=Results Rpt/Status Chng - Date/Time"`
	ChargeToPractice                           *MOC    `hl7:"23,len=504,display=Charge to Practice"`
	DiagnosticServSectID                       ID      `hl7:"24,len=10,table=0074,display=Diagnostic Serv Sect ID"`
	ResultStatus                               ID      `hl7:"25,conditional,len=1,table=0123,display=Result Status"`
	ParentResult                               *PRL    `hl7:"26,len=977,display=Parent Result"`
	QuantityTiming                             []TQ    `hl7:"27,len=705,display=Quantity/Timing"`
	ResultCopiesTo                             []XCN   `hl7:"28,len=3220,display=Result Copies To"`
	Parent                                     *EIP    `hl7:"29,len=855,display=Parent"`
	TransportationMode                         ID      `hl7:"30,len=20,table=0124,display=Transportation Mode"`
	ReasonForStudy                             []CWE   `hl7:"31,len=705,display=Reason for Study"`
	PrincipalResultInterpreter                 NDL     `hl7:"32,len=831,display=Principal Result Interpreter"`
	AssistantResultInterpreter                 []NDL   `hl7:"33,len=831,display=Assistant Result Interpreter"`
	Technician                                 []NDL   `hl7:"34,len=831,display=Technician"`
	Transcriptionist                           []NDL   `hl7:"35,len=831,display=Transcriptionist"`
	ScheduledDateTime                          DTM     `hl7:"36,len=24,format=YMDHM,display=Scheduled Date/Time"`
	NumberOfSampleContainers                   NM      `hl7:"37,len=16,display=Number of Sample Containers"`
	TransportLogisticsOfCollectedSample        []CWE   `hl7:"38,len=705,display=Transport Logistics of Collected Sample"`
	CollectorsComment                          []CWE   `hl7:"39,len=705,display=Collector's Comment"`
	TransportArrangementResponsibility         *CWE    `hl7:"40,len=705,display=Transport Arrangement Responsibility"`
	TransportArranged                          ID      `hl7:"41,len=30,table=0224,display=Transport Arranged"`
	EscortRequired                             ID      `hl7:"42,len=1,table=0225,display=Escort Required"`
	PlannedPatientTransportComment             []CWE   `hl7:"43,len=705,display=Planned Patient Transport Comment"`
	ProcedureCode                              *CNE    `hl7:"44,len=705,table=0088,display=Procedure Code"`
	ProcedureCodeModifier                      []CNE   `hl7:"45,len=705,table=0340,display=Procedure Code Modifier"`
	PlacerSupplementalServiceInformation       []CWE   `hl7:"46,len=705,table=0441,display=Placer Supplemental Service Information"`
	FillerSupplementalServiceInformation       []CWE   `hl7:"47,len=705,table=0441,display=Filler Supplemental Service Information"`
	MedicallyNecessaryDuplicateProcedureReason *CWE    `hl7:"48,conditional,len=705,table=0476,display=Medically Necessary Duplicate Procedure Reason"`
	ResultHandling                             IS      `hl7:"49,len=2,table=0507,display=Result Handling"`
	ParentUniversalServiceIdentifier           *CWE    `hl7:"50,len=705,display=Parent Universal Service Identifier"`
}

// Observation/Result
//
// The OBX segment is used to transmit a single observation or observation fragment. It represents the smallest indivisible
// unit of a report. The OBX segment can also contain encapsulated data, e.g., a CDA document or a DICOM image.
type OBX struct {
	HL7                                   HL7Name  `hl7:",name=OBX,type=s"`
	SetID                                 SI       `hl7:"1,seq,len=4,display=Set ID – OBX"`
	ValueType                             ID       `hl7:"2,conditional,len=3,table=0125,display=Value Type"`
	ObservationIdentifier                 CWE      `hl7:"3,required,len=705,display=Observation Identifier"`
	ObservationSubID                      ST       `hl7:"4,conditional,len=20,display=Observation Sub-ID"`
	ObservationValue                      []VARIES `hl7:"5,conditional,len=99999,display=Observation Value"`
	Units                                 *CWE     `hl7:"6,len=705,display=Units"`
	ReferencesRange                       ST       `hl7:"7,len=60,display=References Range"`
	AbnormalFlags                         []IS     `hl7:"8,len=5,table=0078,display=Abnormal Flags"`
	Probability                           NM       `hl7:"9,len=5,display=Probability"`
	NatureOfAbnormalTest                  []ID     `hl7:"10,len=2,table=0080,display=Nature of Abnormal Test"`
	ObservationResultStatus               ID       `hl7:"11,required,len=1,table=0085,display=Observation Result Status"`
	EffectiveDateOfReferenceRange         DTM      `hl7:"12,len=24,format=YMDHM,display=Effective Date of Reference Range"`
	UserDefinedAccessChecks               ST       `hl7:"13,len=20,display=User Defined Access Checks"`
	DateTimeOfTheObservation              DTM      `hl7:"14,len=24,format=YMDHM,display=Date/Time of the Observation"`
	ProducersID                           *CWE     `hl7:"15,len=705,display=Producer's ID"`
	ResponsibleObserver                   []XCN    `hl7:"16,len=3220,display=Responsible Observer"`
	ObservationMethod                     []CWE    `hl7:"17,len=705,display=Observation Method"`
	EquipmentInstanceIdentifier           []EI     `hl7:"18,len=427,display=Equipment Instance Identifier"`
	DateTimeOfTheAnalysis                 DTM      `hl7:"19,len=24,format=YMDHM,display=Date/Time of the Analysis"`
	ObservationSite                       []CWE    `hl7:"20,len=705,table=0163,display=Observation Site"`
	ObservationInstanceIdentifier         *EI      `hl7:"21,len=427,display=Observation Instance Identifier"`
	MoodCode                              *CNE     `hl7:"22,conditional,len=705,table=0725,display=Mood Code"`
	PerformingOrganizationName            *XON     `hl7:"23,len=570,display=Performing Organization Name"`
	PerformingOrganizationAddress         *XAD     `hl7:"24,len=2915,display=Performing Organization Address"`
	PerformingOrganizationMedicalDirector *XCN     `hl7:"25,len=3220,display=Performing Organization Medical Director"`
}

// Dietary Orders, Supplements, and Preferences
//
// The ORC sequence items of interest to ODS are ORC-1-order control, ORC-2-placer order number, ORC-3-filler order number,
// ORC-7-quantity/timing, ORC-9-date/time of transaction, ORC-10-entered by, and ORC-11-verified by. For ORC-1-order
// control, the values may be New (NW), Cancel (CA), Discontinue Order Request (DC), Change (XO), Hold Order Request (HD),
// and Release Previous Hold (RL). The HD and RL codes could stop service for a specified length of time. ORC-7-quantity/timing
// should be used to specify whether an order is continuous or for one service period only. It is also useful for supplements
// which are part of a diet but only delivered, say, every day at night.
type ODS struct {
	HL7                            HL7Name `hl7:",name=ODS,type=s"`
	Type                           ID      `hl7:"1,required,len=1,table=0159,display=Type"`
	ServicePeriod                  []CWE   `hl7:"2,max=10,len=250,display=Service Period"`
	DietSupplementOrPreferenceCode []CWE   `hl7:"3,required,max=20,len=250,display=Diet- Supplement- or Preference Code"`
	TextInstruction                []ST    `hl7:"4,max=2,len=80,display=Text Instruction"`
}

// Diet Tray Instructions
//
// This segment addresses tray instructions. These are independent of diet codes, supplements, and preferences and therefore
// get separate order numbers.
type ODT struct {
	HL7             HL7Name `hl7:",name=ODT,type=s"`
	TrayType        CWE     `hl7:"1,required,len=250,table=0160,display=Tray Type"`
	ServicePeriod   []CWE   `hl7:"2,max=10,len=250,display=Service Period"`
	TextInstruction ST      `hl7:"3,len=80,display=Text Instruction"`
}

// General Segment
//
// The Technical Steward for the OM1 segment is Orders and Observations.
//
// The OM1 segment contains the attributes that apply to the definition of most observations.  This segment also contains
// the field attributes that specify what additional segments might also be defined for this observation.
type OM1 struct {
	HL7                                                    HL7Name `hl7:",name=OM1,type=s"`
	SequenceNumberTestObservationMasterFile                NM      `hl7:"1,required,len=4,display=Sequence Number - Test/Observation Master File"`
	ProducersServiceTestObservationID                      CWE     `hl7:"2,required,len=250,display=Producer's Service/Test/Observation ID"`
	PermittedDataTypes                                     []ID    `hl7:"3,len=12,table=0125,display=Permitted Data Types"`
	SpecimenRequired                                       ID      `hl7:"4,required,len=1,table=0136,display=Specimen Required"`
	ProducerID                                             CWE     `hl7:"5,required,len=250,display=Producer ID"`
	ObservationDescription                                 TX      `hl7:"6,len=200,display=Observation Description"`
	OtherServiceTestObservationIDsForTheObservation        *CWE    `hl7:"7,len=250,display=Other Service/Test/Observation IDs for the Observation"`
	OtherNames                                             []ST    `hl7:"8,required,len=200,display=Other Names"`
	PreferredReportNameForTheObservation                   ST      `hl7:"9,len=30,display=Preferred Report Name for the Observation"`
	PreferredShortNameOrMnemonicForObservation             ST      `hl7:"10,len=8,display=Preferred Short Name or Mnemonic for Observation"`
	PreferredLongNameForTheObservation                     ST      `hl7:"11,len=200,display=Preferred Long Name for the Observation"`
	Orderability                                           ID      `hl7:"12,len=1,table=0136,display=Orderability"`
	IdentityOfInstrumentUsedToPerformThisStudy             []CWE   `hl7:"13,len=250,display=Identity of Instrument Used to Perform this Study"`
	CodedRepresentationOfMethod                            []CWE   `hl7:"14,len=250,display=Coded Representation of Method"`
	PortableDeviceIndicator                                ID      `hl7:"15,len=1,table=0136,display=Portable Device Indicator"`
	ObservationProducingDepartmentSection                  []CWE   `hl7:"16,len=250,display=Observation Producing Department/Section"`
	TelephoneNumberOfSection                               *XTN    `hl7:"17,len=250,display=Telephone Number of Section"`
	NatureOfServiceTestObservation                         IS      `hl7:"18,required,len=1,table=0174,display=Nature of Service/Test/Observation"`
	ReportSubheader                                        *CWE    `hl7:"19,len=250,display=Report Subheader"`
	ReportDisplayOrder                                     ST      `hl7:"20,len=20,display=Report Display Order"`
	DateTimeStampForAnyChangeInDefinitionForTheObservation DTM     `hl7:"21,len=24,format=YMDHM,display=Date/Time Stamp for any change in Definition for the Observation"`
	EffectiveDateTimeOfChange                              DTM     `hl7:"22,len=24,format=YMDHM,display=Effective Date/Time of Change"`
	TypicalTurnAroundTime                                  NM      `hl7:"23,len=20,display=Typical Turn-Around Time"`
	ProcessingTime                                         NM      `hl7:"24,len=20,display=Processing Time"`
	ProcessingPriority                                     []ID    `hl7:"25,len=40,table=0168,display=Processing Priority"`
	ReportingPriority                                      ID      `hl7:"26,len=5,table=0169,display=Reporting Priority"`
	OutsideSiteSWhereObservationMayBePerformed             []CWE   `hl7:"27,len=250,display=Outside Site(s) Where Observation may be Performed"`
	AddressOfOutsideSiteS                                  []XAD   `hl7:"28,len=250,display=Address of Outside Site(s)"`
	PhoneNumberOfOutsideSite                               *XTN    `hl7:"29,len=250,display=Phone Number of Outside Site"`
	ConfidentialityCode                                    *CWE    `hl7:"30,len=250,table=0177,display=Confidentiality Code"`
	ObservationsRequiredToInterpretTheObservation          *CWE    `hl7:"31,len=250,display=Observations Required to Interpret the Observation"`
	InterpretationOfObservations                           TX      `hl7:"32,len=65536,display=Interpretation of Observations"`
	ContraindicationsToObservations                        *CWE    `hl7:"33,len=250,display=Contraindications to Observations"`
	ReflexTestsObservations                                []CWE   `hl7:"34,len=250,display=Reflex Tests/Observations"`
	RulesThatTriggerReflexTesting                          TX      `hl7:"35,len=80,display=Rules that Trigger Reflex Testing"`
	FixedCannedMessage                                     *CWE    `hl7:"36,len=250,display=Fixed Canned Message"`
	PatientPreparation                                     TX      `hl7:"37,len=200,display=Patient Preparation"`
	ProcedureMedication                                    *CWE    `hl7:"38,len=250,display=Procedure Medication"`
	FactorsThatMayAffectTheObservation                     TX      `hl7:"39,len=200,display=Factors that may Affect the Observation"`
	ServiceTestObservationPerformanceSchedule              []ST    `hl7:"40,len=60,display=Service/Test/Observation Performance Schedule"`
	DescriptionOfTestMethods                               TX      `hl7:"41,len=65536,display=Description of Test Methods"`
	KindOfQuantityObserved                                 *CWE    `hl7:"42,len=250,table=0254,display=Kind of Quantity Observed"`
	PointVersusInterval                                    *CWE    `hl7:"43,len=250,table=0255,display=Point Versus Interval"`
	ChallengeInformation                                   TX      `hl7:"44,len=200,display=Challenge Information"`
	RelationshipModifier                                   *CWE    `hl7:"45,len=250,table=0258,display=Relationship Modifier"`
	TargetAnatomicSiteOfTest                               *CWE    `hl7:"46,len=250,display=Target Anatomic Site Of Test"`
	ModalityOfImagingMeasurement                           *CWE    `hl7:"47,len=250,table=0259,display=Modality Of Imaging Measurement"`
}

// Numeric Observation
//
// The Technical Steward for the OM2 segment is Orders and Observations.
//
// This segment contains the attributes of observations with continuous values (including those with data types of numeric,
// date, or time stamp).  It can be applied to observation batteries of type A and C (see OM1-18 - Nature of Service/Test/Observation).
type OM2 struct {
	HL7                                                     HL7Name `hl7:",name=OM2,type=s"`
	SequenceNumberTestObservationMasterFile                 NM      `hl7:"1,len=4,display=Sequence Number - Test/Observation Master File"`
	UnitsOfMeasure                                          *CWE    `hl7:"2,len=250,display=Units of Measure"`
	RangeOfDecimalPrecision                                 []NM    `hl7:"3,len=10,display=Range of Decimal Precision"`
	CorrespondingSIUnitsOfMeasure                           *CWE    `hl7:"4,len=250,display=Corresponding SI Units of Measure"`
	SIConversionFactor                                      TX      `hl7:"5,len=60,display=SI Conversion Factor"`
	ReferenceNormalRangeForOrdinalAndContinuousObservations []RFR   `hl7:"6,len=250,display=Reference (Normal) Range for Ordinal and Continuous Observations"`
	CriticalRangeForOrdinalAndContinuousObservations        []RFR   `hl7:"7,len=205,display=Critical Range for Ordinal and Continuous Observations"`
	AbsoluteRangeForOrdinalAndContinuousObservations        *RFR    `hl7:"8,len=250,display=Absolute Range for Ordinal and Continuous Observations"`
	DeltaCheckCriteria                                      []DLT   `hl7:"9,len=250,display=Delta Check Criteria"`
	MinimumMeaningfulIncrements                             NM      `hl7:"10,len=20,display=Minimum Meaningful Increments"`
}

// Categorical Service/Test/Observation
//
// The Technical Steward for the OM3 segment is Orders and Observations.
//
// This segment applies to free text and other non-numeric data types.
type OM3 struct {
	HL7                                         HL7Name `hl7:",name=OM3,type=s"`
	SequenceNumberTestObservationMasterFile     NM      `hl7:"1,len=4,display=Sequence Number - Test/Observation Master File"`
	PreferredCodingSystem                       *CWE    `hl7:"2,len=250,display=Preferred Coding System"`
	ValidCodedAnswers                           []CWE   `hl7:"3,len=250,display=Valid Coded 'Answers'"`
	NormalTextCodesForCategoricalObservations   []CWE   `hl7:"4,len=250,display=Normal Text/Codes for Categorical Observations"`
	AbnormalTextCodesForCategoricalObservations []CWE   `hl7:"5,len=250,display=Abnormal Text/Codes for Categorical Observations"`
	CriticalTextCodesForCategoricalObservations []CWE   `hl7:"6,len=250,display=Critical Text/Codes for Categorical Observations"`
	ValueType                                   ID      `hl7:"7,len=3,table=0125,display=Value Type"`
}

// Observations That Require Specimens
//
// The Technical Steward for the OM4 segment is Orders and Observations.
//
// This segment applies to observations/batteries that require a specimen for their performance.  When an observation or
// battery requires multiple specimens for their performance (e.g., creatinine clearance requires a 24-hour urine specimen
// and a serum specimen), multiple segments may be included, one for each specimen type.
type OM4 struct {
	HL7                                     HL7Name `hl7:",name=OM4,type=s"`
	SequenceNumberTestObservationMasterFile NM      `hl7:"1,len=4,display=Sequence Number - Test/Observation Master File"`
	DerivedSpecimen                         ID      `hl7:"2,len=1,table=0170,display=Derived Specimen"`
	ContainerDescription                    TX      `hl7:"3,len=60,display=Container Description"`
	ContainerVolume                         NM      `hl7:"4,len=20,display=Container Volume"`
	ContainerUnits                          *CWE    `hl7:"5,len=250,display=Container Units"`
	Specimen                                *CWE    `hl7:"6,len=250,display=Specimen"`
	Additive                                *CWE    `hl7:"7,len=705,table=0371,display=Additive"`
	Preparation                             TX      `hl7:"8,len=10240,display=Preparation"`
	SpecialHandlingRequirements             TX      `hl7:"9,len=10240,display=Special Handling Requirements"`
	NormalCollectionVolume                  *CQ     `hl7:"10,len=20,display=Normal Collection Volume"`
	MinimumCollectionVolume                 *CQ     `hl7:"11,len=20,display=Minimum Collection Volume"`
	SpecimenRequirements                    TX      `hl7:"12,len=10240,display=Specimen Requirements"`
	SpecimenPriorities                      []ID    `hl7:"13,len=1,table=0027,display=Specimen Priorities"`
	SpecimenRetentionTime                   *CQ     `hl7:"14,len=20,display=Specimen Retention Time"`
}

// Observation Batteries (Sets)
//
// The Technical Steward for the OM5 segment is Orders and Observations.
//
// This segment contains the information about batteries and supersets (a nature code of F, P or S, as described in OM1-18 -
// Nature of Service/Test/Observation).
type OM5 struct {
	HL7                                                HL7Name `hl7:",name=OM5,type=s"`
	SequenceNumberTestObservationMasterFile            NM      `hl7:"1,len=4,display=Sequence Number - Test/Observation Master File"`
	TestObservationsIncludedWithinAnOrderedTestBattery []CWE   `hl7:"2,len=250,display=Test/Observations Included Within an Ordered Test Battery"`
	ObservationIDSuffixes                              ST      `hl7:"3,len=250,display=Observation ID Suffixes"`
}

// Observations that are Calculated from Other Observations
//
// The Technical Steward for the OM6 segment is Orders and Observations.
//
// This segment contains the information about quantities that are derived from one or more other quantities or direct observations
// by mathematical or logical means.
type OM6 struct {
	HL7                                     HL7Name `hl7:",name=OM6,type=s"`
	SequenceNumberTestObservationMasterFile NM      `hl7:"1,len=4,display=Sequence Number - Test/Observation Master File"`
	DerivationRule                          TX      `hl7:"2,len=10240,display=Derivation Rule"`
}

// Additional Basic Attributes
//
// The Technical Steward for the OM7 segment is Orders and Observations.
//
// The OM7 segment contains additional basic attributes that apply to the definition of most observations/services.
type OM7 struct {
	HL7                                     HL7Name `hl7:",name=OM7,type=s"`
	SequenceNumberTestObservationMasterFile NM      `hl7:"1,required,len=4,display=Sequence Number - Test/Observation Master File"`
	UniversalServiceIdentifier              CWE     `hl7:"2,required,len=705,display=Universal Service Identifier"`
	CategoryIdentifier                      []CWE   `hl7:"3,len=250,table=0412,display=Category Identifier"`
	CategoryDescription                     TX      `hl7:"4,len=200,display=Category Description"`
	CategorySynonym                         []ST    `hl7:"5,len=200,display=Category Synonym"`
	EffectiveTestServiceStartDateTime       DTM     `hl7:"6,len=24,format=YMDHM,display=Effective Test/Service Start Date/Time"`
	EffectiveTestServiceEndDateTime         DTM     `hl7:"7,len=24,format=YMDHM,display=Effective Test/Service End Date/Time"`
	TestServiceDefaultDurationQuantity      NM      `hl7:"8,len=5,display=Test/Service Default Duration Quantity"`
	TestServiceDefaultDurationUnits         *CWE    `hl7:"9,len=250,display=Test/Service Default Duration Units"`
	TestServiceDefaultFrequency             IS      `hl7:"10,len=60,display=Test/Service Default Frequency"`
	ConsentIndicator                        ID      `hl7:"11,len=1,table=0136,display=Consent Indicator"`
	ConsentIdentifier                       *CWE    `hl7:"12,len=250,table=0413,display=Consent Identifier"`
	ConsentEffectiveStartDateTime           DTM     `hl7:"13,len=24,format=YMDHM,display=Consent Effective Start Date/Time"`
	ConsentEffectiveEndDateTime             DTM     `hl7:"14,len=24,format=YMDHM,display=Consent Effective End Date/Time"`
	ConsentIntervalQuantity                 NM      `hl7:"15,len=5,display=Consent Interval Quantity"`
	ConsentIntervalUnits                    *CWE    `hl7:"16,conditional,len=250,table=0414,display=Consent Interval Units"`
	ConsentWaitingPeriodQuantity            NM      `hl7:"17,len=5,display=Consent Waiting Period Quantity"`
	ConsentWaitingPeriodUnits               *CWE    `hl7:"18,conditional,len=250,table=0414,display=Consent Waiting Period Units"`
	EffectiveDateTimeOfChange               DTM     `hl7:"19,len=24,format=YMDHM,display=Effective Date/Time of Change"`
	EnteredBy                               *XCN    `hl7:"20,len=3220,display=Entered By"`
	OrderableAtLocation                     []PL    `hl7:"21,len=200,display=Orderable-at Location"`
	FormularyStatus                         IS      `hl7:"22,len=1,table=0473,display=Formulary Status"`
	SpecialOrderIndicator                   ID      `hl7:"23,len=1,table=0136,display=Special Order Indicator"`
	PrimaryKeyValueCDM                      []CWE   `hl7:"24,len=250,table=0132,display=Primary Key Value - CDM"`
}

// Common Order
//
// The Common Order segment (ORC) is used to transmit fields that are common to all orders (all types of services that are requested).
type ORC struct {
	HL7                                     HL7Name `hl7:",name=ORC,type=s"`
	OrderControl                            ID      `hl7:"1,required,len=2,table=0119,display=Order Control"`
	PlacerOrderNumber                       *EI     `hl7:"2,conditional,len=427,display=Placer Order Number"`
	FillerOrderNumber                       *EI     `hl7:"3,conditional,len=427,display=Filler Order Number"`
	PlacerGroupNumber                       *EI     `hl7:"4,len=22,display=Placer Group Number"`
	OrderStatus                             ID      `hl7:"5,len=2,table=0038,display=Order Status"`
	ResponseFlag                            ID      `hl7:"6,len=1,table=0121,display=Response Flag"`
	QuantityTiming                          []TQ    `hl7:"7,len=705,display=Quantity/Timing"`
	Parent                                  *EIP    `hl7:"8,len=200,display=Parent"`
	DateTimeOfTransaction                   DTM     `hl7:"9,len=24,format=YMDHM,display=Date/Time of Transaction"`
	EnteredBy                               []XCN   `hl7:"10,len=3220,display=Entered By"`
	VerifiedBy                              []XCN   `hl7:"11,len=250,display=Verified By"`
	OrderingProvider                        []XCN   `hl7:"12,len=3220,display=Ordering Provider"`
	EnterersLocation                        *PL     `hl7:"13,len=80,display=Enterer's Location"`
	CallBackPhoneNumber                     []XTN   `hl7:"14,max=2,len=250,display=Call Back Phone Number"`
	OrderEffectiveDateTime                  DTM     `hl7:"15,len=24,format=YMDHM,display=Order Effective Date/Time"`
	OrderControlCodeReason                  *CWE    `hl7:"16,len=250,display=Order Control Code Reason"`
	EnteringOrganization                    *CWE    `hl7:"17,len=250,display=Entering Organization"`
	EnteringDevice                          *CWE    `hl7:"18,len=250,display=Entering Device"`
	ActionBy                                []XCN   `hl7:"19,len=250,display=Action By"`
	AdvancedBeneficiaryNoticeCode           *CWE    `hl7:"20,len=250,table=0339,display=Advanced Beneficiary Notice Code"`
	OrderingFacilityName                    []XON   `hl7:"21,len=250,display=Ordering Facility Name"`
	OrderingFacilityAddress                 []XAD   `hl7:"22,len=250,display=Ordering Facility Address"`
	OrderingFacilityPhoneNumber             []XTN   `hl7:"23,len=250,display=Ordering Facility Phone Number"`
	OrderingProviderAddress                 []XAD   `hl7:"24,len=250,display=Ordering Provider Address"`
	OrderStatusModifier                     *CWE    `hl7:"25,len=250,display=Order Status Modifier"`
	AdvancedBeneficiaryNoticeOverrideReason *CWE    `hl7:"26,conditional,len=60,table=0552,display=Advanced Beneficiary Notice Override Reason"`
	FillersExpectedAvailabilityDateTime     DTM     `hl7:"27,len=24,format=YMDHM,display=Filler's Expected Availability Date/Time"`
	ConfidentialityCode                     *CWE    `hl7:"28,len=250,table=0177,display=Confidentiality Code"`
	OrderType                               *CWE    `hl7:"29,len=250,table=0482,display=Order Type"`
	EntererAuthorizationMode                *CNE    `hl7:"30,len=250,table=0483,display=Enterer Authorization Mode"`
	ParentUniversalServiceIdentifier        *CWE    `hl7:"31,len=250,display=Parent Universal Service Identifier"`
}

// Practitioner Organization Unit
//
// The ORG segment relates a practitioner to an organization unit and adds detailed information regarding the practitioner's
// practicing specialty in that organization unit. An ORG segment may optionally follow an STF segment. An ORG segment must
// always have been preceded by a corresponding STF segment. If no organization unit is specified, this segment is used to
// relate practitioners with their practicing specialties, including effective and end dates. When it is not necessary
// to record organization unit or dates associated with the practicing specialty, this data is recorded in PRA-3-Practitioner
// Category.
type ORG struct {
	HL7                                        HL7Name `hl7:",name=ORG,type=s"`
	SetID                                      SI      `hl7:"1,seq,required,len=60,display=Set ID – ORG"`
	OrganizationUnitCode                       *CWE    `hl7:"2,len=250,table=0405,display=Organization Unit Code"`
	OrganizationUnitTypeCode                   *CWE    `hl7:"3,len=250,table=0474,display=Organization Unit Type Code"`
	PrimaryUnitIndicator                       ID      `hl7:"4,len=1,table=0136,display=Primary Org Unit Indicator"`
	PractitionerUnitIdentifier                 *CX     `hl7:"5,len=60,display=Practitioner Org Unit Identifier"`
	HealthCareProviderTypeCode                 *CWE    `hl7:"6,len=250,table=0452,display=Health Care Provider Type Code"`
	HealthCareProviderClassificationCode       *CWE    `hl7:"7,len=250,table=0453,display=Health Care Provider Classification Code"`
	HealthCareProviderAreaOfSpecializationCode *CWE    `hl7:"8,len=250,table=0454,display=Health Care Provider Area of Specialization Code"`
	EffectiveDateRange                         *DR     `hl7:"9,len=52,display=Effective Date Range"`
	EmploymentStatusCode                       *CWE    `hl7:"10,len=250,table=0066,display=Employment Status Code"`
	BoardApprovalIndicator                     ID      `hl7:"11,len=1,table=0136,display=Board Approval Indicator"`
	PrimaryCarePhysicianIndicator              ID      `hl7:"12,len=1,table=0136,display=Primary Care Physician Indicator"`
}

// Override Segment
//
// Definition: This segment allows a sender to override specific receiving application's business rules to allow for processing
// of a message that would normally be rejected or ignored.
//
// Example: MSH PID PV1 {ORC RXE {RXR} RXD {RXR} <RXC> <NTE> <FT1> <OVR>}
type OVR struct {
	HL7                      HL7Name `hl7:",name=OVR,type=s"`
	BusinessRuleOverrideType *CWE    `hl7:"1,len=705,table=0518,display=Business Rule Override Type"`
	BusinessRuleOverrideCode *CWE    `hl7:"2,len=705,table=0521,display=Business Rule Override Code"`
	OverrideComments         TX      `hl7:"3,len=200,display=Override Comments"`
	OverrideEnteredBy        *XCN    `hl7:"4,len=250,display=Override Entered By"`
	OverrideAuthorizedBy     *XCN    `hl7:"5,len=250,display=Override Authorized By"`
}

// Patient Charge Cost Center Exception
//
// The Patient Charge Cost Center Exception segment identifies the Patient Price associated with Cost Center and Patient
// Charge Identifier combinations that should be used in an instance that the item is billed to a patient. The grouping of Cost
// Center accounts, Patient Charge Identifier, and Patient Price is unique.
type PCE struct {
	HL7                     HL7Name `hl7:",name=PCE,type=s"`
	SetID                   SI      `hl7:"1,seq,required,len=2,display=Set ID – PCE"`
	CostCenterAccountNumber IS      `hl7:"2,len=30,table=0319,display=Cost Center Account Number"`
	TransactionCode         *CWE    `hl7:"3,len=250,table=0132,display=Transaction Code"`
	TransactionAmountUnit   *CP     `hl7:"4,len=12,display=Transaction Amount - Unit"`
}

// Possible Causal Relationship
//
// The PCR segment is used to communicate a potential or suspected relationship between a product (drug or device) or test
// and an event with detrimental effect on a patient. This segment identifies a potential causal relationship between the
// product identified in this segment and the event identified in the PEO segment.
type PCR struct {
	HL7                               HL7Name `hl7:",name=PCR,type=s"`
	ImplicatedProduct                 CWE     `hl7:"1,required,len=705,display=Implicated Product"`
	GenericProduct                    IS      `hl7:"2,len=1,table=0249,display=Generic Product"`
	ProductClass                      *CWE    `hl7:"3,len=705,display=Product Class"`
	TotalDurationOfTherapy            *CQ     `hl7:"4,len=500,display=Total Duration Of Therapy"`
	ProductManufactureDate            DTM     `hl7:"5,len=24,format=YMDHM,display=Product Manufacture Date"`
	ProductExpirationDate             DTM     `hl7:"6,len=24,format=YMDHM,display=Product Expiration Date"`
	ProductImplantationDate           DTM     `hl7:"7,len=24,format=YMDHM,display=Product Implantation Date"`
	ProductExplantationDate           DTM     `hl7:"8,len=24,format=YMDHM,display=Product Explantation Date"`
	SingleUseDevice                   IS      `hl7:"9,len=8,table=0244,display=Single Use Device"`
	IndicationForProductUse           *CWE    `hl7:"10,len=705,display=Indication For Product Use"`
	ProductProblem                    IS      `hl7:"11,len=8,table=0245,display=Product Problem"`
	ProductSerialLotNumber            []ST    `hl7:"12,max=3,len=199,display=Product Serial/Lot Number"`
	ProductAvailableForInspection     IS      `hl7:"13,len=1,table=0246,display=Product Available For Inspection"`
	ProductEvaluationPerformed        *CWE    `hl7:"14,len=705,display=Product Evaluation Performed"`
	ProductEvaluationStatus           *CWE    `hl7:"15,len=705,table=0247,display=Product Evaluation Status"`
	ProductEvaluationResults          *CWE    `hl7:"16,len=705,display=Product Evaluation Results"`
	EvaluatedProductSource            ID      `hl7:"17,len=8,table=0248,display=Evaluated Product Source"`
	DateProductReturnedToManufacturer DTM     `hl7:"18,len=24,format=YMDHM,display=Date Product Returned To Manufacturer"`
	DeviceOperatorQualifications      ID      `hl7:"19,len=1,table=0242,display=Device Operator Qualifications"`
	RelatednessAssessment             ID      `hl7:"20,len=1,table=0250,display=Relatedness Assessment"`
	ActionTakenInResponseToTheEvent   []ID    `hl7:"21,max=6,len=2,table=0251,display=Action Taken In Response To The Event"`
	EventCausalityObservations        []ID    `hl7:"22,max=6,len=2,table=0252,display=Event Causality Observations"`
	IndirectExposureMechanism         []ID    `hl7:"23,max=3,len=1,table=0253,display=Indirect Exposure Mechanism"`
}

// Patient Additional Demographic
//
// The patient additional demographic segment contains demographic information that is likely to change about the patient.
type PD1 struct {
	HL7                                     HL7Name `hl7:",name=PD1,type=s"`
	LivingDependency                        []IS    `hl7:"1,len=2,table=0223,display=Living Dependency"`
	LivingArrangement                       IS      `hl7:"2,len=2,table=0220,display=Living Arrangement"`
	PatientPrimaryFacility                  []XON   `hl7:"3,len=250,table=0204,display=Patient Primary Facility"`
	PatientPrimaryCareProviderNameAndIDNo   []XCN   `hl7:"4,len=250,display=Patient Primary Care Provider Name and ID No."`
	StudentIndicator                        IS      `hl7:"5,len=2,table=0231,display=Student Indicator"`
	Handicap                                IS      `hl7:"6,len=2,table=0295,display=Handicap"`
	LivingWillCode                          IS      `hl7:"7,len=2,table=0315,display=Living Will Code"`
	OrganDonorCode                          IS      `hl7:"8,len=2,table=0316,display=Organ Donor Code"`
	SeparateBill                            ID      `hl7:"9,len=1,table=0136,display=Separate Bill"`
	DuplicatePatient                        []CX    `hl7:"10,len=250,display=Duplicate Patient"`
	PublicityCode                           *CWE    `hl7:"11,len=705,table=0215,display=Publicity Code"`
	ProtectionIndicator                     ID      `hl7:"12,len=1,table=0136,display=Protection Indicator"`
	ProtectionIndicatorEffectiveDate        DT      `hl7:"13,len=8,format=YMD,display=Protection Indicator Effective Date"`
	PlaceOfWorship                          []XON   `hl7:"14,len=250,display=Place of Worship"`
	AdvanceDirectiveCode                    []CWE   `hl7:"15,conditional,len=705,table=0435,display=Advance Directive Code"`
	ImmunizationRegistryStatus              IS      `hl7:"16,len=1,table=0441,display=Immunization Registry Status"`
	ImmunizationRegistryStatusEffectiveDate DT      `hl7:"17,len=8,format=YMD,display=Immunization Registry Status Effective Date"`
	PublicityCodeEffectiveDate              DT      `hl7:"18,len=8,format=YMD,display=Publicity Code Effective Date"`
	MilitaryBranch                          IS      `hl7:"19,len=5,table=0140,display=Military Branch"`
	MilitaryRankGrade                       IS      `hl7:"20,len=2,table=0141,display=Military Rank/Grade"`
	MilitaryStatus                          IS      `hl7:"21,len=3,table=0142,display=Military Status"`
	AdvanceDirectiveLastVerifiedDate        DT      `hl7:"22,len=8,format=YMD,display=Advance Directive Last Verified Date"`
}

// Patient Death and Autopsy
//
// This segment carries information on a patient's death and possible autopsy.
type PDA struct {
	HL7                            HL7Name `hl7:",name=PDA,type=s"`
	DeathCauseCode                 []CWE   `hl7:"1,len=705,display=Death Cause Code"`
	DeathLocation                  *PL     `hl7:"2,len=80,display=Death Location"`
	DeathCertifiedIndicator        ID      `hl7:"3,len=1,table=0136,display=Death Certified Indicator"`
	DeathCertificateSignedDateTime DTM     `hl7:"4,len=24,format=YMDHM,display=Death Certificate Signed Date/Time"`
	DeathCertifiedBy               *XCN    `hl7:"5,len=250,display=Death Certified By"`
	AutopsyIndicator               ID      `hl7:"6,len=1,table=0136,display=Autopsy Indicator"`
	AutopsyStartAndEndDateTime     *DR     `hl7:"7,len=53,display=Autopsy Start and End Date/Time"`
	AutopsyPerformedBy             *XCN    `hl7:"8,len=250,display=Autopsy Performed By"`
	CoronerIndicator               ID      `hl7:"9,len=1,table=0136,display=Coroner Indicator"`
}

// Product Detail Country
type PDC struct {
	HL7                     HL7Name `hl7:",name=PDC,type=s"`
	ManufacturerDistributor []XON   `hl7:"1,required,len=570,display=Manufacturer/Distributor"`
	Country                 CWE     `hl7:"2,required,len=705,display=Country"`
	BrandName               ST      `hl7:"3,required,len=60,display=Brand Name"`
	DeviceFamilyName        ST      `hl7:"4,len=60,display=Device Family Name"`
	GenericName             *CWE    `hl7:"5,len=705,display=Generic Name"`
	ModelIdentifier         []ST    `hl7:"6,len=60,display=Model Identifier"`
	CatalogueIdentifier     ST      `hl7:"7,len=60,display=Catalogue Identifier"`
	OtherIdentifier         []ST    `hl7:"8,len=60,display=Other Identifier"`
	ProductCode             *CWE    `hl7:"9,len=705,display=Product Code"`
	MarketingBasis          ID      `hl7:"10,len=4,table=0330,display=Marketing Basis"`
	MarketingApprovalID     ST      `hl7:"11,len=60,display=Marketing Approval ID"`
	LabeledShelfLife        *CQ     `hl7:"12,len=722,display=Labeled Shelf Life"`
	ExpectedShelfLife       *CQ     `hl7:"13,len=722,display=Expected Shelf Life"`
	DateFirstMarketed       DTM     `hl7:"14,len=24,format=YMDHM,display=Date First Marketed"`
	DateLastMarketed        DTM     `hl7:"15,len=24,format=YMDHM,display=Date Last Marketed"`
}

// Product Experience Observation
//
// Details related to a particular clinical experience or event are embodied in the PEO segment. This segment can be used to
// characterize an event which might be attributed to a product to which the patient was exposed. Products with a possible
// causal relationship to the observed experience are described in the following PCR (possible causal relationship) segments.
// The message format was designed to be robust and includes many optional elements which may not be required for a particular
// regulatory purpose but allow a complete representation of the drug experience if needed.
type PEO struct {
	HL7                                   HL7Name `hl7:",name=PEO,type=s"`
	EventIdentifiersUsed                  []CWE   `hl7:"1,len=705,display=Event Identifiers Used"`
	EventSymptomDiagnosisCode             []CWE   `hl7:"2,len=705,display=Event Symptom/Diagnosis Code"`
	EventOnsetDateTime                    DTM     `hl7:"3,required,len=24,format=YMDHM,display=Event Onset Date/Time"`
	EventExacerbationDateTime             DTM     `hl7:"4,len=24,format=YMDHM,display=Event Exacerbation Date/Time"`
	EventImprovedDateTime                 DTM     `hl7:"5,len=24,format=YMDHM,display=Event Improved Date/Time"`
	EventEndedDataTime                    DTM     `hl7:"6,len=24,format=YMDHM,display=Event Ended Data/Time"`
	EventLocationOccurredAddress          []XAD   `hl7:"7,len=2915,display=Event Location Occurred Address"`
	EventQualification                    []ID    `hl7:"8,len=1,table=0237,display=Event Qualification"`
	EventSerious                          ID      `hl7:"9,len=1,table=0238,display=Event Serious"`
	EventExpected                         ID      `hl7:"10,len=1,table=0239,display=Event Expected"`
	EventOutcome                          []ID    `hl7:"11,len=1,table=0240,display=Event Outcome"`
	PatientOutcome                        ID      `hl7:"12,len=1,table=0241,display=Patient Outcome"`
	EventDescriptionFromOthers            []FT    `hl7:"13,len=600,display=Event Description From Others"`
	EventDescriptionFromOriginalReporter  []FT    `hl7:"14,len=600,display=Event Description From Original Reporter"`
	EventDescriptionFromPatient           []FT    `hl7:"15,len=600,display=Event Description From Patient"`
	EventDescriptionFromPractitioner      []FT    `hl7:"16,len=600,display=Event Description From Practitioner"`
	EventDescriptionFromAutopsy           []FT    `hl7:"17,len=600,display=Event Description From Autopsy"`
	CauseOfDeath                          []CWE   `hl7:"18,len=705,display=Cause Of Death"`
	PrimaryObserverName                   []XPN   `hl7:"19,len=1317,display=Primary Observer Name"`
	PrimaryObserverAddress                []XAD   `hl7:"20,len=2915,display=Primary Observer Address"`
	PrimaryObserverTelephone              []XTN   `hl7:"21,len=2743,display=Primary Observer Telephone"`
	PrimaryObserversQualification         ID      `hl7:"22,len=1,table=0242,display=Primary Observer's Qualification"`
	ConfirmationProvidedBy                ID      `hl7:"23,len=1,table=0242,display=Confirmation Provided By"`
	PrimaryObserverAwareDateTime          DTM     `hl7:"24,len=24,format=YMDHM,display=Primary Observer Aware Date/Time"`
	PrimaryObserversIdentityMayBeDivulged ID      `hl7:"25,len=1,table=0243,display=Primary Observer's Identity May Be Divulged"`
}

// Product Experience Sender
type PES struct {
	HL7                    HL7Name `hl7:",name=PES,type=s"`
	SenderOrganizationName []XON   `hl7:"1,len=567,display=Sender Organization Name"`
	SenderIndividualName   []XCN   `hl7:"2,len=3220,display=Sender Individual Name"`
	SenderAddress          []XAD   `hl7:"3,len=2915,display=Sender Address"`
	SenderTelephone        []XTN   `hl7:"4,len=2743,display=Sender Telephone"`
	SenderEventIdentifier  *EI     `hl7:"5,len=427,display=Sender Event Identifier"`
	SenderSequenceNumber   NM      `hl7:"6,len=16,display=Sender Sequence Number"`
	SenderEventDescription []FT    `hl7:"7,len=600,display=Sender Event Description"`
	SenderComment          FT      `hl7:"8,len=600,display=Sender Comment"`
	SenderAwareDateTime    DTM     `hl7:"9,len=24,format=YMDHM,display=Sender Aware Date/Time"`
	EventReportDate        DTM     `hl7:"10,required,len=24,format=YMDHM,display=Event Report Date"`
	EventReportTimingType  []ID    `hl7:"11,max=2,len=3,table=0234,display=Event Report Timing/Type"`
	EventReportSource      ID      `hl7:"12,len=1,table=0235,display=Event Report Source"`
	EventReportedTo        []ID    `hl7:"13,len=1,table=0236,display=Event Reported To"`
}

// Patient Identification
//
// The PID segment is used by all applications as the primary means of communicating patient identification information.
// This segment contains permanent patient identifying and demographic information that, for the most part, is not likely
// to change frequently.
type PID struct {
	HL7                         HL7Name `hl7:",name=PID,type=s"`
	SetID                       SI      `hl7:"1,seq,len=4,display=Set ID - PID"`
	PatientID                   CX      `hl7:"2,len=20,display=Patient ID"`
	PatientIdentifierList       []CX    `hl7:"3,required,len=250,display=Patient Identifier List"`
	AlternatePatientID          []CX    `hl7:"4,len=20,display=Alternate Patient ID - PID"`
	PatientName                 []XPN   `hl7:"5,required,len=250,display=Patient Name"`
	MothersMaidenName           []XPN   `hl7:"6,len=250,display=Mother's Maiden Name"`
	DateTimeOfBirth             DTM     `hl7:"7,len=24,format=YMDHM,display=Date/Time of Birth"`
	AdministrativeSex           IS      `hl7:"8,len=1,table=0001,display=Administrative Sex"`
	PatientAlias                []XPN   `hl7:"9,len=250,display=Patient Alias"`
	Race                        []CWE   `hl7:"10,len=705,table=0005,display=Race"`
	PatientAddress              []XAD   `hl7:"11,len=250,display=Patient Address"`
	CountyCode                  IS      `hl7:"12,len=4,table=0289,display=County Code"`
	PhoneNumberHome             []XTN   `hl7:"13,len=250,display=Phone Number - Home"`
	PhoneNumberBusiness         []XTN   `hl7:"14,len=250,display=Phone Number - Business"`
	PrimaryLanguage             *CWE    `hl7:"15,len=705,table=0296,display=Primary Language"`
	MaritalStatus               *CWE    `hl7:"16,len=705,table=0002,display=Marital Status"`
	Religion                    *CWE    `hl7:"17,len=705,table=0006,display=Religion"`
	PatientAccountNumber        *CX     `hl7:"18,len=250,display=Patient Account Number"`
	SSNNumberPatient            ST      `hl7:"19,len=16,display=SSN Number - Patient"`
	DriversLicenseNumberPatient DLN     `hl7:"20,len=25,display=Driver's License Number - Patient"`
	MothersIdentifier           []CX    `hl7:"21,len=250,display=Mother's Identifier"`
	EthnicGroup                 []CWE   `hl7:"22,len=705,table=0189,display=Ethnic Group"`
	BirthPlace                  ST      `hl7:"23,len=250,display=Birth Place"`
	MultipleBirthIndicator      ID      `hl7:"24,len=1,table=0136,display=Multiple Birth Indicator"`
	BirthOrder                  NM      `hl7:"25,len=2,display=Birth Order"`
	Citizenship                 []CWE   `hl7:"26,len=705,table=0171,display=Citizenship"`
	VeteransMilitaryStatus      *CWE    `hl7:"27,len=705,table=0172,display=Veterans Military Status"`
	Nationality                 CWE     `hl7:"28,len=705,table=0212,display=Nationality"`
	PatientDeathDateAndTime     DTM     `hl7:"29,len=24,format=YMDHM,display=Patient Death Date and Time"`
	PatientDeathIndicator       ID      `hl7:"30,len=1,table=0136,display=Patient Death Indicator"`
	IdentityUnknownIndicator    ID      `hl7:"31,len=1,table=0136,display=Identity Unknown Indicator"`
	IdentityReliabilityCode     []IS    `hl7:"32,len=20,table=0445,display=Identity Reliability Code"`
	LastUpdateDateTime          DTM     `hl7:"33,len=24,format=YMDHM,display=Last Update Date/Time"`
	LastUpdateFacility          *HD     `hl7:"34,len=241,display=Last Update Facility"`
	SpeciesCode                 *CWE    `hl7:"35,conditional,len=705,table=0446,display=Species Code"`
	BreedCode                   *CWE    `hl7:"36,conditional,len=705,table=0447,display=Breed Code"`
	Strain                      ST      `hl7:"37,len=80,display=Strain"`
	ProductionClassCode         []CWE   `hl7:"38,max=2,len=705,table=0429,display=Production Class Code"`
	TribalCitizenship           []CWE   `hl7:"39,len=705,table=0171,display=Tribal Citizenship"`
}

// Packaging Segment
//
// This segment contains the type of packaging available for the inventory supply item to be ordered and/or issued to a department
// or other supply location for a specified Purchasing Vendor. It would be recommended to send this segment in descending
// unit of measure order corresponding with the ascending Set ID.
type PKG struct {
	HL7                                HL7Name `hl7:",name=PKG,type=s"`
	SetID                              SI      `hl7:"1,seq,required,len=2,display=Set Id - PKG"`
	PackagingUnits                     *CWE    `hl7:"2,len=250,table=0818,display=Packaging Units"`
	DefaultOrderUnitOfMeasureIndicator *CNE    `hl7:"3,len=1,table=0532,display=Default Order Unit Of Measure Indicator"`
	PackageQuantity                    NM      `hl7:"4,len=12,display=Package Quantity"`
	Price                              *CP     `hl7:"5,len=12,display=Price"`
	FutureItemPrice                    *CP     `hl7:"6,len=12,display=Future Item Price"`
	FutureItemPriceEffectiveDate       DTM     `hl7:"7,len=24,format=YMDHM,display=Future Item Price Effective Date"`
}

// Payment Information
//
// This segment contains information that describes a payment made by a Payer organization.
type PMT struct {
	HL7                                 HL7Name `hl7:",name=PMT,type=s"`
	PaymentRemittanceAdviceNumber       EI      `hl7:"1,required,len=73,display=Payment/Remittance Advice Number"`
	PaymentRemittanceEffectiveDateTime  DTM     `hl7:"2,required,len=26,format=YMDHM,display=Payment/Remittance Effective Date/Time"`
	PaymentRemittanceExpirationDateTime DTM     `hl7:"3,required,len=26,format=YMDHM,display=Payment/Remittance Expiration Date/Time"`
	PaymentMethod                       CWE     `hl7:"4,required,len=177,table=0570,display=Payment Method"`
	PaymentRemittanceDateTime           DTM     `hl7:"5,required,len=26,format=YMDHM,display=Payment/Remittance Date/Time"`
	PaymentRemittanceAmount             CP      `hl7:"6,required,len=254,display=Payment/Remittance Amount"`
	CheckNumber                         *EI     `hl7:"7,len=15,display=Check Number"`
	PayeeBankIdentification             *XON    `hl7:"8,len=6,display=Payee Bank Identification"`
	PayeeTransitNumber                  ST      `hl7:"9,len=4,display=Payee Transit Number"`
	PayeeBankAccountID                  *CX     `hl7:"10,len=20,display=Payee Bank Account ID"`
	PaymentOrganization                 XON     `hl7:"11,required,len=183,display=Payment Organization"`
	ESRCodeLine                         ST      `hl7:"12,len=100,display=ESR-Code-Line"`
}

// Procedures
//
// The PR1 segment contains information relative to various types of procedures that can be performed on a patient. The PR1
// segment can be used to send procedure information, for example: Surgical, Nuclear Medicine, X-ray with contrast, etc.
// The PR1 segment is used to send multiple procedures, for example, for medical records encoding or for billing systems.
type PR1 struct {
	HL7                             HL7Name `hl7:",name=PR1,type=s"`
	SetID                           SI      `hl7:"1,seq,required,len=4,display=Set ID - PR1"`
	ProcedureCodingMethod           ST      `hl7:"2,display=Procedure Coding Method"`
	ProcedureCode                   CNE     `hl7:"3,required,len=705,table=0088,display=Procedure Code"`
	ProcedureDescription            ST      `hl7:"4,display=Procedure Description"`
	ProcedureDateTime               DTM     `hl7:"5,required,len=24,format=YMDHM,display=Procedure Date/Time"`
	ProcedureFunctionalType         IS      `hl7:"6,len=2,table=0230,display=Procedure Functional Type"`
	ProcedureMinutes                NM      `hl7:"7,len=4,display=Procedure Minutes"`
	Anesthesiologist                ST      `hl7:"8,display=Anesthesiologist"`
	AnesthesiaCode                  IS      `hl7:"9,len=2,table=0019,display=Anesthesia Code"`
	AnesthesiaMinutes               NM      `hl7:"10,len=4,display=Anesthesia Minutes"`
	Surgeon                         ST      `hl7:"11,display=Surgeon"`
	ProcedurePractitioner           ST      `hl7:"12,display=Procedure Practitioner"`
	ConsentCode                     *CWE    `hl7:"13,len=250,table=0059,display=Consent Code"`
	ProcedurePriority               ID      `hl7:"14,len=2,table=0418,display=Procedure Priority"`
	AssociatedDiagnosisCode         *CWE    `hl7:"15,len=250,table=0051,display=Associated Diagnosis Code"`
	ProcedureCodeModifier           []CNE   `hl7:"16,len=705,table=0340,display=Procedure Code Modifier"`
	ProcedureDRGType                IS      `hl7:"17,len=20,table=0416,display=Procedure DRG Type"`
	TissueTypeCode                  []CWE   `hl7:"18,len=250,table=0417,display=Tissue Type Code"`
	ProcedureIdentifier             *EI     `hl7:"19,conditional,len=427,display=Procedure Identifier"`
	ProcedureActionCode             ID      `hl7:"20,conditional,len=1,table=0206,display=Procedure Action Code"`
	DRGProcedureDeterminationStatus IS      `hl7:"21,len=20,table=0761,display=DRG Procedure Determination Status"`
	DRGProcedureRelevance           IS      `hl7:"22,len=20,table=0763,display=DRG Procedure Relevance"`
}

// Practitioner Detail
//
// The Technical Steward for the PRA segment is PA and Personnel Management.
//
// The PRA segment adds detailed medical practitioner information to the personnel identified by the STF segment.  A PRA segment
// may optionally follow an STF segment.  A PRA segment must always have been preceded by a corresponding STF segment.  The PRA
// segment may also be used for staff who work in healthcare who are not practitioners but need to be certified, e.g., "medical
// records staff."
type PRA struct {
	HL7                                       HL7Name `hl7:",name=PRA,type=s"`
	PrimaryKeyValue                           *CWE    `hl7:"1,conditional,len=250,display=Primary Key Value - PRA"`
	PractitionerGroup                         []CWE   `hl7:"2,len=250,table=0358,display=Practitioner Group"`
	PractitionerCategory                      []IS    `hl7:"3,len=3,table=0186,display=Practitioner Category"`
	ProviderBilling                           ID      `hl7:"4,len=1,table=0187,display=Provider Billing"`
	Specialty                                 []SPD   `hl7:"5,len=112,display=Specialty"`
	PractitionerIDNumbers                     []PLN   `hl7:"6,len=99,display=Practitioner ID Numbers"`
	Privileges                                []PIP   `hl7:"7,len=770,display=Privileges"`
	DateEnteredPractice                       DT      `hl7:"8,len=8,format=YMD,display=Date Entered Practice"`
	Institution                               *CWE    `hl7:"9,len=250,table=0537,display=Institution"`
	DateLeftPractice                          DT      `hl7:"10,len=8,format=YMD,display=Date Left Practice"`
	GovernmentReimbursementBillingEligibility []CWE   `hl7:"11,len=250,table=0401,display=Government Reimbursement Billing Eligibility"`
	SetID                                     SI      `hl7:"12,seq,conditional,len=60,display=Set ID - PRA"`
}

// Problem Details
//
// The problem detail segment contains the data necessary to add, update, correct, and delete the problems of a given individual.
type PRB struct {
	HL7                                               HL7Name `hl7:",name=PRB,type=s"`
	ActionCode                                        ID      `hl7:"1,required,len=2,table=0287,display=Action Code"`
	ActionDateTime                                    DTM     `hl7:"2,required,len=24,format=YMDHM,display=Action Date/Time"`
	ProblemID                                         CWE     `hl7:"3,required,len=705,display=Problem ID"`
	ProblemInstanceID                                 EI      `hl7:"4,required,len=60,display=Problem Instance ID"`
	EpisodeOfCareID                                   *EI     `hl7:"5,len=60,display=Episode of Care ID"`
	ProblemListPriority                               NM      `hl7:"6,len=60,display=Problem List Priority"`
	ProblemEstablishedDateTime                        DTM     `hl7:"7,len=24,format=YMDHM,display=Problem Established Date/Time"`
	AnticipatedProblemResolutionDateTime              DTM     `hl7:"8,len=24,format=YMDHM,display=Anticipated Problem Resolution Date/Time"`
	ActualProblemResolutionDateTime                   DTM     `hl7:"9,len=24,format=YMDHM,display=Actual Problem Resolution Date/Time"`
	ProblemClassification                             *CWE    `hl7:"10,len=705,display=Problem Classification"`
	ProblemManagementDiscipline                       []CWE   `hl7:"11,len=705,display=Problem Management Discipline"`
	ProblemPersistence                                *CWE    `hl7:"12,len=705,display=Problem Persistence"`
	ProblemConfirmationStatus                         *CWE    `hl7:"13,len=705,display=Problem Confirmation Status"`
	ProblemLifeCycleStatus                            *CWE    `hl7:"14,len=705,display=Problem Life Cycle Status"`
	ProblemLifeCycleStatusDateTime                    DTM     `hl7:"15,len=24,format=YMDHM,display=Problem Life Cycle Status Date/Time"`
	ProblemDateOfOnset                                DTM     `hl7:"16,len=24,format=YMDHM,display=Problem Date of Onset"`
	ProblemOnsetText                                  ST      `hl7:"17,len=80,display=Problem Onset Text"`
	ProblemRanking                                    *CWE    `hl7:"18,len=705,display=Problem Ranking"`
	CertaintyOfProblem                                *CWE    `hl7:"19,len=705,display=Certainty of Problem"`
	ProbabilityOfProblem                              NM      `hl7:"20,len=5,display=Probability of Problem"`
	IndividualAwarenessOfProblem                      *CWE    `hl7:"21,len=705,display=Individual Awareness of Problem"`
	ProblemPrognosis                                  *CWE    `hl7:"22,len=705,display=Problem Prognosis"`
	IndividualAwarenessOfPrognosis                    *CWE    `hl7:"23,len=705,display=Individual Awareness of Prognosis"`
	FamilySignificantOtherAwarenessOfProblemPrognosis ST      `hl7:"24,len=200,display=Family/Significant Other Awareness of Problem/Prognosis"`
	SecuritySensitivity                               *CWE    `hl7:"25,len=705,display=Security/Sensitivity"`
	ProblemSeverity                                   *CWE    `hl7:"26,len=705,table=0836,display=Problem Severity"`
	ProblemPerspective                                *CWE    `hl7:"27,len=705,table=0838,display=Problem Perspective"`
	MoodCode                                          *CNE    `hl7:"28,conditional,len=60,table=0725,display=Mood Code"`
}

// Pricing
//
// The Technical Steward for the PRC segment is Financial Management.
//
// The PRC segment contains the pricing information for the preceding CDM segment's chargeable item.  It contains the fields
// which, for the same chargeable item, might vary depending upon facility or department or patient type.  The preceding CDM
// segment contains the fields which, for one chargeable item, remain the same across facilities, departments, and patient
// types.
type PRC struct {
	HL7                 HL7Name `hl7:",name=PRC,type=s"`
	PrimaryKeyValue     CWE     `hl7:"1,required,len=250,table=0132,display=Primary Key Value - PRC"`
	FacilityID          []CWE   `hl7:"2,len=250,table=0464,display=Facility ID - PRC"`
	Department          []CWE   `hl7:"3,len=250,table=0184,display=Department"`
	ValidPatientClasses []IS    `hl7:"4,len=1,table=0004,display=Valid Patient Classes"`
	Price               []CP    `hl7:"5,conditional,len=12,display=Price"`
	Formula             []ST    `hl7:"6,len=200,display=Formula"`
	MinimumQuantity     NM      `hl7:"7,len=4,display=Minimum Quantity"`
	MaximumQuantity     NM      `hl7:"8,len=4,display=Maximum Quantity"`
	MinimumPrice        *MO     `hl7:"9,len=12,display=Minimum Price"`
	MaximumPrice        *MO     `hl7:"10,len=12,display=Maximum Price"`
	EffectiveStartDate  DTM     `hl7:"11,len=24,format=YMDHM,display=Effective Start Date"`
	EffectiveEndDate    DTM     `hl7:"12,len=24,format=YMDHM,display=Effective End Date"`
	PriceOverrideFlag   IS      `hl7:"13,len=1,table=0268,display=Price Override Flag"`
	BillingCategory     []CWE   `hl7:"14,len=250,table=0293,display=Billing Category"`
	ChargeableFlag      ID      `hl7:"15,len=1,table=0136,display=Chargeable Flag"`
	ActiveInactiveFlag  ID      `hl7:"16,len=1,table=0183,display=Active/Inactive Flag"`
	Cost                *MO     `hl7:"17,len=12,display=Cost"`
	ChargeOnIndicator   IS      `hl7:"18,len=1,table=0269,display=Charge On Indicator"`
}

// Provider Data
//
// This segment will be employed as part of a patient referral message and its related transactions. The PRD segment contains
// data specifically focused on a referral, and it is inter-enterprise in nature. The justification for this new segment
// comes from the fact that we are dealing with referrals that are external to the facilities that received them. Therefore,
// using a segment such as the current PV1 would be inadequate for all the return information that may be required by the receiving
// facility or application. In addition, the PV1 does not always provide information sufficient to enable the external facility
// to make a complete identification of the referring entity. The information contained in the PRD segment will include the
// referring provider, the referred-to provider, the referred-to location or service, and the referring provider clinic
// address.
type PRD struct {
	HL7                                          HL7Name `hl7:",name=PRD,type=s"`
	ProviderRole                                 []CWE   `hl7:"1,required,len=705,table=0286,display=Provider Role"`
	ProviderName                                 []XPN   `hl7:"2,len=250,display=Provider Name"`
	ProviderAddress                              []XAD   `hl7:"3,len=250,display=Provider Address"`
	ProviderLocation                             *PL     `hl7:"4,len=60,display=Provider Location"`
	ProviderCommunicationInformation             []XTN   `hl7:"5,len=250,display=Provider Communication Information"`
	PreferredMethodOfContact                     *CWE    `hl7:"6,len=705,table=0185,display=Preferred Method of Contact"`
	ProviderIdentifiers                          []PLN   `hl7:"7,len=100,display=Provider Identifiers"`
	EffectiveStartDateOfProviderRole             DTM     `hl7:"8,len=24,format=YMDHM,display=Effective Start Date of Provider Role"`
	EffectiveEndDateOfProviderRole               []DTM   `hl7:"9,len=24,format=YMDHM,display=Effective End Date of Provider Role"`
	ProviderOrganizationNameAndIdentifier        *XON    `hl7:"10,len=250,display=Provider Organization Name and Identifier"`
	ProviderOrganizationAddress                  []XAD   `hl7:"11,len=60,display=Provider Organization Address"`
	ProviderOrganizationLocationInformation      []PL    `hl7:"12,len=60,display=Provider Organization Location Information"`
	ProviderOrganizationCommunicationInformation []XTN   `hl7:"13,len=250,display=Provider Organization Communication Information"`
	ProviderOrganizationMethodOfContact          *CWE    `hl7:"14,len=705,table=0185,display=Provider Organization Method of Contact"`
}

// Product/Service Group
//
// The Product/Service Group segment is used to form a logical grouping of Product/Service Line Items, Patients and Response
// Summaries for a particular Invoice. For example, a Product/Service Group can be used to group all Product/Service Line
// Items that must be adjudicated as a group in order to be paid.
type PSG struct {
	HL7                               HL7Name `hl7:",name=PSG,type=s"`
	ProviderProductServiceGroupNumber EI      `hl7:"1,required,len=73,display=Provider Product/Service Group Number"`
	PayerProductServiceGroupNumber    *EI     `hl7:"2,len=73,display=Payer Product/Service Group Number"`
	ProductServiceGroupSequenceNumber SI      `hl7:"3,required,len=4,display=Product/Service Group Sequence Number"`
	AdjudicateAsGroup                 ID      `hl7:"4,required,len=1,table=0136,display=Adjudicate as Group"`
	ProductServiceGroupBilledAmount   CP      `hl7:"5,required,len=254,display=Product/Service Group Billed Amount"`
	ProductServiceGroupDescription    ST      `hl7:"6,required,len=254,display=Product/Service Group Description"`
}

// Product Summary Header
type PSH struct {
	HL7                                                HL7Name `hl7:",name=PSH,type=s"`
	ReportType                                         ST      `hl7:"1,required,len=60,display=Report Type"`
	ReportFormIdentifier                               ST      `hl7:"2,len=60,display=Report Form Identifier"`
	ReportDate                                         DTM     `hl7:"3,required,len=24,format=YMDHM,display=Report Date"`
	ReportIntervalStartDate                            DTM     `hl7:"4,len=24,format=YMDHM,display=Report Interval Start Date"`
	ReportIntervalEndDate                              DTM     `hl7:"5,len=24,format=YMDHM,display=Report Interval End Date"`
	QuantityManufactured                               *CQ     `hl7:"6,len=722,display=Quantity Manufactured"`
	QuantityDistributed                                *CQ     `hl7:"7,len=722,display=Quantity Distributed"`
	QuantityDistributedMethod                          ID      `hl7:"8,len=1,table=0329,display=Quantity Distributed Method"`
	QuantityDistributedComment                         FT      `hl7:"9,len=600,display=Quantity Distributed Comment"`
	QuantityInUse                                      *CQ     `hl7:"10,len=722,display=Quantity in Use"`
	QuantityInUseMethod                                ID      `hl7:"11,len=1,table=0329,display=Quantity in Use Method"`
	QuantityInUseComment                               FT      `hl7:"12,len=600,display=Quantity in Use Comment"`
	NumberOfProductExperienceReportsFiledByFacility    []NM    `hl7:"13,max=8,len=16,display=Number of Product Experience Reports Filed by Facility"`
	NumberOfProductExperienceReportsFiledByDistributor []NM    `hl7:"14,max=8,len=16,display=Number of Product Experience Reports Filed by Distributor"`
}

// Product/Service Line Item
//
// The Product/Service Line Item segment is used to identify individual product/service items that typically are aggregated
// into an Invoice. Each instance of a Product/Service Line Item corresponds to a unique product delivered or service rendered.
type PSL struct {
	HL7                                      HL7Name `hl7:",name=PSL,type=s"`
	ProviderProductServiceLineItemNumber     EI      `hl7:"1,required,len=73,display=Provider Product/Service Line Item Number"`
	PayerProductServiceLineItemNumber        *EI     `hl7:"2,len=73,display=Payer Product/Service Line Item Number"`
	ProductServiceLineItemSequenceNumber     SI      `hl7:"3,required,len=4,display=Product/Service Line Item Sequence Number"`
	ProviderTrackingID                       *EI     `hl7:"4,len=20,display=Provider Tracking ID"`
	PayerTrackingID                          *EI     `hl7:"5,len=20,display=Payer Tracking ID"`
	ProductServiceLineItemStatus             CWE     `hl7:"6,required,len=2,table=0559,display=Product/Service Line Item Status"`
	ProductServiceCode                       CWE     `hl7:"7,required,len=177,table=0879,display=Product/Service Code"`
	ProductServiceCodeModifier               []CWE   `hl7:"8,max=5,len=177,table=0880,display=Product/Service Code Modifier"`
	ProductServiceCodeDescription            ST      `hl7:"9,len=80,display=Product/Service Code Description"`
	ProductServiceEffectiveDate              DTM     `hl7:"10,conditional,len=24,format=YMDHM,display=Product/Service Effective Date"`
	ProductServiceExpirationDate             DTM     `hl7:"11,len=24,format=YMDHM,display=Product/Service Expiration Date"`
	ProductServiceQuantity                   *CQ     `hl7:"12,conditional,len=222,display=Product/Service Quantity"`
	ProductServiceUnitCost                   *CP     `hl7:"13,conditional,len=254,display=Product/Service Unit Cost"`
	NumberOfItemsPerUnit                     NM      `hl7:"14,conditional,len=10,display=Number of Items per Unit"`
	ProductServiceGrossAmount                *CP     `hl7:"15,conditional,len=254,display=Product/Service Gross Amount"`
	ProductServiceBilledAmount               *CP     `hl7:"16,conditional,len=254,display=Product/Service Billed Amount"`
	ProductServiceClarificationCodeType      []IS    `hl7:"17,max=20,len=10,table=0561,display=Product/Service Clarification Code Type"`
	ProductServiceClarificationCodeValue     []ST    `hl7:"18,max=20,len=40,display=Product/Service Clarification Code Value"`
	HealthDocumentReferenceIdentifier        []EI    `hl7:"19,max=5,len=73,display=Health Document Reference Identifier"`
	ProcessingConsiderationCode              []IS    `hl7:"20,max=20,len=10,table=0562,display=Processing Consideration Code"`
	RestrictedDisclosureIndicator            ID      `hl7:"21,required,len=2,table=0532,display=Restricted Disclosure Indicator"`
	RelatedProductServiceCodeIndicator       *CWE    `hl7:"22,len=177,table=0879,display=Related Product/Service Code Indicator"`
	ProductServiceAmountForPhysician         *CP     `hl7:"23,len=254,display=Product/Service Amount for Physician"`
	ProductServiceCostFactor                 NM      `hl7:"24,len=5,display=Product/Service Cost Factor"`
	CostCenter                               *CX     `hl7:"25,len=250,display=Cost Center"`
	BillingPeriod                            *DR     `hl7:"26,len=49,display=Billing Period"`
	DaysWithoutBilling                       NM      `hl7:"27,len=5,display=Days without Billing"`
	SessionNo                                NM      `hl7:"28,len=4,display=Session-No"`
	ExecutingPhysicianID                     *XCN    `hl7:"29,len=20,display=Executing Physician ID"`
	ResponsiblePhysicianID                   *XCN    `hl7:"30,len=20,display=Responsible Physician ID"`
	RoleExecutingPhysician                   *CWE    `hl7:"31,len=10,table=0881,display=Role Executing Physician"`
	MedicalRoleExecutingPhysician            *CWE    `hl7:"32,len=10,table=0882,display=Medical Role Executing Physician"`
	SideOfBody                               *CWE    `hl7:"33,len=3,table=0894,display=Side of body"`
	NumberOfTPsPP                            NM      `hl7:"34,len=6,display=Number of TP's PP"`
	TPValuePP                                *CP     `hl7:"35,len=6,display=TP-Value PP"`
	InternalScalingFactorPP                  NM      `hl7:"36,len=4,display=Internal Scaling Factor PP"`
	ExternalScalingFactorPP                  NM      `hl7:"37,len=4,display=External Scaling Factor PP"`
	AmountPP                                 *CP     `hl7:"38,len=7,display=Amount PP"`
	NumberOfTPsTechnicalPart                 NM      `hl7:"39,len=6,display=Number of TP's Technical Part"`
	TPValueTechnicalPart                     *CP     `hl7:"40,len=6,display=TP-Value Technical Part"`
	InternalScalingFactorTechnicalPart       NM      `hl7:"41,len=4,display=Internal Scaling Factor Technical Part"`
	ExternalScalingFactorTechnicalPart       NM      `hl7:"42,len=4,display=External Scaling Factor Technical Part"`
	AmountTechnicalPart                      *CP     `hl7:"43,len=7,display=Amount Technical Part"`
	TotalAmountProfessionalPartTechnicalPart *CP     `hl7:"44,len=8,display=Total Amount Professional Part + Technical Part"`
	VATRate                                  NM      `hl7:"45,len=3,display=VAT-Rate"`
	MainService                              ID      `hl7:"46,len=20,display=Main-Service"`
	Validation                               ID      `hl7:"47,len=1,table=0136,display=Validation"`
	Comment                                  ST      `hl7:"48,len=255,display=Comment"`
}

// Product/Service Section
//
// The Product/Service Section segment is used to form a logical grouping of Product/Service Group segments, Patients and
// Response Summaries for a particular Invoice.
type PSS struct {
	HL7                                 HL7Name `hl7:",name=PSS,type=s"`
	ProviderProductServiceSectionNumber EI      `hl7:"1,required,len=73,display=Provider Product/Service Section Number"`
	PayerProductServiceSectionNumber    *EI     `hl7:"2,len=73,display=Payer Product/Service Section Number"`
	ProductServiceSectionSequenceNumber SI      `hl7:"3,required,len=4,display=Product/Service Section Sequence Number"`
	BilledAmount                        CP      `hl7:"4,required,len=254,display=Billed Amount"`
	SectionDescriptionOrHeading         ST      `hl7:"5,required,len=254,display=Section Description or Heading"`
}

// Pathway
//
// The pathway segment contains the data necessary to add, update, correct, and delete from the record pathways that are utilized
// to address an individual's health care.
type PTH struct {
	HL7                                  HL7Name `hl7:",name=PTH,type=s"`
	ActionCode                           ID      `hl7:"1,required,len=2,table=0287,display=Action Code"`
	PathwayID                            CWE     `hl7:"2,required,len=705,display=Pathway ID"`
	PathwayInstanceID                    EI      `hl7:"3,required,len=60,display=Pathway Instance ID"`
	PathwayEstablishedDateTime           DTM     `hl7:"4,required,len=24,format=YMDHM,display=Pathway Established Date/Time"`
	PathwayLifeCycleStatus               *CWE    `hl7:"5,len=705,display=Pathway Life Cycle Status"`
	ChangePathwayLifeCycleStatusDateTime DTM     `hl7:"6,conditional,len=24,format=YMDHM,display=Change Pathway Life Cycle Status Date/Time"`
	MoodCode                             *CNE    `hl7:"7,conditional,len=60,table=0725,display=Mood Code"`
}

// Patient Visit
//
// The PV1 segment is used by Registration/Patient Administration applications to communicate information on an account
// or visit-specific basis. The default is to send account level data. To use this segment for visit level data PV1-51 - Visit
// Indicator must be valued to "V". The value of PV-51 affects the level of data being sent on the PV1, PV2, and any other segments
// that are part of the associated PV1 hierarchy (e.g., ROL, DG1, or OBX).
type PV1 struct {
	HL7                     HL7Name `hl7:",name=PV1,type=s"`
	SetID                   SI      `hl7:"1,seq,len=4,display=Set ID - PV1"`
	PatientClass            IS      `hl7:"2,required,len=1,table=0004,display=Patient Class"`
	AssignedPatientLocation *PL     `hl7:"3,len=80,display=Assigned Patient Location"`
	AdmissionType           IS      `hl7:"4,len=2,table=0007,display=Admission Type"`
	PreadmitNumber          *CX     `hl7:"5,len=250,display=Preadmit Number"`
	PriorPatientLocation    *PL     `hl7:"6,len=80,display=Prior Patient Location"`
	AttendingDoctor         []XCN   `hl7:"7,len=250,table=0010,display=Attending Doctor"`
	ReferringDoctor         []XCN   `hl7:"8,len=250,table=0010,display=Referring Doctor"`
	ConsultingDoctor        []XCN   `hl7:"9,len=250,table=0010,display=Consulting Doctor"`
	HospitalService         IS      `hl7:"10,len=3,table=0069,display=Hospital Service"`
	TemporaryLocation       *PL     `hl7:"11,len=80,display=Temporary Location"`
	PreadmitTestIndicator   IS      `hl7:"12,len=2,table=0087,display=Preadmit Test Indicator"`
	ReAdmissionIndicator    IS      `hl7:"13,len=2,table=0092,display=Re-admission Indicator"`
	AdmitSource             IS      `hl7:"14,len=6,table=0023,display=Admit Source"`
	AmbulatoryStatus        []IS    `hl7:"15,len=2,table=0009,display=Ambulatory Status"`
	VIPIndicator            IS      `hl7:"16,len=2,table=0099,display=VIP Indicator"`
	AdmittingDoctor         []XCN   `hl7:"17,len=250,table=0010,display=Admitting Doctor"`
	PatientType             IS      `hl7:"18,len=2,table=0018,display=Patient Type"`
	VisitNumber             *CX     `hl7:"19,len=250,display=Visit Number"`
	FinancialClass          []FC    `hl7:"20,len=50,display=Financial Class"`
	ChargePriceIndicator    IS      `hl7:"21,len=2,table=0032,display=Charge Price Indicator"`
	CourtesyCode            IS      `hl7:"22,len=2,table=0045,display=Courtesy Code"`
	CreditRating            IS      `hl7:"23,len=2,table=0046,display=Credit Rating"`
	ContractCode            []IS    `hl7:"24,len=2,table=0044,display=Contract Code"`
	ContractEffectiveDate   []DT    `hl7:"25,len=8,format=YMD,display=Contract Effective Date"`
	ContractAmount          []NM    `hl7:"26,len=12,display=Contract Amount"`
	ContractPeriod          []NM    `hl7:"27,len=3,display=Contract Period"`
	InterestCode            IS      `hl7:"28,len=2,table=0073,display=Interest Code"`
	TransferToBadDebtCode   IS      `hl7:"29,len=4,table=0110,display=Transfer to Bad Debt Code"`
	TransferToBadDebtDate   DT      `hl7:"30,len=8,format=YMD,display=Transfer to Bad Debt Date"`
	BadDebtAgencyCode       IS      `hl7:"31,len=10,table=0021,display=Bad Debt Agency Code"`
	BadDebtTransferAmount   NM      `hl7:"32,len=12,display=Bad Debt Transfer Amount"`
	BadDebtRecoveryAmount   NM      `hl7:"33,len=12,display=Bad Debt Recovery Amount"`
	DeleteAccountIndicator  IS      `hl7:"34,len=1,table=0111,display=Delete Account Indicator"`
	DeleteAccountDate       DT      `hl7:"35,len=8,format=YMD,display=Delete Account Date"`
	DischargeDisposition    IS      `hl7:"36,len=3,table=0112,display=Discharge Disposition"`
	DischargedToLocation    *DLD    `hl7:"37,len=47,display=Discharged to Location"`
	DietType                *CWE    `hl7:"38,len=705,table=0114,display=Diet Type"`
	ServicingFacility       IS      `hl7:"39,len=2,table=0115,display=Servicing Facility"`
	BedStatus               IS      `hl7:"40,len=1,table=0116,display=Bed Status"`
	AccountStatus           IS      `hl7:"41,len=2,table=0117,display=Account Status"`
	PendingLocation         *PL     `hl7:"42,len=80,display=Pending Location"`
	PriorTemporaryLocation  *PL     `hl7:"43,len=80,display=Prior Temporary Location"`
	AdmitDateTime           DTM     `hl7:"44,len=24,format=YMDHM,display=Admit Date/Time"`
	DischargeDateTime       DTM     `hl7:"45,len=24,format=YMDHM,display=Discharge Date/Time"`
	CurrentPatientBalance   NM      `hl7:"46,len=12,display=Current Patient Balance"`
	TotalCharges            NM      `hl7:"47,len=12,display=Total Charges"`
	TotalAdjustments        NM      `hl7:"48,len=12,display=Total Adjustments"`
	TotalPayments           NM      `hl7:"49,len=12,display=Total Payments"`
	AlternateVisitID        *CX     `hl7:"50,len=250,display=Alternate Visit ID"`
	VisitIndicator          IS      `hl7:"51,len=1,table=0326,display=Visit Indicator"`
	OtherHealthcareProvider []XCN   `hl7:"52,len=250,table=0010,display=Other Healthcare Provider"`
}

// Patient Visit - Additional Information
//
// The PV2 segment is a continuation of information contained on the PV1 segment.
type PV2 struct {
	HL7                                 HL7Name `hl7:",name=PV2,type=s"`
	PriorPendingLocation                *PL     `hl7:"1,conditional,len=80,display=Prior Pending Location"`
	AccommodationCode                   *CWE    `hl7:"2,len=705,table=0129,display=Accommodation Code"`
	AdmitReason                         *CWE    `hl7:"3,len=705,display=Admit Reason"`
	TransferReason                      *CWE    `hl7:"4,len=705,display=Transfer Reason"`
	PatientValuables                    []ST    `hl7:"5,len=25,display=Patient Valuables"`
	PatientValuablesLocation            ST      `hl7:"6,len=25,display=Patient Valuables Location"`
	VisitUserCode                       []IS    `hl7:"7,len=2,table=0130,display=Visit User Code"`
	ExpectedAdmitDateTime               DTM     `hl7:"8,len=24,format=YMDHM,display=Expected Admit Date/Time"`
	ExpectedDischargeDateTime           DTM     `hl7:"9,len=24,format=YMDHM,display=Expected Discharge Date/Time"`
	EstimatedLengthOfInpatientStay      NM      `hl7:"10,len=3,display=Estimated Length of Inpatient Stay"`
	ActualLengthOfInpatientStay         NM      `hl7:"11,len=3,display=Actual Length of Inpatient Stay"`
	VisitDescription                    ST      `hl7:"12,len=50,display=Visit Description"`
	ReferralSourceCode                  []XCN   `hl7:"13,len=250,display=Referral Source Code"`
	PreviousServiceDate                 DT      `hl7:"14,len=8,format=YMD,display=Previous Service Date"`
	EmploymentIllnessRelatedIndicator   ID      `hl7:"15,len=1,table=0136,display=Employment Illness Related Indicator"`
	PurgeStatusCode                     IS      `hl7:"16,len=1,table=0213,display=Purge Status Code"`
	PurgeStatusDate                     DT      `hl7:"17,len=8,format=YMD,display=Purge Status Date"`
	SpecialProgramCode                  IS      `hl7:"18,len=2,table=0214,display=Special Program Code"`
	RetentionIndicator                  ID      `hl7:"19,len=1,table=0136,display=Retention Indicator"`
	ExpectedNumberOfInsurancePlans      NM      `hl7:"20,len=1,display=Expected Number of Insurance Plans"`
	VisitPublicityCode                  IS      `hl7:"21,len=1,table=0215,display=Visit Publicity Code"`
	VisitProtectionIndicator            ID      `hl7:"22,len=1,table=0136,display=Visit Protection Indicator"`
	ClinicOrganizationName              []XON   `hl7:"23,len=250,display=Clinic Organization Name"`
	PatientStatusCode                   IS      `hl7:"24,len=2,table=0216,display=Patient Status Code"`
	VisitPriorityCode                   IS      `hl7:"25,len=1,table=0217,display=Visit Priority Code"`
	PreviousTreatmentDate               DT      `hl7:"26,len=8,format=YMD,display=Previous Treatment Date"`
	ExpectedDischargeDisposition        IS      `hl7:"27,len=2,table=0112,display=Expected Discharge Disposition"`
	SignatureOnFileDate                 DT      `hl7:"28,len=8,format=YMD,display=Signature on File Date"`
	FirstSimilarIllnessDate             DT      `hl7:"29,len=8,format=YMD,display=First Similar Illness Date"`
	PatientChargeAdjustmentCode         *CWE    `hl7:"30,len=705,table=0218,display=Patient Charge Adjustment Code"`
	RecurringServiceCode                IS      `hl7:"31,len=2,table=0219,display=Recurring Service Code"`
	BillingMediaCode                    ID      `hl7:"32,len=1,table=0136,display=Billing Media Code"`
	ExpectedSurgeryDateAndTime          DTM     `hl7:"33,len=24,format=YMDHM,display=Expected Surgery Date and Time"`
	MilitaryPartnershipCode             ID      `hl7:"34,len=1,table=0136,display=Military Partnership Code"`
	MilitaryNonAvailabilityCode         ID      `hl7:"35,len=1,table=0136,display=Military Non-Availability Code"`
	NewbornBabyIndicator                ID      `hl7:"36,len=1,table=0136,display=Newborn Baby Indicator"`
	BabyDetainedIndicator               ID      `hl7:"37,len=1,table=0136,display=Baby Detained Indicator"`
	ModeOfArrivalCode                   *CWE    `hl7:"38,len=705,table=0430,display=Mode of Arrival Code"`
	RecreationalDrugUseCode             []CWE   `hl7:"39,len=705,table=0431,display=Recreational Drug Use Code"`
	AdmissionLevelOfCareCode            *CWE    `hl7:"40,len=705,table=0432,display=Admission Level of Care Code"`
	PrecautionCode                      []CWE   `hl7:"41,len=705,table=0433,display=Precaution Code"`
	PatientConditionCode                *CWE    `hl7:"42,len=705,table=0434,display=Patient Condition Code"`
	LivingWillCode                      IS      `hl7:"43,len=2,table=0315,display=Living Will Code"`
	OrganDonorCode                      IS      `hl7:"44,len=2,table=0316,display=Organ Donor Code"`
	AdvanceDirectiveCode                []CWE   `hl7:"45,conditional,len=705,table=0435,display=Advance Directive Code"`
	PatientStatusEffectiveDate          DT      `hl7:"46,len=8,format=YMD,display=Patient Status Effective Date"`
	ExpectedLOAReturnDateTime           DTM     `hl7:"47,conditional,len=24,format=YMDHM,display=Expected LOA Return Date/Time"`
	ExpectedPreAdmissionTestingDateTime DTM     `hl7:"48,len=24,format=YMDHM,display=Expected Pre-admission Testing Date/Time"`
	NotifyClergyCode                    []IS    `hl7:"49,len=20,table=0534,display=Notify Clergy Code"`
	AdvanceDirectiveLastVerifiedDate    DT      `hl7:"50,len=8,format=YMD,display=Advance Directive Last Verified Date"`
}

// Payee Information
//
// This segment is used to define payee information.
type PYE struct {
	HL7                               HL7Name `hl7:",name=PYE,type=s"`
	SetID                             SI      `hl7:"1,seq,required,len=4,display=Set ID – PYE"`
	PayeeType                         IS      `hl7:"2,required,len=6,table=0557,display=Payee Type"`
	PayeeRelationshipToInvoicePatient IS      `hl7:"3,conditional,len=2,table=0558,display=Payee Relationship to Invoice (Patient)"`
	PayeeIdentificationList           []XON   `hl7:"4,conditional,max=5,len=183,display=Payee Identification List"`
	PayeePersonName                   []XPN   `hl7:"5,conditional,max=4,len=466,display=Payee Person Name"`
	PayeeAddress                      []XAD   `hl7:"6,conditional,max=4,len=235,display=Payee Address"`
	PaymentMethod                     IS      `hl7:"7,len=80,table=0570,display=Payment Method"`
}

// Query Acknowledgment
//
// The QAK segment contains information sent with responses to a query. Although the QAK segment is required in the responses
// to the enhanced queries (see section Error! Reference source not found. , "Error! Reference source not found."), it may
// appear as an optional segment placed after the (optional) ERR segment in any query response (message) to any original mode
// query.
type QAK struct {
	HL7                 HL7Name `hl7:",name=QAK,type=s"`
	QueryTag            ST      `hl7:"1,conditional,len=32,display=Query Tag"`
	QueryResponseStatus ID      `hl7:"2,len=2,table=0208,display=Query Response Status"`
	MessageQueryName    *CWE    `hl7:"3,len=250,table=0471,display=Message Query Name"`
	HitCount            NM      `hl7:"4,len=10,display=Hit Count"`
	ThisPayload         NM      `hl7:"5,len=10,display=This payload"`
	HitsRemaining       NM      `hl7:"6,len=10,display=Hits remaining"`
}

// Query Identification
//
// The QID segment contains the information necessary to uniquely identify a query. Its primary use is in query cancellation
// or subscription cancellation.
type QID struct {
	HL7              HL7Name `hl7:",name=QID,type=s"`
	QueryTag         ST      `hl7:"1,required,len=32,display=Query Tag"`
	MessageQueryName CWE     `hl7:"2,required,len=250,table=0471,display=Message Query Name"`
}

// Query Parameter Definition
//
// The QPD segment defines the parameters of the query.
type QPD struct {
	HL7                              HL7Name `hl7:",name=QPD,type=s"`
	MessageQueryName                 CWE     `hl7:"1,required,len=250,table=0471,display=Message Query Name"`
	QueryTag                         ST      `hl7:"2,conditional,len=32,display=Query Tag"`
	UserParametersInSuccessiveFields *VARIES `hl7:"3,len=256,display=User Parameters (in successive fields)"`
}

// Original-Style Query Definition
//
// The QRD segment is used to define a query.
//
// This segment is retained for backward compatibility only as of V2.4.
type QRD struct {
	HL7                      HL7Name `hl7:",name=QRD,type=s"`
	QueryDateTime            DTM     `hl7:"1,required,len=24,format=YMDHM,display=Query Date/Time"`
	QueryFormatCode          ID      `hl7:"2,required,len=1,table=0106,display=Query Format Code"`
	QueryPriority            ID      `hl7:"3,required,len=1,table=0091,display=Query Priority"`
	QueryID                  ST      `hl7:"4,required,len=10,display=Query ID"`
	DeferredResponseType     ID      `hl7:"5,len=1,table=0107,display=Deferred Response Type"`
	DeferredResponseDateTime DTM     `hl7:"6,len=24,format=YMDHM,display=Deferred Response Date/Time"`
	QuantityLimitedRequest   CQ      `hl7:"7,required,len=10,display=Quantity Limited Request"`
	WhoSubjectFilter         []XCN   `hl7:"8,required,len=250,display=Who Subject Filter"`
	WhatSubjectFilter        []CWE   `hl7:"9,required,len=250,table=0048,display=What Subject Filter"`
	WhatDepartmentDataCode   []CWE   `hl7:"10,required,len=250,display=What Department Data Code"`
	WhatDataCodeValueQual    []VR    `hl7:"11,len=20,display=What Data Code Value Qual."`
	QueryResultsLevel        ID      `hl7:"12,len=1,table=0108,display=Query Results Level"`
}

// Original style query filter
//
// The QRF segment is used with the QRD segment to further refine the content of an original style query.
//
// This segment is retained for backward compatibility as of V2.4.
type QRF struct {
	HL7                          HL7Name `hl7:",name=QRF,type=s"`
	WhereSubjectFilter           []ST    `hl7:"1,required,len=20,display=Where Subject Filter"`
	WhenDataStartDateTime        DTM     `hl7:"2,len=24,format=YMDHM,display=When Data Start Date/Time"`
	WhenDataEndDateTime          DTM     `hl7:"3,len=24,format=YMDHM,display=When Data End Date/Time"`
	WhatUserQualifier            []ST    `hl7:"4,len=60,display=What User Qualifier"`
	OtherQRYSubjectFilter        []ST    `hl7:"5,len=60,display=Other QRY Subject Filter"`
	WhichDateTimeQualifier       []ID    `hl7:"6,len=12,table=0156,display=Which Date/Time Qualifier"`
	WhichDateTimeStatusQualifier []ID    `hl7:"7,len=12,table=0157,display=Which Date/Time Status Qualifier"`
	DateTimeSelectionQualifier   []ID    `hl7:"8,len=12,table=0158,display=Date/Time Selection Qualifier"`
	WhenQuantityTimingQualifier  TQ      `hl7:"9,len=60,display=When Quantity/Timing Qualifier"`
	SearchConfidenceThreshold    NM      `hl7:"10,len=10,display=Search Confidence Threshold"`
}

// Query Response Instance
//
// The QRI segment is used to indicate the weight match for a returned record (where the responding system employs a numeric
// algorithm) and/or the match reason code (where the responding system uses rules or other match options).
type QRI struct {
	HL7                 HL7Name `hl7:",name=QRI,type=s"`
	CandidateConfidence NM      `hl7:"1,len=10,display=Candidate Confidence"`
	MatchReasonCode     []IS    `hl7:"2,len=2,table=0392,display=Match Reason Code"`
	AlgorithmDescriptor *CWE    `hl7:"3,len=250,table=0393,display=Algorithm Descriptor"`
}

// Response Control Parameter
//
// The RCP segment is used to restrict the amount of data that should be returned in response to query.
type RCP struct {
	HL7                      HL7Name `hl7:",name=RCP,type=s"`
	QueryPriority            ID      `hl7:"1,len=1,table=0091,display=Query Priority"`
	QuantityLimitedRequest   *CQ     `hl7:"2,len=10,display=Quantity Limited Request"`
	ResponseModality         *CNE    `hl7:"3,len=250,table=0394,display=Response Modality"`
	ExecutionAndDeliveryTime DTM     `hl7:"4,conditional,len=24,format=YMDHM,display=Execution and Delivery Time"`
	ModifyIndicator          ID      `hl7:"5,len=1,table=0395,display=Modify Indicator"`
	SortByField              []SRT   `hl7:"6,len=512,display=Sort-by Field"`
	SegmentGroupInclusion    []ID    `hl7:"7,len=256,table=0391,display=Segment group inclusion"`
}

// Table Row Definition
//
// The RDF segment defines the content of the row data segments (RDT) in the tabular response (RTB).
type RDF struct {
	HL7                   HL7Name `hl7:",name=RDF,type=s"`
	NumberOfColumnsPerRow NM      `hl7:"1,required,len=3,display=Number of Columns per Row"`
	ColumnDescription     []RCD   `hl7:"2,required,len=40,display=Column Description"`
}

// Table Row Data
//
// The RDT segment contains the row data of the tabular data response message (TBR).
type RDT struct {
	HL7         HL7Name `hl7:",name=RDT,type=s"`
	ColumnValue VARIES  `hl7:"1,required,len=99999,display=Column Value"`
}

// Referral Information
//
// This segment represents information that may be useful when sending referrals from the referring provider to the referred-to
// provider.
type RF1 struct {
	HL7                                   HL7Name `hl7:",name=RF1,type=s"`
	ReferralStatus                        *CWE    `hl7:"1,len=705,table=0283,display=Referral Status"`
	ReferralPriority                      *CWE    `hl7:"2,len=705,table=0280,display=Referral Priority"`
	ReferralType                          *CWE    `hl7:"3,len=705,table=0281,display=Referral Type"`
	ReferralDisposition                   []CWE   `hl7:"4,len=705,table=0282,display=Referral Disposition"`
	ReferralCategory                      *CWE    `hl7:"5,len=705,table=0284,display=Referral Category"`
	OriginatingReferralIdentifier         EI      `hl7:"6,required,len=30,display=Originating Referral Identifier"`
	EffectiveDate                         DTM     `hl7:"7,len=24,format=YMDHM,display=Effective Date"`
	ExpirationDate                        DTM     `hl7:"8,len=24,format=YMDHM,display=Expiration Date"`
	ProcessDate                           DTM     `hl7:"9,len=24,format=YMDHM,display=Process Date"`
	ReferralReason                        []CWE   `hl7:"10,len=705,table=0336,display=Referral Reason"`
	ExternalReferralIdentifier            []EI    `hl7:"11,len=30,display=External Referral Identifier"`
	ReferralDocumentationCompletionStatus *CWE    `hl7:"12,len=705,table=0865,display=Referral Documentation Completion Status"`
}

// Request for Information
type RFI struct {
	HL7                                   HL7Name `hl7:",name=RFI,type=s"`
	RequestDate                           DTM     `hl7:"1,required,len=24,format=YMDHM,display=Request Date"`
	ResponseDueDate                       DTM     `hl7:"2,required,len=24,format=YMDHM,display=Response Due Date"`
	PatientConsent                        ID      `hl7:"3,len=1,table=0136,display=Patient Consent"`
	DateAdditionalInformationWasSubmitted DTM     `hl7:"4,len=24,format=YMDHM,display=Date Additional Information was submitted"`
}

// Resource Group
//
// The RGS segment is used to identify relationships between resources identified for a scheduled event. This segment can
// be used, on a site specified basis, to identify groups of resources that are used together within a scheduled event, or to
// describe some other relationship between resources. To specify related groups of resources within a message, begin each
// group with an RGS segment, and then follow that RGS with one or more of the Appointment Information segments (AIG, AIL, AIS,
// or AIP).
type RGS struct {
	HL7               HL7Name `hl7:",name=RGS,type=s"`
	SetID             SI      `hl7:"1,seq,required,len=4,display=Set ID - RGS"`
	SegmentActionCode ID      `hl7:"2,conditional,len=3,table=0206,display=Segment Action Code"`
	ResourceGroupID   *CWE    `hl7:"3,len=250,display=Resource Group ID"`
}

// Risk Management Incident
//
// The RMI segment is used to report an occurrence of an incident event pertaining or attaching to a patient encounter.
type RMI struct {
	HL7                        HL7Name `hl7:",name=RMI,type=s"`
	RiskManagementIncidentCode *CWE    `hl7:"1,len=250,table=0427,display=Risk Management Incident Code"`
	DateTimeIncident           DTM     `hl7:"2,len=24,format=YMDHM,display=Date/Time Incident"`
	IncidentTypeCode           *CWE    `hl7:"3,len=250,table=0428,display=Incident Type Code"`
}

// Role
//
// The role segment contains the data necessary to add, update, correct, and delete from the record persons involved, as well
// as their functional involvement with the activity being transmitted.
type ROL struct {
	HL7                         HL7Name `hl7:",name=ROL,type=s"`
	RoleInstanceID              *EI     `hl7:"1,conditional,len=60,display=Role Instance ID"`
	ActionCode                  ID      `hl7:"2,required,len=2,table=0287,display=Action Code"`
	Role                        CWE     `hl7:"3,required,len=250,table=0443,display=Role-ROL"`
	RolePerson                  []XCN   `hl7:"4,required,len=250,display=Role Person"`
	RoleBeginDateTime           DTM     `hl7:"5,len=24,format=YMDHM,display=Role Begin Date/Time"`
	RoleEndDateTime             DTM     `hl7:"6,len=24,format=YMDHM,display=Role End Date/Time"`
	RoleDuration                *CWE    `hl7:"7,len=250,display=Role Duration"`
	RoleActionReason            *CWE    `hl7:"8,len=250,display=Role Action Reason"`
	ProviderType                []CWE   `hl7:"9,len=250,display=Provider Type"`
	OrganizationUnitType        *CWE    `hl7:"10,len=250,table=0406,display=Organization Unit Type"`
	OfficeHomeAddressBirthplace []XAD   `hl7:"11,len=250,display=Office/Home Address/Birthplace"`
	Phone                       []XTN   `hl7:"12,len=250,display=Phone"`
	PersonsLocation             *PL     `hl7:"13,len=1230,display=Person's Location"`
}

// Requisition Detail-1
//
// RQ1 contains additional detail for each non-stock requisitioned item. This segment definition is paired with a preceding
// RQD segment.
type RQ1 struct {
	HL7                    HL7Name `hl7:",name=RQ1,type=s"`
	AnticipatedPrice       ST      `hl7:"1,len=10,display=Anticipated Price"`
	ManufacturerIdentifier *CWE    `hl7:"2,conditional,len=705,table=0385,display=Manufacturer Identifier"`
	ManufacturersCatalog   ST      `hl7:"3,conditional,len=16,display=Manufacturer's Catalog"`
	VendorID               *CWE    `hl7:"4,conditional,len=250,display=Vendor ID"`
	VendorCatalog          ST      `hl7:"5,conditional,len=16,display=Vendor Catalog"`
	Taxable                ID      `hl7:"6,len=1,table=0136,display=Taxable"`
	SubstituteAllowed      ID      `hl7:"7,len=1,table=0136,display=Substitute Allowed"`
}

// Requisition Detail
//
// RQD contains the detail for each requisitioned item.
type RQD struct {
	HL7                      HL7Name `hl7:",name=RQD,type=s"`
	RequisitionLineNumber    SI      `hl7:"1,len=4,display=Requisition Line Number"`
	ItemCodeInternal         *CWE    `hl7:"2,conditional,len=250,display=Item Code - Internal"`
	ItemCodeExternal         *CWE    `hl7:"3,conditional,len=250,display=Item Code - External"`
	HospitalItemCode         *CWE    `hl7:"4,conditional,len=250,display=Hospital Item Code"`
	RequisitionQuantity      NM      `hl7:"5,len=6,display=Requisition Quantity"`
	RequisitionUnitOfMeasure *CWE    `hl7:"6,len=250,display=Requisition Unit of Measure"`
	CostCenterAccountNumber  IS      `hl7:"7,len=30,table=0319,display=Cost Center Account Number"`
	ItemNaturalAccountCode   IS      `hl7:"8,len=30,table=0320,display=Item Natural Account Code"`
	DeliverToID              *CWE    `hl7:"9,len=250,display=Deliver To ID"`
	DateNeeded               DT      `hl7:"10,len=8,format=YMD,display=Date Needed"`
}

// Pharmacy/Treatment Administration
//
// The ORC must have the filler order number and the order control code RE. As a site-specific variant, the RXO and associated
// RXCs and/or the RXE (and associated RXCs) may be present if the receiving application needs any of their data. The RXA carries
// the administration data.
type RXA struct {
	HL7                                 HL7Name `hl7:",name=RXA,type=s"`
	GiveSubIDCounter                    NM      `hl7:"1,required,len=4,display=Give Sub-ID Counter"`
	AdministrationSubIDCounter          NM      `hl7:"2,required,len=4,display=Administration Sub-ID Counter"`
	DateTimeStartOfAdministration       DTM     `hl7:"3,required,len=24,format=YMDHM,display=Date/Time Start of Administration"`
	DateTimeEndOfAdministration         DTM     `hl7:"4,required,len=24,format=YMDHM,display=Date/Time End of Administration"`
	AdministeredCode                    CWE     `hl7:"5,required,len=250,table=0292,display=Administered Code"`
	AdministeredAmount                  NM      `hl7:"6,required,len=20,display=Administered Amount"`
	AdministeredUnits                   *CWE    `hl7:"7,conditional,len=250,display=Administered Units"`
	AdministeredDosageForm              *CWE    `hl7:"8,len=250,display=Administered Dosage Form"`
	AdministrationNotes                 []CWE   `hl7:"9,len=250,display=Administration Notes"`
	AdministeringProvider               []XCN   `hl7:"10,len=250,display=Administering Provider"`
	AdministeredAtLocation              LA2     `hl7:"11,len=200,display=Administered-at Location"`
	AdministeredPerTimeUnit             ST      `hl7:"12,conditional,len=20,display=Administered Per (Time Unit)"`
	AdministeredStrength                NM      `hl7:"13,len=20,display=Administered Strength"`
	AdministeredStrengthUnits           *CWE    `hl7:"14,len=250,display=Administered Strength Units"`
	SubstanceLotNumber                  []ST    `hl7:"15,len=20,display=Substance Lot Number"`
	SubstanceExpirationDate             []DTM   `hl7:"16,len=24,format=YMDHM,display=Substance Expiration Date"`
	SubstanceManufacturerName           []CWE   `hl7:"17,len=250,table=0227,display=Substance Manufacturer Name"`
	SubstanceTreatmentRefusalReason     []CWE   `hl7:"18,len=250,display=Substance/Treatment Refusal Reason"`
	Indication                          []CWE   `hl7:"19,len=250,display=Indication"`
	CompletionStatus                    ID      `hl7:"20,len=2,table=0322,display=Completion Status"`
	ActionCode                          ID      `hl7:"21,len=2,table=0206,display=Action Code - RXA"`
	SystemEntryDateTime                 DTM     `hl7:"22,len=24,format=YMDHM,display=System Entry Date/Time"`
	AdministeredDrugStrengthVolume      NM      `hl7:"23,len=5,display=Administered Drug Strength Volume"`
	AdministeredDrugStrengthVolumeUnits *CWE    `hl7:"24,len=250,display=Administered Drug Strength Volume Units"`
	AdministeredBarcodeIdentifier       *CWE    `hl7:"25,len=60,display=Administered Barcode Identifier"`
	PharmacyOrderType                   ID      `hl7:"26,len=1,table=0480,display=Pharmacy Order Type"`
	AdministerAt                        *PL     `hl7:"27,len=180,display=Administer-at"`
	AdministeredAtAddress               *XAD    `hl7:"28,len=106,display=Administered-at Address"`
}

// Pharmacy/Treatment Component Order
//
// If the drug or treatment ordered with the RXO segment is a compound drug OR an IV solution, AND there is not a coded value for
// OBR-4-universal service ID , which specifies the components (base and all additives), then the components (the base and
// additives) are specified by two or more RXC segments. The policy of the pharmacy or treatment application on substitutions
// at the RXC level is identical to that for the RXO level.
type RXC struct {
	HL7                              HL7Name `hl7:",name=RXC,type=s"`
	RXComponentType                  ID      `hl7:"1,required,len=1,table=0166,display=RX Component Type"`
	ComponentCode                    CWE     `hl7:"2,required,len=250,display=Component Code"`
	ComponentAmount                  NM      `hl7:"3,required,len=20,display=Component Amount"`
	ComponentUnits                   CWE     `hl7:"4,required,len=250,display=Component Units"`
	ComponentStrength                NM      `hl7:"5,len=20,display=Component Strength"`
	ComponentStrengthUnits           *CWE    `hl7:"6,len=250,display=Component Strength Units"`
	SupplementaryCode                []CWE   `hl7:"7,len=250,display=Supplementary Code"`
	ComponentDrugStrengthVolume      NM      `hl7:"8,len=5,display=Component Drug Strength Volume"`
	ComponentDrugStrengthVolumeUnits *CWE    `hl7:"9,len=250,display=Component Drug Strength Volume Units"`
}

// Pharmacy/Treatment Dispense
type RXD struct {
	HL7                                                     HL7Name `hl7:",name=RXD,type=s"`
	DispenseSubIDCounter                                    NM      `hl7:"1,required,len=4,display=Dispense Sub-ID Counter"`
	DispenseGiveCode                                        CWE     `hl7:"2,required,len=250,table=0292,display=Dispense/Give Code"`
	DateTimeDispensed                                       DTM     `hl7:"3,required,len=24,format=YMDHM,display=Date/Time Dispensed"`
	ActualDispenseAmount                                    NM      `hl7:"4,required,len=20,display=Actual Dispense Amount"`
	ActualDispenseUnits                                     *CWE    `hl7:"5,conditional,len=250,display=Actual Dispense Units"`
	ActualDosageForm                                        *CWE    `hl7:"6,len=250,display=Actual Dosage Form"`
	PrescriptionNumber                                      ST      `hl7:"7,required,len=20,display=Prescription Number"`
	NumberOfRefillsRemaining                                NM      `hl7:"8,conditional,len=20,display=Number of Refills Remaining"`
	DispenseNotes                                           []ST    `hl7:"9,len=200,display=Dispense Notes"`
	DispensingProvider                                      []XCN   `hl7:"10,len=200,display=Dispensing Provider"`
	SubstitutionStatus                                      ID      `hl7:"11,len=1,table=0167,display=Substitution Status"`
	TotalDailyDose                                          *CQ     `hl7:"12,len=10,display=Total Daily Dose"`
	DispenseToLocation                                      LA2     `hl7:"13,len=200,display=Dispense-to Location"`
	NeedsHumanReview                                        ID      `hl7:"14,len=1,table=0136,display=Needs Human Review"`
	PharmacyTreatmentSuppliersSpecialDispensingInstructions []CWE   `hl7:"15,len=250,display=Pharmacy/Treatment Supplier's Special Dispensing Instructions"`
	ActualStrength                                          NM      `hl7:"16,len=20,display=Actual Strength"`
	ActualStrengthUnit                                      *CWE    `hl7:"17,len=250,display=Actual Strength Unit"`
	SubstanceLotNumber                                      []ST    `hl7:"18,len=20,display=Substance Lot Number"`
	SubstanceExpirationDate                                 []DTM   `hl7:"19,len=24,format=YMDHM,display=Substance Expiration Date"`
	SubstanceManufacturerName                               []CWE   `hl7:"20,len=250,table=0227,display=Substance Manufacturer Name"`
	Indication                                              []CWE   `hl7:"21,len=250,display=Indication"`
	DispensePackageSize                                     NM      `hl7:"22,len=20,display=Dispense Package Size"`
	DispensePackageSizeUnit                                 *CWE    `hl7:"23,len=250,display=Dispense Package Size Unit"`
	DispensePackageMethod                                   ID      `hl7:"24,len=2,table=0321,display=Dispense Package Method"`
	SupplementaryCode                                       []CWE   `hl7:"25,len=250,display=Supplementary Code"`
	InitiatingLocation                                      *CWE    `hl7:"26,len=250,display=Initiating Location"`
	PackagingAssemblyLocation                               *CWE    `hl7:"27,len=250,display=Packaging/Assembly Location"`
	ActualDrugStrengthVolume                                NM      `hl7:"28,len=5,display=Actual Drug Strength Volume"`
	ActualDrugStrengthVolumeUnits                           *CWE    `hl7:"29,len=250,display=Actual Drug Strength Volume Units"`
	DispenseToPharmacy                                      *CWE    `hl7:"30,len=180,display=Dispense to Pharmacy"`
	DispenseToPharmacyAddress                               *XAD    `hl7:"31,len=106,display=Dispense to Pharmacy Address"`
	PharmacyOrderType                                       ID      `hl7:"32,len=1,table=0480,display=Pharmacy Order Type"`
	DispenseType                                            *CWE    `hl7:"33,len=250,table=0484,display=Dispense Type"`
}

// Pharmacy/Treatment Encoded Order
//
// The RXE segment details the pharmacy or treatment application's encoding of the order. It also contains several pharmacy-specific
// order status fields, such as RXE-16-number of refills remaining , RXE-17-number of refills/doses dispensed, RXE-18-D/T
// of most recent refill or dose dispensed , and RXE-19-total daily dose.
type RXE struct {
	HL7                                                     HL7Name `hl7:",name=RXE,type=s"`
	QuantityTiming                                          TQ      `hl7:"1,len=705,display=Quantity/Timing"`
	GiveCode                                                CWE     `hl7:"2,required,len=250,display=Give Code"`
	GiveAmountMinimum                                       NM      `hl7:"3,required,len=20,display=Give Amount - Minimum"`
	GiveAmountMaximum                                       NM      `hl7:"4,len=20,display=Give Amount - Maximum"`
	GiveUnits                                               CWE     `hl7:"5,required,len=250,display=Give Units"`
	GiveDosageForm                                          *CWE    `hl7:"6,len=250,display=Give Dosage Form"`
	ProvidersAdministrationInstructions                     []CWE   `hl7:"7,len=250,display=Provider's Administration Instructions"`
	DeliverToLocation                                       LA1     `hl7:"8,len=200,display=Deliver-To Location"`
	SubstitutionStatus                                      ID      `hl7:"9,len=1,table=0167,display=Substitution Status"`
	DispenseAmount                                          NM      `hl7:"10,conditional,len=20,display=Dispense Amount"`
	DispenseUnits                                           *CWE    `hl7:"11,conditional,len=250,display=Dispense Units"`
	NumberOfRefills                                         NM      `hl7:"12,len=3,display=Number Of Refills"`
	OrderingProvidersDEANumber                              []XCN   `hl7:"13,conditional,len=250,display=Ordering Provider's DEA Number"`
	PharmacistTreatmentSuppliersVerifierID                  []XCN   `hl7:"14,len=250,display=Pharmacist/Treatment Supplier's Verifier ID"`
	PrescriptionNumber                                      ST      `hl7:"15,conditional,len=20,display=Prescription Number"`
	NumberOfRefillsRemaining                                NM      `hl7:"16,conditional,len=20,display=Number of Refills Remaining"`
	NumberOfRefillsDosesDispensed                           NM      `hl7:"17,conditional,len=20,display=Number of Refills/Doses Dispensed"`
	DTOfMostRecentRefillOrDoseDispensed                     DTM     `hl7:"18,conditional,len=24,format=YMDHM,display=D/T of Most Recent Refill or Dose Dispensed"`
	TotalDailyDose                                          *CQ     `hl7:"19,conditional,len=10,display=Total Daily Dose"`
	NeedsHumanReview                                        ID      `hl7:"20,len=1,table=0136,display=Needs Human Review"`
	PharmacyTreatmentSuppliersSpecialDispensingInstructions []CWE   `hl7:"21,len=250,display=Pharmacy/Treatment Supplier's Special Dispensing Instructions"`
	GivePerTimeUnit                                         ST      `hl7:"22,conditional,len=20,display=Give Per (Time Unit)"`
	GiveRateAmount                                          ST      `hl7:"23,len=6,display=Give Rate Amount"`
	GiveRateUnits                                           *CWE    `hl7:"24,len=250,display=Give Rate Units"`
	GiveStrength                                            NM      `hl7:"25,len=20,display=Give Strength"`
	GiveStrengthUnits                                       *CWE    `hl7:"26,len=250,display=Give Strength Units"`
	GiveIndication                                          []CWE   `hl7:"27,len=250,display=Give Indication"`
	DispensePackageSize                                     NM      `hl7:"28,len=20,display=Dispense Package Size"`
	DispensePackageSizeUnit                                 *CWE    `hl7:"29,len=250,display=Dispense Package Size Unit"`
	DispensePackageMethod                                   ID      `hl7:"30,len=2,table=0321,display=Dispense Package Method"`
	SupplementaryCode                                       []CWE   `hl7:"31,len=250,display=Supplementary Code"`
	OriginalOrderDateTime                                   DTM     `hl7:"32,len=24,format=YMDHM,display=Original Order Date/Time"`
	GiveDrugStrengthVolume                                  NM      `hl7:"33,len=5,display=Give Drug Strength Volume"`
	GiveDrugStrengthVolumeUnits                             *CWE    `hl7:"34,len=250,display=Give Drug Strength Volume Units"`
	ControlledSubstanceSchedule                             *CWE    `hl7:"35,len=60,table=0477,display=Controlled Substance Schedule"`
	FormularyStatus                                         ID      `hl7:"36,len=1,table=0478,display=Formulary Status"`
	PharmaceuticalSubstanceAlternative                      []CWE   `hl7:"37,len=60,display=Pharmaceutical Substance Alternative"`
	PharmacyOfMostRecentFill                                *CWE    `hl7:"38,len=250,display=Pharmacy of Most Recent Fill"`
	InitialDispenseAmount                                   NM      `hl7:"39,len=250,display=Initial Dispense Amount"`
	DispensingPharmacy                                      *CWE    `hl7:"40,len=250,display=Dispensing Pharmacy"`
	DispensingPharmacyAddress                               *XAD    `hl7:"41,len=250,display=Dispensing Pharmacy Address"`
	DeliverToPatientLocation                                *PL     `hl7:"42,len=80,display=Deliver-to Patient Location"`
	DeliverToAddress                                        *XAD    `hl7:"43,len=250,display=Deliver-to Address"`
	PharmacyOrderType                                       ID      `hl7:"44,len=1,table=0480,display=Pharmacy Order Type"`
}

// Pharmacy/Treatment Give
type RXG struct {
	HL7                                                         HL7Name `hl7:",name=RXG,type=s"`
	GiveSubIDCounter                                            NM      `hl7:"1,required,len=4,display=Give Sub-ID Counter"`
	DispenseSubIDCounter                                        NM      `hl7:"2,len=4,display=Dispense Sub-ID Counter"`
	QuantityTiming                                              TQ      `hl7:"3,len=705,display=Quantity/Timing"`
	GiveCode                                                    CWE     `hl7:"4,required,len=250,table=0292,display=Give Code"`
	GiveAmountMinimum                                           NM      `hl7:"5,required,len=20,display=Give Amount - Minimum"`
	GiveAmountMaximum                                           NM      `hl7:"6,len=20,display=Give Amount - Maximum"`
	GiveUnits                                                   CWE     `hl7:"7,required,len=250,display=Give Units"`
	GiveDosageForm                                              *CWE    `hl7:"8,len=250,display=Give Dosage Form"`
	AdministrationNotes                                         []CWE   `hl7:"9,len=250,display=Administration Notes"`
	SubstitutionStatus                                          ID      `hl7:"10,len=1,table=0167,display=Substitution Status"`
	DispenseToLocation                                          LA2     `hl7:"11,len=200,display=Dispense-to Location"`
	NeedsHumanReview                                            ID      `hl7:"12,len=1,table=0136,display=Needs Human Review"`
	PharmacyTreatmentSuppliersSpecialAdministrationInstructions []CWE   `hl7:"13,len=250,display=Pharmacy/Treatment Supplier's Special Administration Instructions"`
	GivePerTImeUnit                                             ST      `hl7:"14,conditional,len=20,display=Give Per (TIme Unit)"`
	GiveRateAmount                                              ST      `hl7:"15,len=6,display=Give Rate Amount"`
	GiveRateUnits                                               *CWE    `hl7:"16,len=250,display=Give Rate Units"`
	GiveStrength                                                NM      `hl7:"17,len=20,display=Give Strength"`
	GiveStrengthUnits                                           *CWE    `hl7:"18,len=250,display=Give Strength Units"`
	SubstanceLotNumber                                          []ST    `hl7:"19,len=20,display=Substance Lot Number"`
	SubstanceExpirationDate                                     []DTM   `hl7:"20,len=24,format=YMDHM,display=Substance Expiration Date"`
	SubstanceManufacturerName                                   []CWE   `hl7:"21,len=250,table=0227,display=Substance Manufacturer Name"`
	Indication                                                  []CWE   `hl7:"22,len=250,display=Indication"`
	GiveDrugStrengthVolume                                      NM      `hl7:"23,len=5,display=Give Drug Strength Volume"`
	GiveDrugStrengthVolumeUnits                                 *CWE    `hl7:"24,len=250,display=Give Drug Strength Volume Units"`
	GiveBarcodeIdentifier                                       *CWE    `hl7:"25,len=60,display=Give Barcode Identifier"`
	PharmacyOrderType                                           ID      `hl7:"26,len=1,table=0480,display=Pharmacy Order Type"`
	DispenseToPharmacy                                          *CWE    `hl7:"27,len=180,display=Dispense to Pharmacy"`
	DispenseToPharmacyAddress                                   *XAD    `hl7:"28,len=106,display=Dispense to Pharmacy Address"`
	DeliverToPatientLocation                                    *PL     `hl7:"29,len=80,display=Deliver-to Patient Location"`
	DeliverToAddress                                            *XAD    `hl7:"30,len=250,display=Deliver-to Address"`
}

// Pharmacy/Treatment Order
//
// This is the "master" pharmacy/treatment order segment. It contains order data not specific to components or additives.
// Unlike the OBR, it does not contain status fields or other data that are results-only.
type RXO struct {
	HL7                                    HL7Name `hl7:",name=RXO,type=s"`
	RequestedGiveCode                      *CWE    `hl7:"1,conditional,len=250,display=Requested Give Code"`
	RequestedGiveAmountMinimum             NM      `hl7:"2,conditional,len=20,display=Requested Give Amount - Minimum"`
	RequestedGiveAmountMaximum             NM      `hl7:"3,len=20,display=Requested Give Amount - Maximum"`
	RequestedGiveUnits                     *CWE    `hl7:"4,conditional,len=250,display=Requested Give Units"`
	RequestedDosageForm                    *CWE    `hl7:"5,conditional,len=250,display=Requested Dosage Form"`
	ProvidersPharmacyTreatmentInstructions []CWE   `hl7:"6,len=250,display=Provider's Pharmacy/Treatment Instructions"`
	ProvidersAdministrationInstructions    []CWE   `hl7:"7,len=250,display=Provider's Administration Instructions"`
	DeliverToLocation                      LA1     `hl7:"8,len=200,display=Deliver-To Location"`
	AllowSubstitutions                     ID      `hl7:"9,len=1,table=0161,display=Allow Substitutions"`
	RequestedDispenseCode                  *CWE    `hl7:"10,len=250,display=Requested Dispense Code"`
	RequestedDispenseAmount                NM      `hl7:"11,len=20,display=Requested Dispense Amount"`
	RequestedDispenseUnits                 *CWE    `hl7:"12,len=250,display=Requested Dispense Units"`
	NumberOfRefills                        NM      `hl7:"13,len=3,display=Number Of Refills"`
	OrderingProvidersDEANumber             []XCN   `hl7:"14,conditional,len=250,display=Ordering Provider's DEA Number"`
	PharmacistTreatmentSuppliersVerifierID []XCN   `hl7:"15,conditional,len=250,display=Pharmacist/Treatment Supplier's Verifier ID"`
	NeedsHumanReview                       ID      `hl7:"16,len=1,table=0136,display=Needs Human Review"`
	RequestedGivePerTimeUnit               ST      `hl7:"17,conditional,len=20,display=Requested Give Per (Time Unit)"`
	RequestedGiveStrength                  NM      `hl7:"18,len=20,display=Requested Give Strength"`
	RequestedGiveStrengthUnits             *CWE    `hl7:"19,len=250,display=Requested Give Strength Units"`
	Indication                             []CWE   `hl7:"20,len=250,display=Indication"`
	RequestedGiveRateAmount                ST      `hl7:"21,len=6,display=Requested Give Rate Amount"`
	RequestedGiveRateUnits                 *CWE    `hl7:"22,len=250,display=Requested Give Rate Units"`
	TotalDailyDose                         *CQ     `hl7:"23,len=10,display=Total Daily Dose"`
	SupplementaryCode                      []CWE   `hl7:"24,len=250,display=Supplementary Code"`
	RequestedDrugStrengthVolume            NM      `hl7:"25,len=5,display=Requested Drug Strength Volume"`
	RequestedDrugStrengthVolumeUnits       *CWE    `hl7:"26,len=250,display=Requested Drug Strength Volume Units"`
	PharmacyOrderType                      ID      `hl7:"27,len=1,table=0480,display=Pharmacy Order Type"`
	DispensingInterval                     NM      `hl7:"28,len=20,display=Dispensing Interval"`
	MedicationInstanceIdentifier           *EI     `hl7:"29,len=60,display=Medication Instance Identifier"`
	SegmentInstanceIdentifier              *EI     `hl7:"30,len=60,display=Segment Instance Identifier"`
	MoodCode                               *CNE    `hl7:"31,conditional,len=2,table=0725,display=Mood Code"`
	DispensingPharmacy                     *CWE    `hl7:"32,len=250,display=Dispensing Pharmacy"`
	DispensingPharmacyAddress              *XAD    `hl7:"33,len=250,display=Dispensing Pharmacy Address"`
	DeliverToPatientLocation               *PL     `hl7:"34,len=80,display=Deliver-to Patient Location"`
	DeliverToAddress                       *XAD    `hl7:"35,len=250,display=Deliver-to Address"`
}

// Pharmacy/Treatment Route
//
// The Pharmacy/Treatment Route segment contains the alternative combination of route, site, administration device,
// and administration method that are prescribed as they apply to a particular order. The pharmacy, treatment staff and/or
// nursing staff has a choice between the routes based on either their professional judgment or administration instructions
// provided by the physician.
type RXR struct {
	HL7                        HL7Name `hl7:",name=RXR,type=s"`
	Route                      CWE     `hl7:"1,required,len=250,table=0162,display=Route"`
	AdministrationSite         *CWE    `hl7:"2,len=250,table=0550,display=Administration Site"`
	AdministrationDevice       *CWE    `hl7:"3,len=250,table=0164,display=Administration Device"`
	AdministrationMethod       *CWE    `hl7:"4,len=250,table=0165,display=Administration Method"`
	RoutingInstruction         *CWE    `hl7:"5,len=250,display=Routing Instruction"`
	AdministrationSiteModifier *CWE    `hl7:"6,len=250,table=0495,display=Administration Site Modifier"`
}

// Specimen Container Detail
//
// The container detail segment is the data necessary to maintain the containers that are being used throughout the Laboratory
// Automation System.
//
// The specimens in many laboratories are transported and processed in containers (e.g., sample tubes). When SPM and SAC
// are used in the same message, then the conceptually duplicate attributes will be valued only in the SPM. This applies to
// SAC-6 - Specimen Source, SAC-27 - Additives, and SAC-43 - Special Handling Considerations.
type SAC struct {
	HL7                               HL7Name `hl7:",name=SAC,type=s"`
	ExternalAccessionIdentifier       *EI     `hl7:"1,len=427,display=External Accession Identifier"`
	AccessionIdentifier               *EI     `hl7:"2,len=427,display=Accession Identifier"`
	ContainerIdentifier               *EI     `hl7:"3,conditional,len=427,display=Container Identifier"`
	PrimaryParentContainerIdentifier  *EI     `hl7:"4,conditional,len=427,display=Primary (Parent) Container Identifier"`
	EquipmentContainerIdentifier      *EI     `hl7:"5,len=427,display=Equipment Container Identifier"`
	SpecimenSource                    *SPS    `hl7:"6,conditional,len=300,display=Specimen Source"`
	RegistrationDateTime              DTM     `hl7:"7,len=24,format=YMDHM,display=Registration Date/Time"`
	ContainerStatus                   *CWE    `hl7:"8,len=705,table=0370,display=Container Status"`
	CarrierType                       *CWE    `hl7:"9,len=705,table=0378,display=Carrier Type"`
	CarrierIdentifier                 *EI     `hl7:"10,len=705,display=Carrier Identifier"`
	PositionInCarrier                 *NA     `hl7:"11,len=80,display=Position in Carrier"`
	TrayType                          *CWE    `hl7:"12,len=705,table=0379,display=Tray Type - SAC"`
	TrayIdentifier                    *EI     `hl7:"13,len=427,display=Tray Identifier"`
	PositionInTray                    *NA     `hl7:"14,len=80,display=Position in Tray"`
	Location                          []CWE   `hl7:"15,len=705,display=Location"`
	ContainerHeight                   NM      `hl7:"16,len=20,display=Container Height"`
	ContainerDiameter                 NM      `hl7:"17,len=20,display=Container Diameter"`
	BarrierDelta                      NM      `hl7:"18,len=20,display=Barrier Delta"`
	BottomDelta                       NM      `hl7:"19,len=20,display=Bottom Delta"`
	ContainerHeightDiameterDeltaUnits *CWE    `hl7:"20,len=705,display=Container Height/Diameter/Delta Units"`
	ContainerVolume                   NM      `hl7:"21,len=20,display=Container Volume"`
	AvailableSpecimenVolume           NM      `hl7:"22,len=20,display=Available Specimen Volume"`
	InitialSpecimenVolume             NM      `hl7:"23,len=20,display=Initial Specimen Volume"`
	VolumeUnits                       *CWE    `hl7:"24,len=705,display=Volume Units"`
	SeparatorType                     *CWE    `hl7:"25,len=705,table=0380,display=Separator Type"`
	CapType                           *CWE    `hl7:"26,len=705,table=0381,display=Cap Type"`
	Additive                          []CWE   `hl7:"27,len=705,table=0371,display=Additive"`
	SpecimenComponent                 *CWE    `hl7:"28,len=705,table=0372,display=Specimen Component"`
	DilutionFactor                    *SN     `hl7:"29,len=36,display=Dilution Factor"`
	Treatment                         *CWE    `hl7:"30,len=705,table=0373,display=Treatment"`
	Temperature                       *SN     `hl7:"31,len=36,display=Temperature"`
	HemolysisIndex                    NM      `hl7:"32,len=20,display=Hemolysis Index"`
	HemolysisIndexUnits               *CWE    `hl7:"33,len=705,display=Hemolysis Index Units"`
	LipemiaIndex                      NM      `hl7:"34,len=20,display=Lipemia Index"`
	LipemiaIndexUnits                 *CWE    `hl7:"35,len=705,display=Lipemia Index Units"`
	IcterusIndex                      NM      `hl7:"36,len=20,display=Icterus Index"`
	IcterusIndexUnits                 *CWE    `hl7:"37,len=705,display=Icterus Index Units"`
	FibrinIndex                       NM      `hl7:"38,len=20,display=Fibrin Index"`
	FibrinIndexUnits                  *CWE    `hl7:"39,len=705,display=Fibrin Index Units"`
	SystemInducedContaminants         []CWE   `hl7:"40,len=705,table=0374,display=System Induced Contaminants"`
	DrugInterference                  []CWE   `hl7:"41,len=705,table=0382,display=Drug Interference"`
	ArtificialBlood                   *CWE    `hl7:"42,len=705,table=0375,display=Artificial Blood"`
	SpecialHandlingCode               []CWE   `hl7:"43,len=705,table=0376,display=Special Handling Code"`
	OtherEnvironmentalFactors         []CWE   `hl7:"44,len=705,table=0377,display=Other Environmental Factors"`
}

// Anti-Microbial Cycle Data
//
// The SCD segment contains cycle data representing an instance of a sterilization or decontamination.
type SCD struct {
	HL7                    HL7Name `hl7:",name=SCD,type=s"`
	CycleStartTime         TM      `hl7:"1,len=16,format=HM,display=Cycle Start Time"`
	CycleCount             NM      `hl7:"2,len=16,display=Cycle Count"`
	TempMax                *CQ     `hl7:"3,len=36,display=Temp Max"`
	TempMin                *CQ     `hl7:"4,len=36,display=Temp Min"`
	LoadNumber             NM      `hl7:"5,len=16,display=Load Number"`
	ConditionTime          *CQ     `hl7:"6,len=16,display=Condition Time"`
	SterilizeTime          *CQ     `hl7:"7,len=16,display=Sterilize Time"`
	ExhaustTime            *CQ     `hl7:"8,len=16,display=Exhaust Time"`
	TotalCycleTime         *CQ     `hl7:"9,len=16,display=Total Cycle Time"`
	DeviceStatus           *CWE    `hl7:"10,len=4,table=0682,display=Device Status"`
	CycleStartDateTime     DTM     `hl7:"11,len=24,format=YMDHM,display=Cycle Start Date/Time"`
	DryTime                *CQ     `hl7:"12,len=16,display=Dry Time"`
	LeakRate               *CQ     `hl7:"13,len=16,display=Leak Rate"`
	ControlTemperature     *CQ     `hl7:"14,len=36,display=Control Temperature"`
	SterilizerTemperature  *CQ     `hl7:"15,len=36,display=Sterilizer Temperature"`
	CycleCompleteTime      TM      `hl7:"16,len=16,format=HM,display=Cycle Complete Time"`
	UnderTemperature       *CQ     `hl7:"17,len=36,display=Under Temperature"`
	OverTemperature        *CQ     `hl7:"18,len=36,display=Over Temperature"`
	AbortCycle             *CNE    `hl7:"19,len=4,table=0532,display=Abort Cycle"`
	Alarm                  *CNE    `hl7:"20,len=4,table=0532,display=Alarm"`
	LongInChargePhase      *CNE    `hl7:"21,len=4,table=0532,display=Long in Charge Phase"`
	LongInExhaustPhase     *CNE    `hl7:"22,len=4,table=0532,display=Long in Exhaust Phase"`
	LongInFastExhaustPhase *CNE    `hl7:"23,len=4,table=0532,display=Long in Fast Exhaust Phase"`
	Reset                  *CNE    `hl7:"24,len=4,table=0532,display=Reset"`
	OperatorUnload         *XCN    `hl7:"25,len=15,display=Operator - Unload"`
	DoorOpen               *CNE    `hl7:"26,len=4,table=0532,display=Door Open"`
	ReadingFailure         *CNE    `hl7:"27,len=4,table=0532,display=Reading Failure"`
	CycleType              *CWE    `hl7:"28,len=3,table=0702,display=Cycle Type"`
	ThermalRinseTime       *CQ     `hl7:"29,len=16,display=Thermal Rinse Time"`
	WashTime               *CQ     `hl7:"30,len=16,display=Wash Time"`
	InjectionRate          *CQ     `hl7:"31,len=16,display=Injection Rate"`
	ProcedureCode          *CNE    `hl7:"32,len=705,table=0088,display=Procedure Code"`
	PatientIdentifierList  []CX    `hl7:"33,len=250,display=Patient Identifier List"`
	AttendingDoctor        *XCN    `hl7:"34,len=250,table=0010,display=Attending Doctor"`
	DilutionFactor         *SN     `hl7:"35,len=36,display=Dilution Factor"`
	FillTime               *CQ     `hl7:"36,len=16,display=Fill Time"`
	InletTemperature       *CQ     `hl7:"37,len=36,display=Inlet Temperature"`
}

// Scheduling Activity Information
//
// The SCH segment contains general information about the scheduled appointment.
type SCH struct {
	HL7                       HL7Name `hl7:",name=SCH,type=s"`
	PlacerAppointmentID       *EI     `hl7:"1,conditional,len=75,display=Placer Appointment ID"`
	FillerAppointmentID       *EI     `hl7:"2,conditional,len=75,display=Filler Appointment ID"`
	OccurrenceNumber          NM      `hl7:"3,conditional,len=5,display=Occurrence Number"`
	PlacerGroupNumber         *EI     `hl7:"4,len=22,display=Placer Group Number"`
	ScheduleID                *CWE    `hl7:"5,len=250,display=Schedule ID"`
	EventReason               CWE     `hl7:"6,required,len=250,display=Event Reason"`
	AppointmentReason         *CWE    `hl7:"7,len=250,table=0276,display=Appointment Reason"`
	AppointmentType           *CWE    `hl7:"8,len=250,table=0277,display=Appointment Type"`
	AppointmentDuration       NM      `hl7:"9,len=20,display=Appointment Duration"`
	AppointmentDurationUnits  CNE     `hl7:"10,len=250,display=Appointment Duration Units"`
	AppointmentTimingQuantity []TQ    `hl7:"11,len=200,display=Appointment Timing Quantity"`
	PlacerContactPerson       []XCN   `hl7:"12,len=250,display=Placer Contact Person"`
	PlacerContactPhoneNumber  *XTN    `hl7:"13,len=250,display=Placer Contact Phone Number"`
	PlacerContactAddress      []XAD   `hl7:"14,len=250,display=Placer Contact Address"`
	PlacerContactLocation     *PL     `hl7:"15,len=80,display=Placer Contact Location"`
	FillerContactPerson       []XCN   `hl7:"16,required,len=250,display=Filler Contact Person"`
	FillerContactPhoneNumber  *XTN    `hl7:"17,len=250,display=Filler Contact Phone Number"`
	FillerContactAddress      []XAD   `hl7:"18,len=250,display=Filler Contact Address"`
	FillerContactLocation     *PL     `hl7:"19,len=80,display=Filler Contact Location"`
	EnteredByPerson           []XCN   `hl7:"20,required,len=250,display=Entered By Person"`
	EnteredByPhoneNumber      []XTN   `hl7:"21,len=250,display=Entered By Phone Number"`
	EnteredByLocation         *PL     `hl7:"22,len=80,display=Entered By Location"`
	ParentPlacerAppointmentID *EI     `hl7:"23,len=75,display=Parent Placer Appointment ID"`
	ParentFillerAppointmentID *EI     `hl7:"24,conditional,len=75,display=Parent Filler Appointment ID"`
	FillerStatusCode          *CWE    `hl7:"25,len=250,table=0278,display=Filler Status Code"`
	PlacerOrderNumber         []EI    `hl7:"26,conditional,len=427,display=Placer Order Number"`
	FillerOrderNumber         []EI    `hl7:"27,conditional,len=427,display=Filler Order Number"`
}

// Sterilizer Configuration
//
// The sterilization configuration segment contains information specific to configuration of a sterilizer or washer for
// processing sterilization or decontamination loads.
type SCP struct {
	HL7                                         HL7Name `hl7:",name=SCP,type=s"`
	NumberOfDecontaminationSterilizationDevices NM      `hl7:"1,len=2,display=Number Of Decontamination/Sterilization Devices"`
	LaborCalculationType                        *CWE    `hl7:"2,len=250,table=0651,display=Labor Calculation Type"`
	DateFormat                                  *CWE    `hl7:"3,len=250,table=0653,display=Date Format"`
	DeviceNumber                                *EI     `hl7:"4,len=8,display=Device Number"`
	DeviceName                                  ST      `hl7:"5,len=999,display=Device Name"`
	DeviceModelName                             ST      `hl7:"6,len=2,display=Device Model Name"`
	DeviceType                                  *CWE    `hl7:"7,len=250,table=0657,display=Device Type"`
	LotControl                                  *CWE    `hl7:"8,len=250,table=0659,display=Lot Control"`
}

// Sterilization Device Data
//
// The SDD segment contains the attributes of an instance of a cycle that provides sterilization or decontamination of medical
// supplies.
type SDD struct {
	HL7             HL7Name `hl7:",name=SDD,type=s"`
	LotNumber       *EI     `hl7:"1,len=11,display=Lot Number"`
	DeviceNumber    *EI     `hl7:"2,len=8,display=Device Number"`
	DeviceName      ST      `hl7:"3,len=999,display=Device Name"`
	DeviceDataState IS      `hl7:"4,len=1,table=0667,display=Device Data State"`
	LoadStatus      IS      `hl7:"5,len=3,table=0669,display=Load Status"`
	ControlCode     NM      `hl7:"6,len=3,display=Control Code"`
	OperatorName    ST      `hl7:"7,len=15,display=Operator Name"`
}

// Software Segment
//
// This segment provides additional information about the software product(s) used as a Sending Application. The primary
// purpose of this segment is for diagnostic use. There may be additional uses per site-specific agreements.
//
// Example:
// MSH
// [{ SFT }]
// ...
type SFT struct {
	HL7                                     HL7Name `hl7:",name=SFT,type=s"`
	SoftwareVendorOrganization              XON     `hl7:"1,required,len=567,display=Software Vendor Organization"`
	SoftwareCertifiedVersionOrReleaseNumber ST      `hl7:"2,required,len=15,display=Software Certified Version or Release Number"`
	SoftwareProductName                     ST      `hl7:"3,required,len=20,display=Software Product Name"`
	SoftwareBinaryID                        ST      `hl7:"4,required,len=20,display=Software Binary ID"`
	SoftwareProductInformation              TX      `hl7:"5,len=1024,display=Software Product Information"`
	SoftwareInstallDate                     DTM     `hl7:"6,len=24,format=YMDHM,display=Software Install Date"`
}

// Substance Identifier
//
// The Substance Identifier segment contains data necessary to identify the substance (e.g., reagents) used in the production
// of analytical test results. The combination of these fields must uniquely identify the substance, i.e., depending on
// the manufacturer all or some fields are required (this is the reason the optionality is 'C' (conditional)). If the analysis
// requires multiple substances, this segment is repeated for each substance. The segment(s) should be attached to the TCD
// segment.
type SID struct {
	HL7                             HL7Name `hl7:",name=SID,type=s"`
	ApplicationMethodIdentifier     *CWE    `hl7:"1,conditional,len=705,display=Application / Method Identifier"`
	SubstanceLotNumber              ST      `hl7:"2,conditional,len=20,display=Substance Lot Number"`
	SubstanceContainerIdentifier    ST      `hl7:"3,conditional,len=200,display=Substance Container Identifier"`
	SubstanceManufacturerIdentifier *CWE    `hl7:"4,conditional,len=705,table=0385,display=Substance Manufacturer Identifier"`
}

// Sterilization Lot Segment
//
// The SLT segment defines requests, responses, and notifications of sterilization lots and supply item descriptions.
// This message may be used for CPD (Central Supply) and OR (Sub-sterile area outside of an Operating Room) mode.
type SLT struct {
	HL7            HL7Name `hl7:",name=SLT,type=s"`
	DeviceNumber   *EI     `hl7:"1,len=8,display=Device Number"`
	DeviceName     ST      `hl7:"2,len=999,display=Device Name"`
	LotNumber      *EI     `hl7:"3,len=11,display=Lot Number"`
	ItemIdentifier *EI     `hl7:"4,len=250,display=Item Identifier"`
	BarCode        ST      `hl7:"5,len=30,display=Bar Code"`
}

// Specimen
//
// The intent of this segment is to describe the characteristics of a specimen. It differs from the intent of the OBR in that
// the OBR addresses order-specific information. It differs from the SAC segment in that the SAC addresses specimen container
// attributes. An advantage afforded by a separate specimen segment is that it generalizes the multiple relationships among
// order(s), results, specimen(s) and specimen container(s).
type SPM struct {
	HL7                        HL7Name `hl7:",name=SPM,type=s"`
	SetID                      SI      `hl7:"1,seq,len=4,display=Set ID - SPM"`
	SpecimenID                 *EIP    `hl7:"2,len=855,display=Specimen ID"`
	SpecimenParentIDs          []EIP   `hl7:"3,len=855,display=Specimen Parent IDs"`
	SpecimenType               CWE     `hl7:"4,required,len=705,table=0487,display=Specimen Type"`
	SpecimenTypeModifier       []CWE   `hl7:"5,len=705,table=0541,display=Specimen Type Modifier"`
	SpecimenAdditives          []CWE   `hl7:"6,len=705,table=0371,display=Specimen Additives"`
	SpecimenCollectionMethod   *CWE    `hl7:"7,len=705,table=0488,display=Specimen Collection Method"`
	SpecimenSourceSite         *CWE    `hl7:"8,len=705,display=Specimen Source Site"`
	SpecimenSourceSiteModifier []CWE   `hl7:"9,len=705,table=0542,display=Specimen Source Site Modifier"`
	SpecimenCollectionSite     *CWE    `hl7:"10,len=705,table=0543,display=Specimen Collection Site"`
	SpecimenRole               []CWE   `hl7:"11,len=705,table=0369,display=Specimen Role"`
	SpecimenCollectionAmount   *CQ     `hl7:"12,len=20,display=Specimen Collection Amount"`
	GroupedSpecimenCount       NM      `hl7:"13,conditional,len=6,display=Grouped Specimen Count"`
	SpecimenDescription        []ST    `hl7:"14,len=250,display=Specimen Description"`
	SpecimenHandlingCode       []CWE   `hl7:"15,len=705,table=0376,display=Specimen Handling Code"`
	SpecimenRiskCode           []CWE   `hl7:"16,len=705,table=0489,display=Specimen Risk Code"`
	SpecimenCollectionDateTime *DR     `hl7:"17,len=49,display=Specimen Collection Date/Time"`
	SpecimenReceivedDateTime   DTM     `hl7:"18,len=24,format=YMDHM,display=Specimen Received Date/Time"`
	SpecimenExpirationDateTime DTM     `hl7:"19,len=24,format=YMDHM,display=Specimen Expiration Date/Time"`
	SpecimenAvailability       ID      `hl7:"20,len=1,table=0136,display=Specimen Availability"`
	SpecimenRejectReason       []CWE   `hl7:"21,len=705,table=0490,display=Specimen Reject Reason"`
	SpecimenQuality            *CWE    `hl7:"22,len=705,table=0491,display=Specimen Quality"`
	SpecimenAppropriateness    *CWE    `hl7:"23,len=705,table=0492,display=Specimen Appropriateness"`
	SpecimenCondition          []CWE   `hl7:"24,len=705,table=0493,display=Specimen Condition"`
	SpecimenCurrentQuantity    *CQ     `hl7:"25,len=722,display=Specimen Current Quantity"`
	NumberOfSpecimenContainers NM      `hl7:"26,len=4,display=Number of Specimen Containers"`
	ContainerType              *CWE    `hl7:"27,len=705,display=Container Type"`
	ContainerCondition         *CWE    `hl7:"28,len=705,table=0544,display=Container Condition"`
	SpecimenChildRole          *CWE    `hl7:"29,len=705,table=0494,display=Specimen Child Role"`
}

// Stored Procedure Request Definition
//
// The SPR segment is used to issue queries using stored procedure calls.  Refer to the functional chapters for the lists of
// HL7-defined stored procedure names, input parameters and output tables.
type SPR struct {
	HL7                     HL7Name `hl7:",name=SPR,type=s"`
	QueryTag                ST      `hl7:"1,len=32,display=Query Tag"`
	QueryResponseFormatCode ID      `hl7:"2,required,len=1,table=0106,display=Query/Response Format Code"`
	StoredProcedureName     CE      `hl7:"3,required,len=250,display=Stored Procedure Name"`
	InputParameterList      []QIP   `hl7:"4,len=256,display=Input Parameter List"`
}

// Staff Identification
//
// The Technical Steward for the STF segment is PA and Personnel Management.
//
// The STF segment can identify any personnel referenced by information systems.  These can be providers, staff, system users,
// and referring agents.  In a network environment, this segment can be used to define personnel to other applications, for
// example, order entry clerks, insurance verification clerks, admission clerks, as well as provider demographics. When
// using the STF and PRA segments in the Staff/Practitioner Master File message, MFE-4-primary key value is used to link all
// the segments pertaining to the same master file entry.  Therefore, in the MFE segment, MFE-4-primary key value must be filled
// in.  Other segments may follow the STF segment to provide data for a particular type of staff member. The PRA segment (practitioner)
// is one such.  It may optionally follow the STF segment in order to add practitioner-specific data. Other segments may be
// defined as needed. When using the segments included in this chapter for other then Staff/Practitioner Master File messages,
// disregard references to MFE-4 - primary key value.
type STF struct {
	HL7                             HL7Name `hl7:",name=STF,type=s"`
	PrimaryKeyValue                 *CWE    `hl7:"1,conditional,len=250,display=Primary Key Value - STF"`
	StaffIdentifierList             []CX    `hl7:"2,len=250,display=Staff Identifier List"`
	StaffName                       []XPN   `hl7:"3,len=250,display=Staff Name"`
	StaffType                       []IS    `hl7:"4,len=2,table=0182,display=Staff Type"`
	AdministrativeSex               IS      `hl7:"5,len=1,table=0001,display=Administrative Sex"`
	DateTimeOfBirth                 DTM     `hl7:"6,len=24,format=YMDHM,display=Date/Time of Birth"`
	ActiveInactiveFlag              ID      `hl7:"7,len=1,table=0183,display=Active/Inactive Flag"`
	Department                      []CWE   `hl7:"8,len=250,table=0184,display=Department"`
	HospitalService                 []CWE   `hl7:"9,len=250,table=0069,display=Hospital Service - STF"`
	Phone                           []XTN   `hl7:"10,len=250,display=Phone"`
	OfficeHomeAddressBirthplace     []XAD   `hl7:"11,len=250,display=Office/Home Address/Birthplace"`
	InstitutionActivationDate       []DIN   `hl7:"12,len=276,display=Institution Activation Date"`
	InstitutionInactivationDate     []DIN   `hl7:"13,len=276,display=Institution Inactivation Date"`
	BackupPersonID                  []CWE   `hl7:"14,len=250,display=Backup Person ID"`
	EMailAddress                    []ST    `hl7:"15,len=40,display=E-Mail Address"`
	PreferredMethodOfContact        *CWE    `hl7:"16,len=705,table=0185,display=Preferred Method of Contact"`
	MaritalStatus                   *CWE    `hl7:"17,len=705,table=0002,display=Marital Status"`
	JobTitle                        ST      `hl7:"18,len=20,display=Job Title"`
	JobCodeClass                    *JCC    `hl7:"19,len=20,display=Job Code/Class"`
	EmploymentStatusCode            *CWE    `hl7:"20,len=250,table=0066,display=Employment Status Code"`
	AdditionalInsuredOnAuto         ID      `hl7:"21,len=1,table=0136,display=Additional Insured on Auto"`
	DriversLicenseNumberStaff       *DLN    `hl7:"22,len=25,display=Driver's License Number - Staff"`
	CopyAutoIns                     ID      `hl7:"23,len=1,table=0136,display=Copy Auto Ins"`
	AutoInsExpires                  DT      `hl7:"24,len=8,format=YMD,display=Auto Ins. Expires"`
	DateLastDMVReview               DT      `hl7:"25,len=8,format=YMD,display=Date Last DMV Review"`
	DateNextDMVReview               DT      `hl7:"26,len=8,format=YMD,display=Date Next DMV Review"`
	Race                            *CWE    `hl7:"27,len=705,table=0005,display=Race"`
	EthnicGroup                     *CWE    `hl7:"28,len=705,table=0189,display=Ethnic Group"`
	ReActivationApprovalIndicator   ID      `hl7:"29,len=1,table=0136,display=Re-activation Approval Indicator"`
	Citizenship                     []CWE   `hl7:"30,len=705,table=0171,display=Citizenship"`
	DateTimeOfDeath                 DTM     `hl7:"31,len=8,format=YMDHM,display=Date/Time of Death"`
	DeathIndicator                  ID      `hl7:"32,len=1,table=0136,display=Death Indicator"`
	InstitutionRelationshipTypeCode *CWE    `hl7:"33,len=250,table=0538,display=Institution Relationship Type Code"`
	InstitutionRelationshipPeriod   *DR     `hl7:"34,len=52,display=Institution Relationship Period"`
	ExpectedReturnDate              DT      `hl7:"35,len=8,format=YMD,display=Expected Return Date"`
	CostCenterCode                  []CWE   `hl7:"36,len=250,table=0539,display=Cost Center Code"`
	GenericClassificationIndicator  ID      `hl7:"37,len=1,table=0136,display=Generic Classification Indicator"`
	InactiveReasonCode              *CWE    `hl7:"38,len=250,table=0540,display=Inactive Reason Code"`
	GenericResourceTypeOrCategory   []CWE   `hl7:"39,len=1,table=0771,display=Generic resource type or category"`
}

// Sterilization Parameter
//
// The STZ segment contains sterilization-specific attributes of a supply item.
type STZ struct {
	HL7                HL7Name `hl7:",name=STZ,type=s"`
	SterilizationType  *CWE    `hl7:"1,len=250,table=0806,display=Sterilization Type"`
	SterilizationCycle *CWE    `hl7:"2,len=250,display=Sterilization Cycle"`
	MaintenanceCycle   *CWE    `hl7:"3,len=250,table=0809,display=Maintenance Cycle"`
	MaintenanceType    *CWE    `hl7:"4,len=250,table=0811,display=Maintenance Type"`
}

// Test Code Configuration
//
// The test (e.g., analyte) code configuration segment is the data necessary to maintain and transmit information concerning
// the test entity codes that are being used throughout the "automated system."
type TCC struct {
	HL7                                   HL7Name `hl7:",name=TCC,type=s"`
	UniversalServiceIdentifier            CWE     `hl7:"1,required,len=705,display=Universal Service Identifier"`
	EquipmentTestApplicationIdentifier    EI      `hl7:"2,required,len=427,display=Equipment Test Application Identifier"`
	SpecimenSource                        SPS     `hl7:"3,len=300,display=Specimen Source"`
	AutoDilutionFactorDefault             *SN     `hl7:"4,len=36,display=Auto-Dilution Factor Default"`
	RerunDilutionFactorDefault            *SN     `hl7:"5,len=36,display=Rerun Dilution Factor Default"`
	PreDilutionFactorDefault              *SN     `hl7:"6,len=36,display=Pre-Dilution Factor Default"`
	EndogenousContentOfPreDilutionDiluent *SN     `hl7:"7,len=36,display=Endogenous Content of Pre-Dilution Diluent"`
	InventoryLimitsWarningLevel           NM      `hl7:"8,len=10,display=Inventory Limits Warning Level"`
	AutomaticRerunAllowed                 ID      `hl7:"9,len=1,table=0136,display=Automatic Rerun Allowed"`
	AutomaticRepeatAllowed                ID      `hl7:"10,len=1,table=0136,display=Automatic Repeat Allowed"`
	AutomaticReflexAllowed                ID      `hl7:"11,len=1,table=0136,display=Automatic Reflex Allowed"`
	EquipmentDynamicRange                 *SN     `hl7:"12,len=36,display=Equipment Dynamic Range"`
	Units                                 *CWE    `hl7:"13,len=705,display=Units"`
	ProcessingType                        *CWE    `hl7:"14,len=705,table=0388,display=Processing Type"`
}

// Test Code Detail
//
// The test code detail segment contains the data necessary to perform operations or calculations, or execute decisions
// by the laboratory automation system, and which are not supported by the original HL7 segments related to orders (ORC, OBR).
// For detail of use see messages of laboratory orders and observations in chapters 4 and 7.
type TCD struct {
	HL7                                   HL7Name `hl7:",name=TCD,type=s"`
	UniversalServiceIdentifier            CWE     `hl7:"1,required,len=705,display=Universal Service Identifier"`
	AutoDilutionFactor                    *SN     `hl7:"2,len=36,display=Auto-Dilution Factor"`
	RerunDilutionFactor                   *SN     `hl7:"3,len=36,display=Rerun Dilution Factor"`
	PreDilutionFactor                     *SN     `hl7:"4,len=36,display=Pre-Dilution Factor"`
	EndogenousContentOfPreDilutionDiluent *SN     `hl7:"5,len=36,display=Endogenous Content of Pre-Dilution Diluent"`
	AutomaticRepeatAllowed                ID      `hl7:"6,len=1,table=0136,display=Automatic Repeat Allowed"`
	ReflexAllowed                         ID      `hl7:"7,len=1,table=0136,display=Reflex Allowed"`
	AnalyteRepeatStatus                   *CWE    `hl7:"8,len=705,table=0389,display=Analyte Repeat Status"`
}

// Timing/Quantity
//
// The TQ1 segment is used to specify the complex timing of events and actions such as those that occur in order management and
// scheduling systems. This segment determines the quantity, frequency, priority and timing of a service. By allowing the
// segment to repeat, it is possible to have service requests that vary the quantity, frequency and priority of a service request
// over time.
type TQ1 struct {
	HL7                  HL7Name `hl7:",name=TQ1,type=s"`
	SetID                SI      `hl7:"1,seq,len=4,display=Set ID - TQ1"`
	Quantity             *CQ     `hl7:"2,len=20,display=Quantity"`
	RepeatPattern        []RPT   `hl7:"3,len=540,display=Repeat Pattern"`
	ExplicitTime         []TM    `hl7:"4,len=20,format=HM,display=Explicit Time"`
	RelativeTimeAndUnits []CQ    `hl7:"5,len=20,display=Relative Time and Units"`
	ServiceDuration      *CQ     `hl7:"6,len=20,display=Service Duration"`
	StartDateTime        DTM     `hl7:"7,len=24,format=YMDHM,display=Start date/time"`
	EndDateTime          DTM     `hl7:"8,len=24,format=YMDHM,display=End date/time"`
	Priority             []CWE   `hl7:"9,len=250,table=0485,display=Priority"`
	ConditionText        TX      `hl7:"10,len=250,display=Condition text"`
	TextInstruction      TX      `hl7:"11,len=250,display=Text instruction"`
	Conjunction          ID      `hl7:"12,conditional,len=10,table=0472,display=Conjunction"`
	OccurrenceDuration   *CQ     `hl7:"13,len=20,display=Occurrence duration"`
	TotalOccurrences     NM      `hl7:"14,len=10,display=Total occurrences"`
}

// Timing/Quantity Relationship
//
// The TQ2 segment is used to form a relationship between the service request the TQ1/TQ2 segments are associated with, and
// other service requests. The TQ2 segment will link the current service request with one or more other service requests.
type TQ2 struct {
	HL7                               HL7Name `hl7:",name=TQ2,type=s"`
	SetID                             SI      `hl7:"1,seq,len=4,display=Set ID - TQ2"`
	SequenceResultsFlag               ID      `hl7:"2,len=1,table=0503,display=Sequence/Results Flag"`
	RelatedPlacerNumber               []EI    `hl7:"3,conditional,len=22,display=Related Placer Number"`
	RelatedFillerNumber               []EI    `hl7:"4,conditional,len=22,display=Related Filler Number"`
	RelatedPlacerGroupNumber          []EI    `hl7:"5,conditional,len=22,display=Related Placer Group Number"`
	SequenceConditionCode             ID      `hl7:"6,conditional,len=2,table=0504,display=Sequence Condition Code"`
	CyclicEntryExitIndicator          ID      `hl7:"7,conditional,len=1,table=0505,display=Cyclic Entry/Exit Indicator"`
	SequenceConditionTimeInterval     *CQ     `hl7:"8,len=20,display=Sequence Condition Time Interval"`
	CyclicGroupMaximumNumberOfRepeats NM      `hl7:"9,len=10,display=Cyclic Group Maximum Number of Repeats"`
	SpecialServiceRequestRelationship ID      `hl7:"10,conditional,len=1,table=0506,display=Special Service Request Relationship"`
}

// Transcription Document Header
//
// The TXA segment contains information specific to a transcribed document but does not include the text of the document.
// The message is created as a result of a document status change. This information updates other healthcare systems and allows
// them to identify reports that are available in the transcription system. By maintaining the TXA message information in
// these systems, the information is available when constructing queries to the transcription system requesting the full
// document text.
type TXA struct {
	HL7                                       HL7Name `hl7:",name=TXA,type=s"`
	SetID                                     SI      `hl7:"1,seq,required,len=4,display=Set ID- TXA"`
	DocumentType                              IS      `hl7:"2,required,len=30,table=0270,display=Document Type"`
	DocumentContentPresentation               ID      `hl7:"3,conditional,len=2,table=0191,display=Document Content Presentation"`
	ActivityDateTime                          DTM     `hl7:"4,len=24,format=YMDHM,display=Activity Date/Time"`
	PrimaryActivityProviderCodeName           []XCN   `hl7:"5,conditional,len=250,display=Primary Activity Provider Code/Name"`
	OriginationDateTime                       DTM     `hl7:"6,len=24,format=YMDHM,display=Origination Date/Time"`
	TranscriptionDateTime                     DTM     `hl7:"7,conditional,len=24,format=YMDHM,display=Transcription Date/Time"`
	EditDateTime                              []DTM   `hl7:"8,len=24,format=YMDHM,display=Edit Date/Time"`
	OriginatorCodeName                        []XCN   `hl7:"9,len=250,display=Originator Code/Name"`
	AssignedDocumentAuthenticator             []XCN   `hl7:"10,len=250,display=Assigned Document Authenticator"`
	TranscriptionistCodeName                  []XCN   `hl7:"11,conditional,len=250,display=Transcriptionist Code/Name"`
	UniqueDocumentNumber                      EI      `hl7:"12,required,len=427,display=Unique Document Number"`
	ParentDocumentNumber                      *EI     `hl7:"13,conditional,len=427,display=Parent Document Number"`
	PlacerOrderNumber                         []EI    `hl7:"14,len=427,display=Placer Order Number"`
	FillerOrderNumber                         *EI     `hl7:"15,len=427,display=Filler Order Number"`
	UniqueDocumentFileName                    ST      `hl7:"16,len=30,display=Unique Document File Name"`
	DocumentCompletionStatus                  ID      `hl7:"17,required,len=2,table=0271,display=Document Completion Status"`
	DocumentConfidentialityStatus             ID      `hl7:"18,len=2,table=0272,display=Document Confidentiality Status"`
	DocumentAvailabilityStatus                ID      `hl7:"19,len=2,table=0273,display=Document Availability Status"`
	DocumentStorageStatus                     ID      `hl7:"20,len=2,table=0275,display=Document Storage Status"`
	DocumentChangeReason                      ST      `hl7:"21,conditional,len=30,display=Document Change Reason"`
	AuthenticationPersonTimeStampSet          []PPN   `hl7:"22,conditional,len=250,display=Authentication Person- Time Stamp (set)"`
	DistributedCopiesCodeAndNameOfRecipientsS []XCN   `hl7:"23,len=250,display=Distributed Copies (Code and Name of Recipients(s) )"`
}

// User Authentication Credential
//
// This optional segment provides user authentication credentials, a Kerberos Service Ticket or SAML assertion, to be used
// by the receiving system to obtain user identification data. Refer to HL7 Table 0615 - User Authentication Credential Type
// Code . It is to be used in when the receiving application system requires the sending system to provide end-user identification
// for accountability or access control in interactive applications. Since user authentication implementations often
// limit the time period for validity of the session authentication credentials, this segment is not intended for use in non-interactive
// applications.
//
// Note: The UAC segment is defined for use within simple protocols, such as MLLP, that do not have user authentication semantics.
// Implementations that use WSDL/SOAP, or similar protocols, to envelope HL7 should employ the user authentication semantics
// and data structures available within the scope of those protocols rather than the UAC segment.
type UAC struct {
	HL7                                  HL7Name `hl7:",name=UAC,type=s"`
	UserAuthenticationCredentialTypeCode CWE     `hl7:"1,required,len=705,table=0615,display=User Authentication Credential Type Code"`
	UserAuthenticationCredential         ED      `hl7:"2,required,len=65536,display=User Authentication Credential"`
}

// Uniform Billing 1
//
// The UB1 segment contains data specific to the United States; other realms may choose to implement using regional code sets.
// Only billing/claims fields that do not exist in other HL7 defined segments appear in this segment. The codes listed as examples
// are not an exhaustive or current list.
//
// Prior to V2.6, this segment was published as a UB-82 specific segment, but has been widely implemented for usage with UB-82
// and/or UB-92 data.  With the publication of the UB-92 (in 1992) and the HIPAA requirements in the US (2004), this segment
// is technically no longer applicable for the UB-82 which is no longer in use.  However, the segment is often used internally
// to message data from a patient registration to a patient accounting system.  It has been 'generalized' in V2.6 for wider
// applicability.
type UB1 struct {
	HL7                     HL7Name `hl7:",name=UB1,type=s"`
	SetID                   SI      `hl7:"1,seq,len=4,display=Set ID - UB1"`
	BloodDeductible         ST      `hl7:"2,display=Blood Deductible"`
	BloodFurnishedPints     NM      `hl7:"3,len=2,display=Blood Furnished-Pints"`
	BloodReplacedPints      NM      `hl7:"4,len=2,display=Blood Replaced-Pints"`
	BloodNotReplacedPints   NM      `hl7:"5,len=2,display=Blood Not Replaced-Pints"`
	CoInsuranceDays         NM      `hl7:"6,len=2,display=Co-Insurance Days"`
	ConditionCode           []IS    `hl7:"7,max=5,len=14,table=0043,display=Condition Code"`
	CoveredDays             NM      `hl7:"8,len=3,display=Covered Days"`
	NonCoveredDays          NM      `hl7:"9,len=3,display=Non Covered Days"`
	ValueAmountCode         []UVC   `hl7:"10,max=8,len=41,display=Value Amount & Code"`
	NumberOfGraceDays       NM      `hl7:"11,len=2,display=Number Of Grace Days"`
	SpecialProgramIndicator *CWE    `hl7:"12,len=250,table=0348,display=Special Program Indicator"`
	PSROURApprovalIndicator *CWE    `hl7:"13,len=250,table=0349,display=PSRO/UR Approval Indicator"`
	PSROURApprovedStayFm    DT      `hl7:"14,len=8,format=YMD,display=PSRO/UR Approved Stay-Fm"`
	PSROURApprovedStayTo    DT      `hl7:"15,len=8,format=YMD,display=PSRO/UR Approved Stay-To"`
	Occurrence              []OCD   `hl7:"16,max=5,len=259,display=Occurrence"`
	OccurrenceSpan          CWE     `hl7:"17,len=250,table=0351,display=Occurrence Span"`
	OccurSpanStartDate      DT      `hl7:"18,len=8,format=YMD,display=Occur Span Start Date"`
	OccurSpanEndDate        DT      `hl7:"19,len=8,format=YMD,display=Occur Span End Date"`
	UB82Locator2            ST      `hl7:"20,len=30,display=UB-82 Locator 2"`
	UB82Locator9            ST      `hl7:"21,len=7,display=UB-82 Locator 9"`
	UB82Locator27           ST      `hl7:"22,len=8,display=UB-82 Locator 27"`
	UB82Locator45           ST      `hl7:"23,len=17,display=UB-82 Locator 45"`
}

// UB92 Data
//
// The UB2 segment contains data necessary to complete UB92 bills specific to the United States; other realms may choose to
// implement using regional code sets. Only UB92 fields that do not exist in other HL7 defined segments appear in this segment.
// For example, Patient Name and Date of Birth are required; they are included in the PID segment and therefore do not appear
// here. UB92 field locators are provided in parentheses ( ). The UB codes listed as examples are not an exhaustive or current
// list; refer to a UB specification for additional information.
type UB2 struct {
	HL7                     HL7Name `hl7:",name=UB2,type=s"`
	SetID                   SI      `hl7:"1,seq,len=4,display=Set ID - UB2"`
	CoInsuranceDays         ST      `hl7:"2,len=3,display=Co-Insurance Days"`
	ConditionCode           []IS    `hl7:"3,max=7,len=2,table=0043,display=Condition Code"`
	CoveredDays             ST      `hl7:"4,len=3,display=Covered Days"`
	NonCoveredDays          ST      `hl7:"5,len=4,display=Non-Covered Days"`
	ValueAmountAndCode      []UVC   `hl7:"6,max=12,len=41,display=Value Amount and Code"`
	OccurrenceCodeAndDate   []OCD   `hl7:"7,max=8,len=259,display=Occurrence Code and Date"`
	OccurrenceSpanCodeDates []OSP   `hl7:"8,max=2,len=268,display=Occurrence Span Code/Dates"`
	UB92Locator2State       []ST    `hl7:"9,max=2,len=29,display=UB92 Locator 2 (State)"`
	UB92Locator11State      []ST    `hl7:"10,max=2,len=12,display=UB92 Locator 11 (State)"`
	UB92Locator31National   ST      `hl7:"11,len=5,display=UB92 Locator 31 (National)"`
	DocumentControlNumber   []ST    `hl7:"12,max=3,len=23,display=Document Control Number"`
	UB92Locator49National   []ST    `hl7:"13,max=23,len=4,display=UB92 Locator 49 (National)"`
	UB92Locator56State      []ST    `hl7:"14,max=5,len=14,display=UB92 Locator 56 (State)"`
	UB92Locator57National   ST      `hl7:"15,len=27,display=UB92 Locator 57 (National)"`
	UB92Locator78State      []ST    `hl7:"16,max=2,len=2,display=UB92 Locator 78 (State)"`
	SpecialVisitCount       NM      `hl7:"17,len=3,display=Special Visit Count"`
}

// Results/update Definition
//
// The URD segment is used in sending unsolicited updates about orders and results.  Its purpose is similar to that of the QRD
// segment, but from the results/unsolicited update point of view.  Some of the fields have parallels in the QRD segment.
//
// This segment is retained for backward compatibility only as of V2.4.
type URD struct {
	HL7                     HL7Name `hl7:",name=URD,type=s"`
	RUDateTime              DTM     `hl7:"1,len=24,format=YMDHM,display=R/U Date/Time"`
	ReportPriority          ID      `hl7:"2,len=1,table=0109,display=Report Priority"`
	RUWhoSubjectDefinition  []XCN   `hl7:"3,required,len=250,display=R/U Who Subject Definition"`
	RUWhatSubjectDefinition []CWE   `hl7:"4,len=250,table=0048,display=R/U What Subject Definition"`
	RUWhatDepartmentCode    []CWE   `hl7:"5,len=250,display=R/U What Department Code"`
	RUDisplayPrintLocations []ST    `hl7:"6,len=20,display=R/U Display/Print Locations"`
	RUResultsLevel          ID      `hl7:"7,len=1,table=0108,display=R/U Results Level"`
}

// Unsolicited Selection
//
// This section is retained for backward compatibility only as of V2.4.
//
// The URS segment is identical with the QRF segment, except that if the name of any field contains Query (of QRY), this word
// has been changed to Results (see URS-5-R/U other results subject definition).
type URS struct {
	HL7                             HL7Name `hl7:",name=URS,type=s"`
	RUWhereSubjectDefinition        []ST    `hl7:"1,required,len=20,display=R/U Where Subject Definition"`
	RUWhenDataStartDateTime         DTM     `hl7:"2,len=24,format=YMDHM,display=R/U When Data Start Date/Time"`
	RUWhenDataEndDateTime           DTM     `hl7:"3,len=24,format=YMDHM,display=R/U When Data End Date/Time"`
	RUWhatUserQualifier             []ST    `hl7:"4,len=20,display=R/U What User Qualifier"`
	RUOtherResultsSubjectDefinition []ST    `hl7:"5,len=20,display=R/U Other Results Subject Definition"`
	RUWhichDateTimeQualifier        []ID    `hl7:"6,len=12,table=0156,display=R/U Which Date/Time Qualifier"`
	RUWhichDateTimeStatusQualifier  []ID    `hl7:"7,len=12,table=0157,display=R/U Which Date/Time Status Qualifier"`
	RUDateTimeSelectionQualifier    []ID    `hl7:"8,len=12,table=0158,display=R/U Date/Time Selection Qualifier"`
	RUQuantityTimingQualifier       TQ      `hl7:"9,len=60,display=R/U Quantity/Timing Qualifier"`
}

// Variance
//
// The variance segment contains the data necessary to describe differences that may have occurred at the time when a healthcare
// event was documented.
type VAR struct {
	HL7                    HL7Name `hl7:",name=VAR,type=s"`
	VarianceInstanceID     EI      `hl7:"1,required,len=60,display=Variance Instance ID"`
	DocumentedDateTime     DTM     `hl7:"2,required,len=24,format=YMDHM,display=Documented Date/Time"`
	StatedVarianceDateTime DTM     `hl7:"3,len=24,format=YMDHM,display=Stated Variance Date/Time"`
	VarianceOriginator     []XCN   `hl7:"4,len=250,display=Variance Originator"`
	VarianceClassification *CWE    `hl7:"5,len=705,display=Variance Classification"`
	VarianceDescription    []ST    `hl7:"6,len=512,display=Variance Description"`
}

// Purchasing Vendor
//
// This segment contains purchasing vendors that supply the inventory supply item specified in the ITM segment.
type VND struct {
	HL7                    HL7Name `hl7:",name=VND,type=s"`
	SetID                  SI      `hl7:"1,seq,required,len=2,display=Set Id – VND"`
	VendorIdentifier       EI      `hl7:"2,required,len=250,display=Vendor Identifier"`
	VendorName             ST      `hl7:"3,len=999,display=Vendor Name"`
	VendorCatalogNumber    *EI     `hl7:"4,len=20,display=Vendor Catalog Number"`
	PrimaryVendorIndicator *CNE    `hl7:"5,len=1,table=0532,display=Primary Vendor Indicator"`
}

// Virtual Table Query Request
//
// The VTQ segment is used to define queries that are responded to with the Tabular Data Message (TBR).  The VTQ query message
// is an alternate method to the EQQ query message that some systems may find easier to implement, due to its use of HL7 delimiters
// that separate components of the selection definition, and its limited selection criteria.  Queries involving complex
// selection criteria (nested operators, etc.) may need to be formatted as an EQL segment.
//
// As with the other query methods, the functional chapters define specific queries supported as VTQ messages.  Refer to these
// functional chapters for the lists of HL7-defined Virtual Tables, selection lists and criteria
type VTQ struct {
	HL7                     HL7Name `hl7:",name=VTQ,type=s"`
	QueryTag                ST      `hl7:"1,len=32,display=Query Tag"`
	QueryResponseFormatCode ID      `hl7:"2,required,len=1,table=0106,display=Query/Response Format Code"`
	VTQueryName             CE      `hl7:"3,required,len=250,display=VT Query Name"`
	VirtualTableName        CE      `hl7:"4,required,len=250,display=Virtual Table Name"`
	SelectionCriteria       []QSC   `hl7:"5,len=256,display=Selection Criteria"`
}
