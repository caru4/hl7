// Code generated by "{{.Command}}"; DO NOT EDIT.

package {{.PackageName}}

import (
	"reflect"
	"fmt"
)

{{range .Segment}}

// {{.LongName|comment}}{{if .Description}}
//
// {{.Description|comment}}{{end}}
type {{.ID}} struct {
	HL7 HL7Name `hl7:",name={{.SegmentID}},type=s"` {{range .Fields}}
		{{.ID}} {{.|typeprefix}}{{.DataType}} `hl7:"{{.|tag}}"` {{end}}
}

	{{$mt := .|messageType}}
	{{if $mt}}
	// MessageStructureID returns the code for the message structure.
	// Implements the interface for decoders.
	func (s {{.ID}}) MessageStructureID () string {
		return s.{{$mt}}.MessageStructureID()
	}
	{{end}}

{{- if eq .ID "OBX"}}
func (v OBX) ChildVaries(dtReg map[string]any) (reflect.Value, error) {
	vt, ok := dtReg[v.ValueType]
	if !ok {
		return reflect.Value{}, fmt.Errorf("unknown OBX data type %q", v.ValueType)
	}

	rt := reflect.TypeOf(vt)
	rv := reflect.New(rt)
	return rv.Elem(), nil
}{{end -}}
{{end}}