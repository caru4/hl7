// Code generated by "{{.Command}}"; DO NOT EDIT.

package {{.PackageName}}

import "time"

{{range .DataType}}

// {{.Name|comment}}{{if .Description}}
//
// {{.Description|comment}}{{end}}
{{if eq .ID "DT"}}type DT = time.Time{{continue}}{{end -}}
{{if eq .ID "TM"}}type TM = time.Time{{continue}}{{end -}}
{{if eq .ID "TS"}}type TS = time.Time{{continue}}{{end -}}
{{if eq .ID "DTM"}}type DTM = time.Time{{continue}}{{end -}}
{{if eq .ID "VARIES"}}type VARIES any{{continue}}{{end -}}
{{if eq .ID "FN"}}type FN = string{{continue}}{{end -}}
{{if not .Fields}}type {{.ID}} = string{{continue}}{{end -}}
type {{.ID}} struct {
	HL7 HL7Name `hl7:",name={{.ID}},len={{.Length}},type=d"` {{range .Fields}}
		{{.ID}} {{.|typeprefix}}{{.DataType}} `hl7:"{{.|tag}}"` {{end}}
}
{{if eq .ID "MSG"}}
	func (d MSG) MessageStructureID() string {
		if len(d.MessageStructure) > 0 {
			return d.MessageStructure
		}
		{{- if hasField "MessageCode" .Fields}}
			if len(d.TriggerEvent) == 0 {
				return d.MessageCode
			}
			return d.MessageCode + "_" + d.TriggerEvent;
		{{end -}}
		{{- if hasField "MessageType" .Fields}}
			if len(d.TriggerEvent) == 0 {
				return d.MessageType
			}
			return d.MessageType + "_" + d.TriggerEvent;
		{{end -}}
	}
{{end}}
{{if eq .ID "CM_MSG"}}
	func (d CM_MSG) MessageStructureID() string {
		if len(d.TriggerEvent) == 0 {
			return d.MessageType
		}
		return d.MessageType + "_" + d.TriggerEvent
	}
{{end}}

{{end}}