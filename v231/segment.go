// Code generated by "hl7fetch -pkgdir v231 -root ./genjson -version 2.3.1"; DO NOT EDIT.

package v231

// Accident segment
//
// The ACC segment contains patient information relative to an accident in which the patient has been involved.
type ACC struct {
	HL7                         HL7Name `hl7:",name=ACC,type=s"`
	AccidentDateTime            TS      `hl7:"1,len=26,format=YMDHMS,display=Accident Date/Time"`
	AccidentCode                *CE     `hl7:"2,len=60,table=0050,display=Accident Code"`
	AccidentLocation            ST      `hl7:"3,len=25,display=Accident Location"`
	AutoAccidentState           *CE     `hl7:"4,len=60,table=0347,display=Auto Accident State"`
	AccidentJobRelatedIndicator ID      `hl7:"5,len=1,table=0136,display=Accident Job Related Indicator"`
	AccidentDeathIndicator      ID      `hl7:"6,len=12,table=0136,display=Accident Death Indicator"`
}

// Addendum segment
//
// The ADD segment is used to define the continuation of the prior segment in a continuation message. See Section 2.23.2, Continuation messages and segments, for details.
type ADD struct {
	HL7                         HL7Name `hl7:",name=ADD,type=s"`
	AddendumContinuationPointer ST      `hl7:"1,len=65536,display=Addendum Continuation Pointer"`
}

// Appointment information - general resource segment
//
// The AIG segment contains information about various kinds of resources (other than those with specifically defined segments in this chapter) that can be scheduled. Resources included in a transaction using this segment are assumed to be controlled by a schedule on a schedule filler application. Resources not controlled by a schedule are not identified on a schedule request using this segment. Resources described by this segment are general kinds of resources, such as equipment, that are identified with a simple identification code.
type AIG struct {
	HL7                      HL7Name `hl7:",name=AIG,type=s"`
	SetID                    SI      `hl7:"1,seq,required,len=4,display=Set ID - AIG"`
	SegmentActionCode        ID      `hl7:"2,conditional,len=3,table=0206,display=Segment Action Code"`
	ResourceID               *CE     `hl7:"3,conditional,len=200,display=Resource ID"`
	ResourceType             CE      `hl7:"4,required,len=200,display=Resource Type"`
	ResourceGroup            []CE    `hl7:"5,len=200,display=Resource Group"`
	ResourceQuantity         NM      `hl7:"6,len=5,display=Resource Quantity"`
	ResourceQuantityUnits    *CE     `hl7:"7,len=200,display=Resource Quantity Units"`
	StartDateTime            TS      `hl7:"8,conditional,len=26,format=YMDHMS,display=Start Date/Time"`
	StartDateTimeOffset      NM      `hl7:"9,conditional,len=20,display=Start Date/Time Offset"`
	StartDateTimeOffsetUnits *CE     `hl7:"10,conditional,len=200,display=Start Date/Time Offset Units"`
	Duration                 NM      `hl7:"11,len=20,display=Duration"`
	DurationUnits            *CE     `hl7:"12,len=200,display=Duration Units"`
	AllowSubstitutionCode    IS      `hl7:"13,conditional,len=10,table=0279,display=Allow Substitution Code"`
	FillerStatusCode         *CE     `hl7:"14,conditional,len=200,table=0278,display=Filler Status Code"`
}

// Appointment information - location resource segment
//
// The AIL segment contains information about location resources (meeting rooms, operating rooms, examination rooms, or other locations) that can be scheduled. Resources included in a transaction using this segment are assumed to be controlled by a schedule on a schedule filler application. Resources not controlled by a schedule are not identified on a schedule request using this segment. Location resources are identified with this specific segment because of the specific encoding of locations used by the HL7 specification.
type AIL struct {
	HL7                      HL7Name `hl7:",name=AIL,type=s"`
	SetID                    SI      `hl7:"1,seq,required,len=4,display=Set ID - AIL"`
	SegmentActionCode        ID      `hl7:"2,conditional,len=3,table=0206,display=Segment Action Code"`
	LocationResourceID       *PL     `hl7:"3,conditional,len=80,display=Location Resource ID"`
	LocationType             CE      `hl7:"4,required,len=200,display=Location Type-AIL"`
	LocationGroup            *CE     `hl7:"5,len=200,display=Location Group"`
	StartDateTime            TS      `hl7:"6,conditional,len=26,format=YMDHMS,display=Start Date/Time"`
	StartDateTimeOffset      NM      `hl7:"7,conditional,len=20,display=Start Date/Time Offset"`
	StartDateTimeOffsetUnits *CE     `hl7:"8,conditional,len=200,display=Start Date/Time Offset Units"`
	Duration                 NM      `hl7:"9,len=20,display=Duration"`
	DurationUnits            *CE     `hl7:"10,len=200,display=Duration Units"`
	AllowSubstitutionCode    IS      `hl7:"11,conditional,len=10,table=0279,display=Allow Substitution Code"`
	FillerStatusCode         *CE     `hl7:"12,conditional,len=200,table=0278,display=Filler Status Code"`
}

// Appointment information - personnel resource segment
//
// The AIP segment contains information about the personnel types that can be scheduled. Personnel included in a transaction using this segment are assumed to be controlled by a schedule on a schedule filler application. Personnel not controlled by a schedule are not identified on a schedule request using this segment. The kinds of personnel described on this segment include any healthcare provider in the institution controlled by a schedule (for example: technicians, physicians, nurses, surgeons, anesthesiologists, or CRNAs).
type AIP struct {
	HL7                      HL7Name `hl7:",name=AIP,type=s"`
	SetID                    SI      `hl7:"1,seq,required,len=4,display=Set ID - AIP"`
	SegmentActionCode        ID      `hl7:"2,conditional,len=3,table=0206,display=Segment Action Code"`
	PersonnelResourceID      []XCN   `hl7:"3,conditional,len=80,display=Personnel Resource ID"`
	ResourceRole             CE      `hl7:"4,required,len=200,display=Resource Role"`
	ResourceGroup            *CE     `hl7:"5,len=200,display=Resource Group"`
	StartDateTime            TS      `hl7:"6,conditional,len=26,format=YMDHMS,display=Start Date/Time"`
	StartDateTimeOffset      NM      `hl7:"7,conditional,len=20,display=Start Date/Time Offset"`
	StartDateTimeOffsetUnits *CE     `hl7:"8,conditional,len=200,display=Start Date/Time Offset Units"`
	Duration                 NM      `hl7:"9,len=20,display=Duration"`
	DurationUnits            *CE     `hl7:"10,len=200,display=Duration Units"`
	AllowSubstitutionCode    IS      `hl7:"11,conditional,len=10,table=0279,display=Allow Substitution Code"`
	FillerStatusCode         *CE     `hl7:"12,conditional,len=200,table=0278,display=Filler Status Code"`
}

// Appointment information - service segment
//
// The AIS segment contains information about various kinds of services that can be scheduled. Services included in a transaction using this segment are assumed to be controlled by a schedule on a schedule filler application. Services not controlled by a schedule are not identified on a schedule request using this segment.
type AIS struct {
	HL7                      HL7Name `hl7:",name=AIS,type=s"`
	SetID                    SI      `hl7:"1,seq,required,len=4,display=Set ID - AIS"`
	SegmentActionCode        ID      `hl7:"2,conditional,len=3,table=0206,display=Segment Action Code"`
	UniversalServiceID       CE      `hl7:"3,required,len=200,display=Universal Service ID"`
	StartDateTime            TS      `hl7:"4,conditional,len=26,format=YMDHMS,display=Start Date/Time"`
	StartDateTimeOffset      NM      `hl7:"5,conditional,len=20,display=Start Date/Time Offset"`
	StartDateTimeOffsetUnits *CE     `hl7:"6,conditional,len=200,display=Start Date/Time Offset Units"`
	Duration                 NM      `hl7:"7,len=20,display=Duration"`
	DurationUnits            *CE     `hl7:"8,len=200,display=Duration Units"`
	AllowSubstitutionCode    IS      `hl7:"9,conditional,len=10,table=0279,display=Allow Substitution Code"`
	FillerStatusCode         *CE     `hl7:"10,conditional,len=200,table=0278,display=Filler Status Code"`
}

// Patient allergy information segment
//
// The AL1 segment contains patient allergy information of various types. Most of this information will be derived from user-defined tables. Each AL1 segment describes a single patient allergy.
type AL1 struct {
	HL7                            HL7Name `hl7:",name=AL1,type=s"`
	SetID                          SI      `hl7:"1,seq,required,len=4,display=Set ID - AL1"`
	AllergyType                    IS      `hl7:"2,len=2,table=0127,display=Allergy Type"`
	AllergyCodeMnemonicDescription CE      `hl7:"3,required,len=60,display=Allergy Code/Mnemonic/Description"`
	AllergySeverity                IS      `hl7:"4,len=2,table=0128,display=Allergy Severity"`
	AllergyReaction                []ST    `hl7:"5,len=15,display=Allergy Reaction"`
	IdentificationDate             DT      `hl7:"6,len=8,format=YMD,display=Identification Date"`
}

// Appointment preferences segment
//
// The APR segment contains parameters and preference specifications used for requesting appointments in the SRM message. It allows placer applications to provide coded parameters and preference indicators to the filler application, to help determine when a requested appointment should be scheduled. An APR segment can be provided in conjunction with either the ARQ segment or any of the service and resource segments (AIG, AIS, AIP, and AIL). If an APR segment appears in conjunction with an ARQ segment, its parameters and preference indicators pertain to the schedule request as a whole. If the APR segment appears with any of the service and resource segments, then its parameters and preferences apply only to the immediately preceding service or resource.
type APR struct {
	HL7                       HL7Name `hl7:",name=APR,type=s"`
	TimeSelectionCriteria     []SCV   `hl7:"1,len=80,display=Time Selection Criteria"`
	ResourceSelectionCriteria []SCV   `hl7:"2,len=80,display=Resource Selection Criteria"`
	LocationSelectionCriteria []SCV   `hl7:"3,len=80,display=Location Selection Criteria"`
	SlotSpacingCriteria       NM      `hl7:"4,len=5,display=Slot Spacing Criteria"`
	FillerOverrideCriteria    []SCV   `hl7:"5,len=80,display=Filler Override Criteria"`
}

// Appointment request segment
//
// The ARQ segment defines a request for the booking of an appointment. It is used in transactions sent from an application acting in the role of a placer.
type ARQ struct {
	HL7                         HL7Name `hl7:",name=ARQ,type=s"`
	PlacerAppointmentID         EI      `hl7:"1,required,len=75,display=Placer Appointment ID"`
	FillerAppointmentID         *EI     `hl7:"2,conditional,len=75,display=Filler Appointment ID"`
	OccurrenceNumber            NM      `hl7:"3,conditional,len=5,display=Occurrence Number"`
	PlacerGroupNumber           *EI     `hl7:"4,len=22,display=Placer Group Number"`
	ScheduleID                  *CE     `hl7:"5,len=200,display=Schedule ID"`
	RequestEventReason          *CE     `hl7:"6,len=200,display=Request Event Reason"`
	AppointmentReason           *CE     `hl7:"7,len=200,table=0276,display=Appointment Reason"`
	AppointmentType             *CE     `hl7:"8,len=200,table=0277,display=Appointment Type"`
	AppointmentDuration         NM      `hl7:"9,len=20,display=Appointment Duration"`
	AppointmentDurationUnits    *CE     `hl7:"10,len=200,display=Appointment Duration Units"`
	RequestedStartDateTimeRange []DR    `hl7:"11,len=53,display=Requested Start Date/Time Range"`
	Priority                    ST      `hl7:"12,len=5,display=Priority-ARQ"`
	RepeatingInterval           *RI     `hl7:"13,len=100,display=Repeating Interval"`
	RepeatingIntervalDuration   ST      `hl7:"14,len=5,display=Repeating Interval Duration"`
	PlacerContactPerson         []XCN   `hl7:"15,required,len=48,display=Placer Contact Person"`
	PlacerContactPhoneNumber    []XTN   `hl7:"16,len=40,display=Placer Contact Phone Number"`
	PlacerContactAddress        []XAD   `hl7:"17,len=106,display=Placer Contact Address"`
	PlacerContactLocation       *PL     `hl7:"18,len=80,display=Placer Contact Location"`
	EnteredByPerson             []XCN   `hl7:"19,required,len=48,display=Entered by Person"`
	EnteredByPhoneNumber        []XTN   `hl7:"20,len=40,display=Entered by Phone Number"`
	EnteredByLocation           *PL     `hl7:"21,len=80,display=Entered by Location"`
	ParentPlacerAppointmentID   *EI     `hl7:"22,len=75,display=Parent Placer Appointment ID"`
	ParentFillerAppointmentID   *EI     `hl7:"23,len=75,display=Parent Filler Appointment ID"`
}

// Authorization Information
//
// This segment represents an authorization or a pre-authorization for a referred procedure or requested service by the payor covering the patient's health care.
type AUT struct {
	HL7                          HL7Name `hl7:",name=AUT,type=s"`
	AuthorizingPayorPlanID       *CE     `hl7:"1,len=200,table=0072,display=Authorizing Payor- Plan ID"`
	AuthorizingPayorCompanyID    CE      `hl7:"2,required,len=200,table=0285,display=Authorizing Payor- Company ID"`
	AuthorizingPayorCompanyName  ST      `hl7:"3,len=45,display=Authorizing Payor- Company Name"`
	AuthorizationEffectiveDate   TS      `hl7:"4,len=26,format=YMDHMS,display=Authorization Effective Date"`
	AuthorizationExpirationDate  TS      `hl7:"5,len=26,format=YMDHMS,display=Authorization Expiration Date"`
	AuthorizationIdentifier      *EI     `hl7:"6,conditional,len=30,display=Authorization Identifier"`
	ReimbursementLimit           *CP     `hl7:"7,len=25,display=Reimbursement Limit"`
	RequestedNumberOfTreatments  NM      `hl7:"8,len=2,display=Requested Number of Treatments"`
	AuthorizedNumberOfTreatments NM      `hl7:"9,len=2,display=Authorized Number of Treatments"`
	ProcessDate                  TS      `hl7:"10,len=26,format=YMDHMS,display=Process Date"`
}

// Batch Header Segment
//
// The BHS segment defines the start of a batch.
type BHS struct {
	HL7                       HL7Name `hl7:",name=BHS,type=s"`
	BatchFieldSeparator       ST      `hl7:"1,required,len=1,display=Batch Field Separator"`
	BatchEncodingCharacters   ST      `hl7:"2,required,len=3,display=Batch Encoding Characters"`
	BatchSendingApplication   ST      `hl7:"3,len=15,display=Batch Sending Application"`
	BatchSendingFacility      ST      `hl7:"4,len=20,display=Batch Sending Facility"`
	BatchReceivingApplication ST      `hl7:"5,len=15,display=Batch Receiving Application"`
	BatchReceivingFacility    ST      `hl7:"6,len=20,display=Batch Receiving Facility"`
	BatchCreationDateTime     TS      `hl7:"7,len=26,format=YMDHMS,display=Batch Creation Date/Time"`
	BatchSecurity             ST      `hl7:"8,len=40,display=Batch Security"`
	BatchNameIDType           ST      `hl7:"9,len=20,display=Batch Name/ID/Type"`
	BatchComment              ST      `hl7:"10,len=80,display=Batch Comment"`
	BatchControlID            ST      `hl7:"11,len=20,display=Batch Control ID"`
	ReferenceBatchControlID   ST      `hl7:"12,len=20,display=Reference Batch Control ID"`
}

// Billing segment
//
// The BLG segment is used to provide billing information, on the ordered service, to the filling application.
type BLG struct {
	HL7          HL7Name `hl7:",name=BLG,type=s"`
	WhenToCharge *CCD    `hl7:"1,len=40,display=When to Charge"`
	ChargeType   ID      `hl7:"2,len=50,table=0122,display=Charge Type"`
	AccountID    *CX     `hl7:"3,len=100,display=Account ID"`
}

// Batch Trailer Segment
//
// The BTS segment defines the end of a batch.
type BTS struct {
	HL7               HL7Name `hl7:",name=BTS,type=s"`
	BatchMessageCount ST      `hl7:"1,len=10,display=Batch Message Count"`
	BatchComment      ST      `hl7:"2,len=80,display=Batch Comment"`
	BatchTotals       []NM    `hl7:"3,len=100,display=Batch Totals"`
}

// Charge description master segment
//
// The CDM segment contains the fields for identifying anything which is charged to patient accounts, including procedures, services, supplies. It is intended to be used to maintain a list of valid chargeable utilization items. Its purpose is to keep billing codes synchronized between HIS, Patient Accounting, and other departmental systems. It is not intended to completely support materials management, inventory, or complex pricing structures for which additional complex fields would be required. Given an identifying charge code, the associated fields in the charge description master file will provide basic pricing and billing data. All the additional information necessary for patient accounting systems to do billing and claims is not intended to be included in this segment; those should be part of insurance or billing profile tables.
type CDM struct {
	HL7                          HL7Name `hl7:",name=CDM,type=s"`
	PrimaryKeyValue              CE      `hl7:"1,required,len=200,table=0132,display=Primary Key Value - CDM"`
	ChargeCodeAlias              []CE    `hl7:"2,len=200,display=Charge Code Alias"`
	ChargeDescriptionShort       ST      `hl7:"3,required,len=20,display=Charge Description Short"`
	ChargeDescriptionLong        ST      `hl7:"4,len=250,display=Charge Description Long"`
	DescriptionOverrideIndicator IS      `hl7:"5,len=1,table=0268,display=Description Override Indicator"`
	ExplodingCharges             []CE    `hl7:"6,len=60,display=Exploding Charges"`
	ProcedureCode                []CE    `hl7:"7,len=80,table=0088,display=Procedure Code"`
	ActiveInactiveFlag           ID      `hl7:"8,len=1,table=0183,display=Active/Inactive Flag"`
	InventoryNumber              []CE    `hl7:"9,len=60,display=Inventory Number"`
	ResourceLoad                 NM      `hl7:"10,len=12,display=Resource Load"`
	ContractNumber               []CK    `hl7:"11,len=200,display=Contract Number"`
	ContractOrganization         []XON   `hl7:"12,len=200,display=Contract Organization"`
	RoomFeeIndicator             ID      `hl7:"13,len=1,table=0136,display=Room Fee Indicator"`
}

// Clinical study master segment
//
// The Clinical Study Master (CM0) segment contains the information about the study itself. The sending application study number for each patient is sent in the CSR segment. The optional CM0 enables information about the study at the sending application that may be useful to the receiving systems. All of the fields in the segment describe the study status at the sending facility unless otherwise agreed upon.
type CM0 struct {
	HL7                 HL7Name `hl7:",name=CM0,type=s"`
	SetID               SI      `hl7:"1,seq,len=4,display=Set ID - CM0"`
	SponsorStudyID      EI      `hl7:"2,required,len=60,display=Sponsor Study ID"`
	AlternateStudyID    []EI    `hl7:"3,max=3,len=60,display=Alternate Study ID"`
	TitleOfStudy        ST      `hl7:"4,required,len=300,display=Title of Study"`
	ChairmanOfStudy     []XCN   `hl7:"5,len=60,display=Chairman of Study"`
	LastIRBApprovalDate DT      `hl7:"6,len=8,format=YMD,display=Last IRB Approval Date"`
	TotalAccrualToDate  NM      `hl7:"7,len=8,display=Total Accrual to Date"`
	LastAccrualDate     DT      `hl7:"8,len=8,format=YMD,display=Last Accrual Date"`
	ContactForStudy     []XCN   `hl7:"9,len=60,display=Contact for Study"`
	ContactsTelNumber   *XTN    `hl7:"10,len=40,display=Contact's Tel. Number"`
	ContactsAddress     []XAD   `hl7:"11,len=100,display=Contact's Address"`
}

// Clinical study phase master segment
//
// Each Clinical Study Phase Master (CM1) segment contains the information about one phase of a study identified in the preceding CM0. This is an optional structure to be used if the study has more than one treatment or evaluation phase within it. The identification of study phases that the patient enters are sent in the CSP segment: sequence 2. The CM1 segment describes the phase in general for the receiving system.
type CM1 struct {
	HL7                     HL7Name `hl7:",name=CM1,type=s"`
	SetID                   SI      `hl7:"1,seq,required,len=4,display=Set ID - CM1"`
	StudyPhaseIdentifier    CE      `hl7:"2,required,len=60,display=Study Phase Identifier"`
	DescriptionOfStudyPhase ST      `hl7:"3,required,len=300,display=Description of Study Phase"`
}

// Clinical study schedule master segment
//
// The Clinical Study Schedule Master (CM2) contains the information about the scheduled time points for study or phase-related treatment or evaluation events. The fact that a patient has data satisfying a scheduled time point is sent in the CSS segment, sequence 2. The CM2 segment describes the scheduled time points in general.
type CM2 struct {
	HL7                          HL7Name `hl7:",name=CM2,type=s"`
	SetID                        SI      `hl7:"1,seq,len=4,display=Set ID - CM2"`
	ScheduledTimePoint           CE      `hl7:"2,required,len=60,display=Scheduled Time Point"`
	DescriptionOfTimePoint       ST      `hl7:"3,len=300,display=Description of Time Point"`
	EventsScheduledThisTimePoint []CE    `hl7:"4,required,max=200,len=60,display=Events Scheduled This Time Point"`
}

// Clinical study phase segment
//
// The CSP segment contains information on a patient's status for a particular phase of the study. This segment is optional and is useful when a study has different evaluation intervals within it. (See Section 7.5.1.2, 'Phase of a clinical trial.' The CSP segment is implemented on a study-specific basis for messaging purposes. The fact that the patient has entered a phase of the study that represents a certain treatment approach may need to be messaged to other systems, like pharmacy, nursing, or order entry. It is also important to sponsors and data management centers for tracking patient progress through the study and monitoring the data schedule defined for each phase. It may subsume OBR and OBX segments that follow it to indicate that these data describe the phase.
type CSP struct {
	HL7                     HL7Name `hl7:",name=CSP,type=s"`
	StudyPhaseIdentifier    CE      `hl7:"1,required,len=60,display=Study Phase Identifier"`
	DateTimeStudyPhaseBegan TS      `hl7:"2,required,len=26,format=YMDHMS,display=Date/time Study Phase Began"`
	DateTimeStudyPhaseEnded TS      `hl7:"3,len=26,format=YMDHMS,display=Date/time Study Phase Ended"`
	StudyPhaseEvaluability  *CE     `hl7:"4,conditional,len=60,display=Study Phase Evaluability"`
}

// Clinical study registration segment
//
// The CSR segment will contain fundamental administrative and regulatory information required to document a patient's enrollment on a clinical trial. This segment is all that is required if one needs to message another system that an enrollment has taken place, i.e., from clinical trials to pharmacy, accounting, or order entry systems. The CSR segment may also be used to identify that OBR, OBX, RXA, and RXR segments that follow represent data applicable to the identified study.
type CSR struct {
	HL7                                HL7Name `hl7:",name=CSR,type=s"`
	SponsorStudyID                     EI      `hl7:"1,required,len=60,display=Sponsor Study ID"`
	AlternateStudyID                   *EI     `hl7:"2,len=60,display=Alternate Study ID"`
	InstitutionRegisteringThePatient   *CE     `hl7:"3,len=60,display=Institution Registering the Patient"`
	SponsorPatientID                   CX      `hl7:"4,required,len=30,display=Sponsor Patient ID"`
	AlternatePatientID                 *CX     `hl7:"5,len=30,display=Alternate Patient ID - CSR"`
	DateTimeOfPatientStudyRegistration TS      `hl7:"6,required,len=26,format=YMDHMS,display=Date/Time Of Patient Study Registration"`
	PersonPerformingStudyRegistration  []XCN   `hl7:"7,len=60,display=Person Performing Study Registration"`
	StudyAuthorizingProvider           []XCN   `hl7:"8,required,len=60,display=Study Authorizing Provider"`
	DateTimePatientStudyConsentSigned  TS      `hl7:"9,conditional,len=26,format=YMDHMS,display=Date/time Patient Study Consent Signed"`
	PatientStudyEligibilityStatus      *CE     `hl7:"10,conditional,len=60,display=Patient Study Eligibility Status"`
	StudyRandomizationDateTime         []TS    `hl7:"11,max=3,len=26,format=YMDHMS,display=Study Randomization Date/time"`
	RandomizedStudyArm                 []CE    `hl7:"12,max=3,len=200,display=Randomized Study Arm"`
	StratumForStudyRandomization       []CE    `hl7:"13,max=3,len=200,display=Stratum for Study Randomization"`
	PatientEvaluabilityStatus          *CE     `hl7:"14,conditional,len=60,display=Patient Evaluability Status"`
	DateTimeEndedStudy                 TS      `hl7:"15,conditional,len=26,format=YMDHMS,display=Date/time Ended Study"`
	ReasonEndedStudy                   *CE     `hl7:"16,conditional,len=60,display=Reason Ended Study"`
}

// Clinical study data schedule segment
//
// The Clinical Study Data Schedule (CSS) segment is optional depending on whether messaging of study data needs to be linked to the scheduled data time points for the study. (See Section 7.5.1.3, 'data schedule.') The CSS segment enables communication of data schedules and adherence that ranges from the basic to the elaborate. Use of the segment must be planned for each implementation. Each CSS segment will subsume observation and drug administration segments that follow, indicating that they satisfy this scheduled time point.
type CSS struct {
	HL7                            HL7Name `hl7:",name=CSS,type=s"`
	StudyScheduledTimePoint        CE      `hl7:"1,required,len=60,display=Study Scheduled Time Point"`
	StudyScheduledPatientTimePoint TS      `hl7:"2,len=26,format=YMDHMS,display=Study Scheduled Patient Time Point"`
	StudyQualityControlCodes       []CE    `hl7:"3,max=3,len=60,display=Study Quality Control Codes"`
}

// Contact Data
//
// The CTD segment may identify any contact personnel associated with a patient referral message and its related transactions. The CTD segment will be paired with a PRD segment. The PRD segment contains data specifically focused on provider information in a referral. While it is important in an inter-enterprise transaction to transmit specific information regarding the providers involved (referring and referred-to), it may also be important to identify the contact personnel associated with the given provider. For example, a provider receiving a referral may need to know the office manager or the billing person at the institution of the provider who sent the referral. This segment allows for multiple contact personnel to be associated with a single provider.
type CTD struct {
	HL7                             HL7Name `hl7:",name=CTD,type=s"`
	ContactRole                     []CE    `hl7:"1,required,len=200,table=0131,display=Contact Role"`
	ContactName                     []XPN   `hl7:"2,len=106,display=Contact Name"`
	ContactAddress                  []XAD   `hl7:"3,len=200,display=Contact Address"`
	ContactLocation                 *PL     `hl7:"4,len=60,display=Contact Location"`
	ContactCommunicationInformation []XTN   `hl7:"5,len=100,display=Contact Communication Information"`
	PreferredMethodOfContact        *CE     `hl7:"6,len=200,table=0185,display=Preferred Method Of Contact"`
	ContactIdentifiers              []PI    `hl7:"7,len=100,display=Contact Identifiers"`
}

// Clinical trial identification segment
//
// The CTI segment is an optional segment that contains information to identify the clinical trial, phase and time point with which an order or result is associated.
type CTI struct {
	HL7                     HL7Name `hl7:",name=CTI,type=s"`
	SponsorStudyID          EI      `hl7:"1,required,len=60,display=Sponsor Study ID"`
	StudyPhaseIdentifier    *CE     `hl7:"2,conditional,len=60,display=Study Phase Identifier"`
	StudyScheduledTimePoint *CE     `hl7:"3,len=60,display=Study Scheduled Time Point"`
}

// Disability segment
//
// The disability segment contains information related to the disability of a person. This segment was created instead of adding disability attributes to each segment that contains a person (to which disability may apply). This is an optional segment that can be used to send disability information about a person already defined by the Patient Administration Chapter. The disabled person code and identifier allow for the association of the disability information to the person.
type DB1 struct {
	HL7                        HL7Name `hl7:",name=DB1,type=s"`
	SetID                      SI      `hl7:"1,seq,required,len=4,display=Set ID - DB1"`
	DisabledPersonCode         IS      `hl7:"2,len=2,table=0334,display=Disabled Person Code"`
	DisabledPersonIdentifier   []CX    `hl7:"3,len=32,display=Disabled Person Identifier"`
	DisabledIndicator          ID      `hl7:"4,len=1,table=0136,display=Disabled Indicator"`
	DisabilityStartDate        DT      `hl7:"5,len=8,format=YMD,display=Disability Start Date"`
	DisabilityEndDate          DT      `hl7:"6,len=8,format=YMD,display=Disability End Date"`
	DisabilityReturnToWorkDate DT      `hl7:"7,len=8,format=YMD,display=Disability Return to Work Date"`
	DisabilityUnableToWorkDate DT      `hl7:"8,len=8,format=YMD,display=Disability Unable to Work Date"`
}

// Diagnosis segment
//
// The DG1 segment contains patient diagnosis information of various types, for example, admitting, primary, etc. The DG1 segment is used to send multiple diagnoses (for example, for medical records encoding). It is also used when the FT1-19-diagnosiscode-FT1 does not provide sufficient information for a billing system. This diagnosis coding should be distinguished from the clinical problem segment used by caregivers to manage the patient (see Chapter 12, Patient Care). Coding methodologies are also defined.
type DG1 struct {
	HL7                     HL7Name `hl7:",name=DG1,type=s"`
	SetID                   SI      `hl7:"1,seq,required,len=4,display=Set ID - DG1"`
	DiagnosisCodingMethod   ID      `hl7:"2,len=2,table=0053,display=Diagnosis Coding Method"`
	DiagnosisCode           *CE     `hl7:"3,len=60,table=0051,display=Diagnosis Code - DG1"`
	DiagnosisDescription    ST      `hl7:"4,len=40,display=Diagnosis Description"`
	DiagnosisDateTime       TS      `hl7:"5,len=26,format=YMDHMS,display=Diagnosis Date/Time"`
	DiagnosisType           IS      `hl7:"6,required,len=2,table=0052,display=Diagnosis Type"`
	MajorDiagnosticCategory CE      `hl7:"7,len=60,table=0118,display=Major Diagnostic Category"`
	DiagnosticRelatedGroup  CE      `hl7:"8,len=60,table=0055,display=Diagnostic Related Group"`
	DRGApprovalIndicator    ID      `hl7:"9,len=1,table=0136,display=DRG Approval Indicator"`
	DRGGrouperReviewCode    IS      `hl7:"10,len=2,table=0056,display=DRG Grouper Review Code"`
	OutlierType             CE      `hl7:"11,len=60,table=0083,display=Outlier Type"`
	OutlierDays             NM      `hl7:"12,len=3,display=Outlier Days"`
	OutlierCost             CP      `hl7:"13,len=12,display=Outlier Cost"`
	GrouperVersionAndType   ST      `hl7:"14,len=4,display=Grouper Version And Type"`
	DiagnosisPriority       ID      `hl7:"15,len=2,table=0359,display=Diagnosis Priority"`
	DiagnosingClinician     []XCN   `hl7:"16,len=60,display=Diagnosing Clinician"`
	DiagnosisClassification IS      `hl7:"17,len=3,table=0228,display=Diagnosis Classification"`
	ConfidentialIndicator   ID      `hl7:"18,len=1,table=0136,display=Confidential Indicator"`
	AttestationDateTime     TS      `hl7:"19,len=26,format=YMDHMS,display=Attestation Date/Time"`
}

// Diagnosis related group segment
//
// The DRG segment contains diagnoses-related grouping information of various types. The DRG segment is used to send the DRG information, for example, for billing and medical records encoding.
type DRG struct {
	HL7                    HL7Name `hl7:",name=DRG,type=s"`
	DiagnosticRelatedGroup *CE     `hl7:"1,len=60,table=0055,display=Diagnostic Related Group"`
	AssignedDateTime       TS      `hl7:"2,len=26,format=YMDHMS,display=DRG Assigned Date/Time"`
	ApprovalIndicator      ID      `hl7:"3,len=1,table=0136,display=DRG Approval Indicator"`
	GrouperReviewCode      IS      `hl7:"4,len=2,table=0056,display=DRG Grouper Review Code"`
	OutlierType            *CE     `hl7:"5,len=60,table=0083,display=Outlier Type"`
	OutlierDays            NM      `hl7:"6,len=3,display=Outlier Days"`
	OutlierCost            *CP     `hl7:"7,len=12,display=Outlier Cost"`
	Payor                  IS      `hl7:"8,len=1,table=0229,display=DRG Payor"`
	OutlierReimbursement   *CP     `hl7:"9,len=9,display=Outlier Reimbursement"`
	ConfidentialIndicator  ID      `hl7:"10,len=1,table=0136,display=Confidential Indicator"`
}

// Continuation pointer segment
//
// The DSC segment is used in the continuation protocol.
type DSC struct {
	HL7                 HL7Name `hl7:",name=DSC,type=s"`
	ContinuationPointer ST      `hl7:"1,len=180,display=Continuation Pointer"`
}

// Display data segment
//
// The DSP segment is used to contain data that has been preformatted by the sender for display. The semantic content of the data is lost; the data is simply treated as lines of text.
type DSP struct {
	HL7               HL7Name `hl7:",name=DSP,type=s"`
	SetID             SI      `hl7:"1,seq,len=4,display=Set ID - DSP"`
	DisplayLevel      SI      `hl7:"2,len=4,display=Display Level"`
	DataLine          TX      `hl7:"3,required,len=300,display=Data Line"`
	LogicalBreakPoint ST      `hl7:"4,len=2,display=Logical Break Point"`
	ResultID          TX      `hl7:"5,len=20,display=Result ID"`
}

// Embedded query language segment
//
// The EQL segment is used to define queries using select statements based on the query language of choice (e.g., SQL). Refer to the functional chapters for the lists of HL7-defined EQL select statements.
type EQL struct {
	HL7                     HL7Name `hl7:",name=EQL,type=s"`
	QueryTag                ST      `hl7:"1,len=32,display=Query Tag"`
	QueryResponseFormatCode ID      `hl7:"2,required,len=1,table=0106,display=Query/ Response Format Code"`
	QueryName               CE      `hl7:"3,required,len=60,display=EQL  Query Name"`
	QueryStatement          ST      `hl7:"4,required,len=4096,display=EQL  Query Statement"`
}

// Event replay query segment
//
// The ERQ segment is used to issue queries where the desired response is formatted as an event replay response message. This enables the querying application to request detailed event data from an application that supports this feature, such that it may no longer be necessary for it to capture and store all event information at the time of the original trigger event.
type ERQ struct {
	HL7                HL7Name `hl7:",name=ERQ,type=s"`
	QueryTag           ST      `hl7:"1,len=32,display=Query Tag"`
	EventIdentifier    CE      `hl7:"2,required,len=60,display=Event Identifier"`
	InputParameterList []QIP   `hl7:"3,len=256,display=Input Parameter List"`
}

// Error segment
//
// The ERR segment is used to add error comments to acknowledgment messages.
// It contains one field only storing the code and the location.
type ERR struct {
	HL7                  HL7Name `hl7:",name=ERR,type=s"`
	ErrorCodeAndLocation []ELD   `hl7:"1,required,len=80,display=Error Code and Location"`
}

// Event type segment
//
// The EVN segment is used to communicate necessary trigger event information to receiving applications. Valid event types for all chapters are contained in HL7 table 0003 - Event type.
type EVN struct {
	HL7                  HL7Name `hl7:",name=EVN,type=s"`
	EventTypeCode        ID      `hl7:"1,len=3,table=0003,display=Event Type Code"`
	RecordedDateTime     TS      `hl7:"2,required,len=26,format=YMDHMS,display=Recorded Date/Time"`
	DateTimePlannedEvent TS      `hl7:"3,len=26,format=YMDHMS,display=Date/Time Planned Event"`
	EventReasonCode      IS      `hl7:"4,len=3,table=0062,display=Event Reason Code"`
	OperatorID           []XCN   `hl7:"5,len=60,table=0188,display=Operator ID"`
	EventOccurred        TS      `hl7:"6,len=26,format=YMDHMS,display=Event Occurred"`
}

// Facility segment
//
// Figure 7-25. FAC attributes
type FAC struct {
	HL7                                 HL7Name `hl7:",name=FAC,type=s"`
	FacilityID                          EI      `hl7:"1,required,len=20,display=Facility ID-FAC"`
	FacilityType                        ID      `hl7:"2,len=1,table=0331,display=Facility Type"`
	FacilityAddress                     []XAD   `hl7:"3,required,len=200,display=Facility Address"`
	FacilityTelecommunication           XTN     `hl7:"4,required,len=44,display=Facility Telecommunication"`
	ContactPerson                       []XCN   `hl7:"5,len=60,display=Contact Person"`
	ContactTitle                        []ST    `hl7:"6,len=60,display=Contact Title"`
	ContactAddress                      []XAD   `hl7:"7,len=200,display=Contact Address"`
	ContactTelecommunication            []XTN   `hl7:"8,len=44,display=Contact Telecommunication"`
	SignatureAuthority                  []XCN   `hl7:"9,required,len=60,display=Signature Authority"`
	SignatureAuthorityTitle             ST      `hl7:"10,len=60,display=Signature Authority Title"`
	SignatureAuthorityAddress           []XAD   `hl7:"11,len=200,display=Signature Authority Address"`
	SignatureAuthorityTelecommunication *XTN    `hl7:"12,len=44,display=Signature Authority Telecommunication"`
}

// File Header Segment
//
// The FHS segment is used to head a file (group of batches) as defined in Section 2.23.3, “HL7 batch protocol.”
type FHS struct {
	HL7                      HL7Name `hl7:",name=FHS,type=s"`
	FileFieldSeparator       ST      `hl7:"1,required,len=1,display=File Field Separator"`
	FileEncodingCharacters   ST      `hl7:"2,required,len=4,display=File Encoding Characters"`
	FileSendingApplication   ST      `hl7:"3,len=15,display=File Sending Application"`
	FileSendingFacility      ST      `hl7:"4,len=20,display=File Sending Facility"`
	FileReceivingApplication ST      `hl7:"5,len=15,display=File Receiving Application"`
	FileReceivingFacility    ST      `hl7:"6,len=20,display=File Receiving Facility"`
	FileCreationDateTime     TS      `hl7:"7,len=26,format=YMDHMS,display=File Creation Date/Time"`
	FileSecurity             ST      `hl7:"8,len=40,display=File Security"`
	FileNameID               ST      `hl7:"9,len=20,display=File Name/ID"`
	FileHeaderComment        ST      `hl7:"10,len=80,display=File Header Comment"`
	FileControlID            ST      `hl7:"11,len=20,display=File Control ID"`
	ReferenceFileControlID   ST      `hl7:"12,len=20,display=Reference File Control ID"`
}

// Financial transaction segment
//
// The FT1 segment contains the detail data necessary to post charges, payments, adjustments, etc. to patient accounting records.
type FT1 struct {
	HL7                       HL7Name `hl7:",name=FT1,type=s"`
	SetID                     SI      `hl7:"1,seq,len=4,display=Set ID - FT1"`
	TransactionID             ST      `hl7:"2,len=12,display=Transaction ID"`
	TransactionBatchID        ST      `hl7:"3,len=10,display=Transaction Batch ID"`
	TransactionDate           TS      `hl7:"4,required,len=26,format=YMDHMS,display=Transaction Date"`
	TransactionPostingDate    TS      `hl7:"5,len=26,format=YMDHMS,display=Transaction Posting Date"`
	TransactionType           IS      `hl7:"6,required,len=8,table=0017,display=Transaction Type"`
	TransactionCode           CE      `hl7:"7,required,len=80,table=0132,display=Transaction Code"`
	TransactionDescription    ST      `hl7:"8,len=40,display=Transaction Description"`
	TransactionDescriptionAlt ST      `hl7:"9,len=40,display=Transaction Description - Alt"`
	TransactionQuantity       NM      `hl7:"10,len=6,display=Transaction Quantity"`
	TransactionAmountExtended *CP     `hl7:"11,len=12,display=Transaction Amount - Extended"`
	TransactionAmountUnit     *CP     `hl7:"12,len=12,display=Transaction Amount - Unit"`
	DepartmentCode            *CE     `hl7:"13,len=60,table=0049,display=Department Code"`
	InsurancePlanID           *CE     `hl7:"14,len=60,table=0072,display=Insurance Plan ID"`
	InsuranceAmount           *CP     `hl7:"15,len=12,display=Insurance Amount"`
	AssignedPatientLocation   *PL     `hl7:"16,len=80,display=Assigned Patient Location"`
	FeeSchedule               IS      `hl7:"17,len=1,table=0024,display=Fee Schedule"`
	PatientType               IS      `hl7:"18,len=2,table=0018,display=Patient Type"`
	DiagnosisCode             []CE    `hl7:"19,len=60,table=0051,display=Diagnosis Code - FT1"`
	PerformedByCode           []XCN   `hl7:"20,len=120,table=0084,display=Performed By Code"`
	OrderedByCode             []XCN   `hl7:"21,len=120,display=Ordered By Code"`
	UnitCost                  *CP     `hl7:"22,len=12,display=Unit Cost"`
	FillerOrderNumber         *EI     `hl7:"23,len=22,display=Filler Order Number"`
	EnteredByCode             []XCN   `hl7:"24,len=120,display=Entered By Code"`
	ProcedureCode             *CE     `hl7:"25,len=80,table=0088,display=Procedure Code"`
	ProcedureCodeModifier     []CE    `hl7:"26,len=80,table=0340,display=Procedure Code Modifier"`
}

// File Trailer Segment
//
// The FTS segment defines the end of a file.
type FTS struct {
	HL7                HL7Name `hl7:",name=FTS,type=s"`
	FileBatchCount     NM      `hl7:"1,len=10,display=File Batch Count"`
	FileTrailerComment ST      `hl7:"2,len=80,display=File Trailer Comment"`
}

// Goal Detail
//
// The goal detail segment contains the data necessary to add, update, correct, and delete the goals for an individual.
type GOL struct {
	HL7                         HL7Name `hl7:",name=GOL,type=s"`
	ActionCode                  ID      `hl7:"1,required,len=2,table=0287,display=Action Code"`
	ActionDateTime              TS      `hl7:"2,required,len=26,format=YMDHMS,display=Action Date/Time"`
	GoalID                      CE      `hl7:"3,required,len=80,display=Goal ID"`
	GoalInstanceID              EI      `hl7:"4,required,len=60,display=Goal Instance ID"`
	EpisodeOfCareID             *EI     `hl7:"5,len=60,display=Episode of Care ID"`
	GoalListPriority            NM      `hl7:"6,len=60,display=Goal List Priority"`
	GoalEstablishedDateTime     TS      `hl7:"7,len=26,format=YMDHMS,display=Goal Established Date/Time"`
	ExpectedGoalAchieveDateTime TS      `hl7:"8,len=26,format=YMDHMS,display=Expected Goal Achieve Date/Time"`
	GoalClassification          *CE     `hl7:"9,len=80,display=Goal Classification"`
	GoalManagementDiscipline    *CE     `hl7:"10,len=80,display=Goal Management Discipline"`
	CurrentGoalReviewStatus     *CE     `hl7:"11,len=80,display=Current Goal Review Status"`
	CurrentGoalReviewDateTime   TS      `hl7:"12,len=26,format=YMDHMS,display=Current Goal Review Date/Time"`
	NextGoalReviewDateTime      TS      `hl7:"13,len=26,format=YMDHMS,display=Next Goal Review Date/Time"`
	PreviousGoalReviewDateTime  TS      `hl7:"14,len=26,format=YMDHMS,display=Previous Goal Review Date/Time"`
	GoalReviewInterval          *TQ     `hl7:"15,len=200,display=Goal Review Interval"`
	GoalEvaluation              *CE     `hl7:"16,len=80,display=Goal Evaluation"`
	GoalEvaluationComment       []ST    `hl7:"17,len=300,display=Goal Evaluation Comment"`
	GoalLifeCycleStatus         *CE     `hl7:"18,len=80,display=Goal Life Cycle Status"`
	GoalLifeCycleStatusDateTime TS      `hl7:"19,len=26,format=YMDHMS,display=Goal Life Cycle Status Date/Time"`
	GoalTargetType              []CE    `hl7:"20,len=80,display=Goal Target Type"`
	GoalTargetName              []XPN   `hl7:"21,len=80,display=Goal Target Name"`
}

// Guarantor segment
//
// The GT1 segment contains guarantor (e.g., the person or the organization with financial responsibility for payment of a patient account) data for patient and insurance billing applications.
type GT1 struct {
	HL7                                HL7Name `hl7:",name=GT1,type=s"`
	SetID                              SI      `hl7:"1,seq,required,len=4,display=Set ID - GT1"`
	GuarantorNumber                    []CX    `hl7:"2,len=59,display=Guarantor Number"`
	GuarantorName                      []XPN   `hl7:"3,required,len=48,display=Guarantor Name"`
	GuarantorSpouseName                []XPN   `hl7:"4,len=48,display=Guarantor Spouse Name"`
	GuarantorAddress                   []XAD   `hl7:"5,len=106,display=Guarantor Address"`
	GuarantorPhNumHome                 []XTN   `hl7:"6,len=40,display=Guarantor Ph Num-Home"`
	GuarantorPhNumBusiness             []XTN   `hl7:"7,len=40,display=Guarantor Ph Num-Business"`
	GuarantorDateTimeOfBirth           TS      `hl7:"8,len=26,format=YMDHMS,display=Guarantor Date/Time Of Birth"`
	GuarantorSex                       IS      `hl7:"9,len=1,table=0001,display=Guarantor Sex"`
	GuarantorType                      IS      `hl7:"10,len=2,table=0068,display=Guarantor Type"`
	GuarantorRelationship              *CE     `hl7:"11,len=80,table=0063,display=Guarantor Relationship"`
	GuarantorSSN                       ST      `hl7:"12,len=11,display=Guarantor SSN"`
	GuarantorDateBegin                 DT      `hl7:"13,len=8,format=YMD,display=Guarantor Date - Begin"`
	GuarantorDateEnd                   DT      `hl7:"14,len=8,format=YMD,display=Guarantor Date - End"`
	GuarantorPriority                  NM      `hl7:"15,len=2,display=Guarantor Priority"`
	GuarantorEmployerName              []XPN   `hl7:"16,len=130,display=Guarantor Employer Name"`
	GuarantorEmployerAddress           []XAD   `hl7:"17,len=106,display=Guarantor Employer Address"`
	GuarantorEmployerPhoneNumber       []XTN   `hl7:"18,len=40,display=Guarantor Employer Phone Number"`
	GuarantorEmployeeIDNumber          []CX    `hl7:"19,len=20,display=Guarantor Employee ID Number"`
	GuarantorEmploymentStatus          IS      `hl7:"20,len=2,table=0066,display=Guarantor Employment Status"`
	GuarantorOrganizationName          []XON   `hl7:"21,len=130,display=Guarantor Organization Name"`
	GuarantorBillingHoldFlag           ID      `hl7:"22,len=1,table=0136,display=Guarantor Billing Hold Flag"`
	GuarantorCreditRatingCode          *CE     `hl7:"23,len=80,table=0341,display=Guarantor Credit Rating Code"`
	GuarantorDeathDateAndTime          TS      `hl7:"24,len=26,format=YMDHMS,display=Guarantor Death Date And Time"`
	GuarantorDeathFlag                 ID      `hl7:"25,len=1,table=0136,display=Guarantor Death Flag"`
	GuarantorChargeAdjustmentCode      *CE     `hl7:"26,len=80,table=0218,display=Guarantor Charge Adjustment Code"`
	GuarantorHouseholdAnnualIncome     *CP     `hl7:"27,len=10,display=Guarantor Household Annual Income"`
	GuarantorHouseholdSize             NM      `hl7:"28,len=3,display=Guarantor Household Size"`
	GuarantorEmployerIDNumber          []CX    `hl7:"29,len=20,display=Guarantor Employer ID Number"`
	GuarantorMaritalStatusCode         *CE     `hl7:"30,len=80,table=0002,display=Guarantor Marital Status Code"`
	GuarantorHireEffectiveDate         DT      `hl7:"31,len=8,format=YMD,display=Guarantor Hire Effective Date"`
	EmploymentStopDate                 DT      `hl7:"32,len=8,format=YMD,display=Employment Stop Date"`
	LivingDependency                   IS      `hl7:"33,len=2,table=0223,display=Living Dependency"`
	AmbulatoryStatus                   []IS    `hl7:"34,len=2,table=0009,display=Ambulatory Status"`
	Citizenship                        []CE    `hl7:"35,len=80,table=0171,display=Citizenship"`
	PrimaryLanguage                    *CE     `hl7:"36,len=60,table=0296,display=Primary Language"`
	LivingArrangement                  IS      `hl7:"37,len=2,table=0220,display=Living Arrangement"`
	PublicityCode                      *CE     `hl7:"38,len=80,table=0215,display=Publicity Code"`
	ProtectionIndicator                ID      `hl7:"39,len=1,table=0136,display=Protection Indicator"`
	StudentIndicator                   IS      `hl7:"40,len=2,table=0231,display=Student Indicator"`
	Religion                           *CE     `hl7:"41,len=80,table=0006,display=Religion"`
	MotherSMaidenName                  []XPN   `hl7:"42,len=48,display=Mother s Maiden Name"`
	Nationality                        *CE     `hl7:"43,len=80,table=0212,display=Nationality"`
	EthnicGroup                        []CE    `hl7:"44,len=80,table=0063,display=Ethnic Group"`
	ContactPersonSName                 []XPN   `hl7:"45,len=48,display=Contact Person s Name"`
	ContactPersonSTelephoneNumber      []XTN   `hl7:"46,len=40,display=Contact Person s Telephone Number"`
	ContactReason                      *CE     `hl7:"47,len=80,table=0222,display=Contact Reason"`
	ContactRelationship                IS      `hl7:"48,len=2,table=0063,display=Contact Relationship"`
	JobTitle                           ST      `hl7:"49,len=20,display=Job Title"`
	JobCodeClass                       *JCC    `hl7:"50,len=20,display=Job Code/Class"`
	GuarantorEmployerSOrganizationName []XON   `hl7:"51,len=130,display=Guarantor Employer s Organization Name"`
	Handicap                           IS      `hl7:"52,len=2,table=0295,display=Handicap"`
	JobStatus                          IS      `hl7:"53,len=2,table=0311,display=Job Status"`
	GuarantorFinancialClass            *FC     `hl7:"54,len=50,display=Guarantor Financial Class"`
	GuarantorRace                      []CE    `hl7:"55,len=80,table=0005,display=Guarantor Race"`
}

// Insurance segment
//
// The IN1 segment contains insurance policy coverage information necessary to produce properly pro-rated and patient and insurance bills.
type IN1 struct {
	HL7                           HL7Name `hl7:",name=IN1,type=s"`
	SetID                         SI      `hl7:"1,seq,required,len=4,display=Set ID - IN1"`
	InsurancePlanID               CE      `hl7:"2,required,len=60,table=0072,display=Insurance Plan ID"`
	InsuranceCompanyID            []CX    `hl7:"3,required,len=59,display=Insurance Company ID"`
	InsuranceCompanyName          []XON   `hl7:"4,len=130,display=Insurance Company Name"`
	InsuranceCompanyAddress       []XAD   `hl7:"5,len=106,display=Insurance Company Address"`
	InsuranceCoContactPerson      []XPN   `hl7:"6,len=48,display=Insurance Co Contact Person"`
	InsuranceCoPhoneNumber        []XTN   `hl7:"7,len=40,display=Insurance Co Phone Number"`
	GroupNumber                   ST      `hl7:"8,len=12,display=Group Number"`
	GroupName                     []XON   `hl7:"9,len=130,display=Group Name"`
	InsuredSGroupEmpID            []CX    `hl7:"10,len=12,display=Insured s Group Emp ID"`
	InsuredSGroupEmpName          []XON   `hl7:"11,len=130,display=Insured s Group Emp Name"`
	PlanEffectiveDate             DT      `hl7:"12,len=8,format=YMD,display=Plan Effective Date"`
	PlanExpirationDate            DT      `hl7:"13,len=8,format=YMD,display=Plan Expiration Date"`
	AuthorizationInformation      *AUI    `hl7:"14,len=55,display=Authorization Information"`
	PlanType                      IS      `hl7:"15,len=3,table=0086,display=Plan Type"`
	NameOfInsured                 []XPN   `hl7:"16,len=48,display=Name Of Insured"`
	InsuredSRelationshipToPatient *CE     `hl7:"17,len=80,table=0063,display=Insured s Relationship To Patient"`
	InsuredSDateOfBirth           TS      `hl7:"18,len=26,format=YMDHMS,display=Insured s Date Of Birth"`
	InsuredSAddress               []XAD   `hl7:"19,len=106,display=Insured s Address"`
	AssignmentOfBenefits          IS      `hl7:"20,len=2,table=0135,display=Assignment Of Benefits"`
	CoordinationOfBenefits        IS      `hl7:"21,len=2,table=0173,display=Coordination Of Benefits"`
	CoordOfBenPriority            ST      `hl7:"22,len=2,display=Coord Of Ben. Priority"`
	NoticeOfAdmissionFlag         ID      `hl7:"23,len=1,table=0136,display=Notice Of Admission Flag"`
	NoticeOfAdmissionDate         DT      `hl7:"24,len=8,format=YMD,display=Notice Of Admission Date"`
	ReportOfEligibilityFlag       ID      `hl7:"25,len=1,table=0136,display=Report Of Eligibility Flag"`
	ReportOfEligibilityDate       DT      `hl7:"26,len=8,format=YMD,display=Report Of Eligibility Date"`
	ReleaseInformationCode        IS      `hl7:"27,len=2,table=0093,display=Release Information Code"`
	PreAdmitCert                  ST      `hl7:"28,len=15,display=Pre-Admit Cert"`
	VerificationDateTime          TS      `hl7:"29,len=26,format=YMDHMS,display=Verification Date/Time"`
	VerificationBy                []XCN   `hl7:"30,len=60,display=Verification By"`
	TypeOfAgreementCode           IS      `hl7:"31,len=2,table=0098,display=Type Of Agreement Code"`
	BillingStatus                 IS      `hl7:"32,len=2,table=0022,display=Billing Status"`
	LifetimeReserveDays           NM      `hl7:"33,len=4,display=Lifetime Reserve Days"`
	DelayBeforeLRDay              NM      `hl7:"34,len=4,display=Delay Before L.R. Day"`
	CompanyPlanCode               IS      `hl7:"35,len=8,table=0042,display=Company Plan Code"`
	PolicyNumber                  ST      `hl7:"36,len=15,display=Policy Number"`
	PolicyDeductible              *CP     `hl7:"37,len=12,display=Policy Deductible"`
	PolicyLimitAmount             CP      `hl7:"38,len=12,display=Policy Limit - Amount"`
	PolicyLimitDays               NM      `hl7:"39,len=4,display=Policy Limit - Days"`
	RoomRateSemiPrivate           CP      `hl7:"40,len=12,display=Room Rate - Semi-Private"`
	RoomRatePrivate               CP      `hl7:"41,len=12,display=Room Rate - Private"`
	InsuredSEmploymentStatus      *CE     `hl7:"42,len=60,table=0066,display=Insured s Employment Status"`
	InsuredSSex                   IS      `hl7:"43,len=1,table=0001,display=Insured s Sex"`
	InsuredSEmployerSAddress      []XAD   `hl7:"44,len=106,display=Insured s Employer s Address"`
	VerificationStatus            ST      `hl7:"45,len=2,display=Verification Status"`
	PriorInsurancePlanID          IS      `hl7:"46,len=8,table=0072,display=Prior Insurance Plan ID"`
	CoverageType                  IS      `hl7:"47,len=3,table=0309,display=Coverage Type"`
	Handicap                      IS      `hl7:"48,len=2,table=0295,display=Handicap"`
	InsuredSIDNumber              []CX    `hl7:"49,len=12,display=Insured s ID Number"`
}

// Insurance additional information segment
//
// The IN2 segment contains additional insurance policy coverage and benefit information necessary for proper billing and reimbursement. Fields used by this segment are defined by HCFA or other regulatory agencies.
type IN2 struct {
	HL7                                  HL7Name `hl7:",name=IN2,type=s"`
	InsuredSEmployeeID                   []CX    `hl7:"1,len=59,display=Insured s Employee ID"`
	InsuredSSocialSecurityNumber         ST      `hl7:"2,len=11,display=Insured s Social Security Number"`
	InsuredSEmployerSNameAndID           []XCN   `hl7:"3,len=130,display=Insured s Employer s Name and ID"`
	EmployerInformationData              IS      `hl7:"4,len=1,table=0139,display=Employer Information Data"`
	MailClaimParty                       []IS    `hl7:"5,len=1,table=0137,display=Mail Claim Party"`
	MedicareHealthInsCardNumber          ST      `hl7:"6,len=15,display=Medicare Health Ins Card Number"`
	MedicaidCaseName                     []XPN   `hl7:"7,len=48,display=Medicaid Case Name"`
	MedicaidCaseNumber                   ST      `hl7:"8,len=15,display=Medicaid Case Number"`
	MilitarySponsorName                  []XPN   `hl7:"9,len=48,display=Military Sponsor Name"`
	MilitaryIDNumber                     ST      `hl7:"10,len=20,display=Military ID Number"`
	DependentOfMilitaryRecipient         *CE     `hl7:"11,len=80,table=0342,display=Dependent Of Military Recipient"`
	MilitaryOrganization                 ST      `hl7:"12,len=25,display=Military Organization"`
	MilitaryStation                      ST      `hl7:"13,len=25,display=Military Station"`
	MilitaryService                      IS      `hl7:"14,len=14,table=0140,display=Military Service"`
	MilitaryRankGrade                    IS      `hl7:"15,len=2,table=0141,display=Military Rank/Grade"`
	MilitaryStatus                       IS      `hl7:"16,len=3,table=0142,display=Military Status"`
	MilitaryRetireDate                   DT      `hl7:"17,len=8,format=YMD,display=Military Retire Date"`
	MilitaryNonAvailCertOnFile           ID      `hl7:"18,len=1,table=0136,display=Military Non-Avail Cert On File"`
	BabyCoverage                         ID      `hl7:"19,len=1,table=0136,display=Baby Coverage"`
	CombineBabyBill                      ID      `hl7:"20,len=1,table=0136,display=Combine Baby Bill"`
	BloodDeductible                      ST      `hl7:"21,len=1,display=Blood Deductible"`
	SpecialCoverageApprovalName          []XPN   `hl7:"22,len=48,display=Special Coverage Approval Name"`
	SpecialCoverageApprovalTitle         ST      `hl7:"23,len=30,display=Special Coverage Approval Title"`
	NonCoveredInsuranceCode              []IS    `hl7:"24,len=8,table=0143,display=Non-Covered Insurance Code"`
	PayorID                              []CX    `hl7:"25,len=59,display=Payor ID"`
	PayorSubscriberID                    []CX    `hl7:"26,len=59,display=Payor Subscriber ID"`
	EligibilitySource                    IS      `hl7:"27,len=1,table=0144,display=Eligibility Source"`
	RoomCoverageTypeAmount               []RMC   `hl7:"28,len=25,display=Room Coverage Type/Amount"`
	PolicyTypeAmount                     []PTA   `hl7:"29,len=25,display=Policy Type/Amount"`
	DailyDeductible                      *DDI    `hl7:"30,len=25,display=Daily Deductible"`
	LivingDependency                     IS      `hl7:"31,len=2,table=0223,display=Living Dependency"`
	AmbulatoryStatus                     []IS    `hl7:"32,len=2,table=0009,display=Ambulatory Status"`
	Citizenship                          []CE    `hl7:"33,len=80,table=0171,display=Citizenship"`
	PrimaryLanguage                      *CE     `hl7:"34,len=60,table=0296,display=Primary Language"`
	LivingArrangement                    IS      `hl7:"35,len=2,table=0220,display=Living Arrangement"`
	PublicityCode                        *CE     `hl7:"36,len=80,table=0215,display=Publicity Code"`
	ProtectionIndicator                  ID      `hl7:"37,len=1,table=0136,display=Protection Indicator"`
	StudentIndicator                     IS      `hl7:"38,len=2,table=0231,display=Student Indicator"`
	Religion                             *CE     `hl7:"39,len=80,table=0006,display=Religion"`
	MotherSMaidenName                    []XPN   `hl7:"40,len=48,display=Mother s Maiden Name"`
	Nationality                          *CE     `hl7:"41,len=80,table=0212,display=Nationality"`
	EthnicGroup                          []CE    `hl7:"42,len=80,table=0189,display=Ethnic Group"`
	MaritalStatus                        []CE    `hl7:"43,len=80,table=0002,display=Marital Status"`
	InsuredSEmploymentStartDate          DT      `hl7:"44,len=8,format=YMD,display=Insured s Employment Start Date"`
	EmploymentStopDate                   DT      `hl7:"45,len=8,format=YMD,display=Employment Stop Date"`
	JobTitle                             ST      `hl7:"46,len=20,display=Job Title"`
	JobCodeClass                         *JCC    `hl7:"47,len=20,display=Job Code/Class"`
	JobStatus                            IS      `hl7:"48,len=2,table=0311,display=Job Status"`
	EmployerContactPersonName            []XPN   `hl7:"49,len=48,display=Employer Contact Person Name"`
	EmployerContactPersonPhoneNumber     []XTN   `hl7:"50,len=40,display=Employer Contact Person Phone Number"`
	EmployerContactReason                IS      `hl7:"51,len=2,table=0222,display=Employer Contact Reason"`
	InsuredSContactPersonSName           []XPN   `hl7:"52,len=48,display=Insured s Contact Person s Name"`
	InsuredSContactPersonPhoneNumber     []XTN   `hl7:"53,len=40,display=Insured s Contact Person Phone Number"`
	InsuredSContactPersonReason          []IS    `hl7:"54,len=2,table=0222,display=Insured s Contact Person Reason"`
	RelationshipToThePatientStartDate    DT      `hl7:"55,len=8,format=YMD,display=Relationship To The Patient Start Date"`
	RelationshipToThePatientStopDate     []DT    `hl7:"56,len=8,format=YMD,display=Relationship To The Patient Stop Date"`
	InsuranceCoContactReason             IS      `hl7:"57,len=2,table=0232,display=Insurance Co. Contact Reason"`
	InsuranceCoContactPhoneNumber        *XTN    `hl7:"58,len=40,display=Insurance Co Contact Phone Number"`
	PolicyScope                          IS      `hl7:"59,len=2,table=0312,display=Policy Scope"`
	PolicySource                         IS      `hl7:"60,len=2,table=0313,display=Policy Source"`
	PatientMemberNumber                  *CX     `hl7:"61,len=60,display=Patient Member Number"`
	GuarantorSRelationshipToInsured      *CE     `hl7:"62,len=80,table=0063,display=Guarantor s Relationship To Insured"`
	InsuredSPhoneNumberHome              []XTN   `hl7:"63,len=40,display=Insured s Phone Number - Home"`
	InsuredSEmployerPhoneNumber          []XTN   `hl7:"64,len=40,display=Insured s Employer Phone Number"`
	MilitaryHandicappedProgram           *CE     `hl7:"65,len=60,table=0343,display=Military Handicapped Program"`
	SuspendFlag                          ID      `hl7:"66,len=1,table=0136,display=Suspend Flag"`
	CopayLimitFlag                       ID      `hl7:"67,len=1,table=0136,display=Copay Limit Flag"`
	StoplossLimitFlag                    ID      `hl7:"68,len=1,table=0136,display=Stoploss Limit Flag"`
	InsuredOrganizationNameAndID         []XON   `hl7:"69,len=130,display=Insured Organization Name And ID"`
	InsuredEmployerOrganizationNameAndID []XON   `hl7:"70,len=130,display=Insured Employer Organization Name And ID"`
	Race                                 []CE    `hl7:"71,len=80,table=0005,display=Race"`
	HCFAPatientSRelationshipToInsured    *CE     `hl7:"72,len=60,table=0344,display=HCFA Patient s Relationship to Insured"`
}

// Insurance additional information, certification segment
//
// The IN3 segment contains additional insurance information for certifying the need for patient care. Fields used by this segment are defined by HCFA, or other regulatory agencies.
type IN3 struct {
	HL7                                HL7Name `hl7:",name=IN3,type=s"`
	SetID                              SI      `hl7:"1,seq,required,len=4,display=Set ID - IN3"`
	CertificationNumber                *CX     `hl7:"2,len=59,display=Certification Number"`
	CertifiedBy                        []XCN   `hl7:"3,len=60,display=Certified By"`
	CertificationRequired              ID      `hl7:"4,len=1,table=0136,display=Certification Required"`
	Penalty                            *CM_PEN `hl7:"5,len=10,display=Penalty"`
	CertificationDateTime              TS      `hl7:"6,len=26,format=YMDHMS,display=Certification Date/Time"`
	CertificationModifyDateTime        TS      `hl7:"7,len=26,format=YMDHMS,display=Certification Modify Date/Time"`
	Operator                           []XCN   `hl7:"8,len=60,display=Operator"`
	CertificationBeginDate             DT      `hl7:"9,len=8,format=YMD,display=Certification Begin Date"`
	CertificationEndDate               DT      `hl7:"10,len=8,format=YMD,display=Certification End Date"`
	Days                               *DTN    `hl7:"11,len=3,display=Days"`
	NonConcurCodeDescription           *CE     `hl7:"12,len=60,table=0233,display=Non-Concur Code/Description"`
	NonConcurEffectiveDateTime         TS      `hl7:"13,len=26,format=YMDHMS,display=Non-Concur Effective Date/Time"`
	PhysicianReviewer                  []XCN   `hl7:"14,len=60,table=0010,display=Physician Reviewer"`
	CertificationContact               ST      `hl7:"15,len=48,display=Certification Contact"`
	CertificationContactPhoneNumber    []XTN   `hl7:"16,len=40,display=Certification Contact Phone Number"`
	AppealReason                       *CE     `hl7:"17,len=60,table=0345,display=Appeal Reason"`
	CertificationAgency                *CE     `hl7:"18,len=60,table=0346,display=Certification Agency"`
	CertificationAgencyPhoneNumber     []XTN   `hl7:"19,len=40,display=Certification Agency Phone Number"`
	PreCertificationReqWindow          []PCF   `hl7:"20,len=40,display=Pre-Certification Req/Window"`
	CaseManager                        ST      `hl7:"21,len=48,display=Case Manager"`
	SecondOpinionDate                  DT      `hl7:"22,len=8,format=YMD,display=Second Opinion Date"`
	SecondOpinionStatus                IS      `hl7:"23,len=1,table=0151,display=Second Opinion Status"`
	SecondOpinionDocumentationReceived []IS    `hl7:"24,len=1,table=0152,display=Second Opinion Documentation Received"`
	SecondOpinionPhysician             []XCN   `hl7:"25,len=60,table=0010,display=Second Opinion Physician"`
}

// Location charge code segment
//
// The optional LCC segment identifies how a patient location room can be billed by a certain department. A department can use different charge codes for the same room or bed, so there can be multiple LCC segments following an LDP segment.
type LCC struct {
	HL7                HL7Name `hl7:",name=LCC,type=s"`
	PrimaryKeyValue    PL      `hl7:"1,required,len=200,display=Primary Key Value - LCC"`
	LocationDepartment IS      `hl7:"2,required,len=10,table=0264,display=Location Department"`
	AccommodationType  []CE    `hl7:"3,len=60,table=0129,display=Accommodation Type"`
	ChargeCode         []CE    `hl7:"4,required,len=60,table=0132,display=Charge Code"`
}

// Location characteristic segment
//
// The LCH segment is used to identify location characteristics which determine which patients will be assigned to the room or bed. It contains the location characteristics of the room or bed identified in the preceding LOC segment. There should be one LCH segment for each attribute.
type LCH struct {
	HL7                         HL7Name `hl7:",name=LCH,type=s"`
	PrimaryKeyValue             PL      `hl7:"1,required,len=200,display=Primary Key Value - LCH"`
	SegmentActionCode           ID      `hl7:"2,len=3,table=0206,display=Segment Action Code"`
	SegmentUniqueKey            *EI     `hl7:"3,len=80,display=Segment Unique Key"`
	LocationCharacteristicID    CE      `hl7:"4,required,len=80,table=0324,display=Location Characteristic ID"`
	LocationCharacteristicValue CE      `hl7:"5,required,len=80,display=Location Characteristic Value"`
}

// Location department segment
//
// The LDP segment identifies how a patient location room is being used by a certain department. Multiple departments can use the same patient location, so there can be multiple LDP segments following an LOC segment. There must be at least one LDP segment for each LOC segment. This is not intended to include any current occupant information.
type LDP struct {
	HL7                 HL7Name `hl7:",name=LDP,type=s"`
	PrimaryKeyValue     PL      `hl7:"1,required,len=200,display=Primary Key Value - LDP"`
	LocationDepartment  IS      `hl7:"2,required,len=10,table=0264,display=Location Department"`
	LocationService     []IS    `hl7:"3,len=3,table=0069,display=Location Service"`
	SpecialtyType       []CE    `hl7:"4,len=60,table=0265,display=Specialty Type"`
	ValidPatientClasses []IS    `hl7:"5,len=1,table=0004,display=Valid Patient Classes"`
	ActiveInactiveFlag  ID      `hl7:"6,len=1,table=0183,display=Active/Inactive Flag"`
	ActivationDate      TS      `hl7:"7,len=26,format=YMDHMS,display=Activation Date  LDP"`
	InactivationDate    TS      `hl7:"8,len=26,format=YMDHMS,display=Inactivation Date - LDP"`
	InactivatedReason   ST      `hl7:"9,len=80,display=Inactivated Reason"`
	VisitingHours       []VH    `hl7:"10,len=80,display=Visiting Hours"`
	ContactPhone        *XTN    `hl7:"11,len=40,display=Contact Phone"`
}

// Location identification segment
//
// The LOC segment can identify any patient location referenced by information systems. This segment gives physical set up information about the location. This is not intended to include any current occupant or current use information. There should be one LOC segment for each patient location. If desired, there can also be one LOC segment for each nursing unit and room.
type LOC struct {
	HL7                 HL7Name `hl7:",name=LOC,type=s"`
	PrimaryKeyValue     PL      `hl7:"1,required,len=200,display=Primary Key Value - LOC"`
	LocationDescription ST      `hl7:"2,len=48,display=Location Description"`
	LocationType        []IS    `hl7:"3,required,len=2,table=0260,display=Location Type - LOC"`
	OrganizationName    []XON   `hl7:"4,len=90,display=Organization Name - LOC"`
	LocationAddress     []XAD   `hl7:"5,len=106,display=Location Address"`
	LocationPhone       []XTN   `hl7:"6,len=40,display=Location Phone"`
	LicenseNumber       []CE    `hl7:"7,len=60,display=License Number"`
	LocationEquipment   []IS    `hl7:"8,len=3,table=0261,display=Location Equipment"`
}

// Location relationship segment
//
// The LRL segment is used identify one location's relationship to another location, the nearest lab, pharmacy, etc.
type LRL struct {
	HL7                                     HL7Name `hl7:",name=LRL,type=s"`
	PrimaryKeyValue                         PL      `hl7:"1,required,len=200,display=Primary Key Value - LRL"`
	SegmentActionCode                       ID      `hl7:"2,len=3,table=0206,display=Segment Action Code"`
	SegmentUniqueKey                        *EI     `hl7:"3,len=80,display=Segment Unique Key"`
	LocationRelationshipID                  CE      `hl7:"4,required,len=80,table=0325,display=Location Relationship ID"`
	OrganizationalLocationRelationshipValue []XON   `hl7:"5,conditional,len=80,display=Organizational Location Relationship Value"`
	PatientLocationRelationshipValue        *PL     `hl7:"6,conditional,len=80,display=Patient Location Relationship Value"`
}

// Master file acknowledgment segment
//
// The MFA segment contains the following fields as defined in Figure 8-3 - MFA attributes.
type MFA struct {
	HL7                       HL7Name `hl7:",name=MFA,type=s"`
	RecordLevelEventCode      ID      `hl7:"1,required,len=3,table=0180,display=Record-Level Event Code"`
	MFNControlID              ST      `hl7:"2,conditional,len=20,display=MFN Control ID"`
	EventCompletionDateTime   TS      `hl7:"3,len=26,format=YMDHMS,display=Event Completion Date/Time"`
	MFNRecordLevelErrorReturn CE      `hl7:"4,required,len=60,table=0181,display=MFN Record Level Error Return"`
	PrimaryKeyValue           []CE    `hl7:"5,required,len=60,display=Primary Key Value   MFA"`
	PrimaryKeyValueType       []ID    `hl7:"6,required,len=3,table=0355,display=Primary Key Value Type - MFA"`
}

// Master file entry segment
//
// Figure 8-2. MFE attributes
type MFE struct {
	HL7                  HL7Name  `hl7:",name=MFE,type=s"`
	RecordLevelEventCode ID       `hl7:"1,required,len=3,table=0180,display=Record-Level Event Code"`
	MFNControlID         ST       `hl7:"2,conditional,len=20,display=MFN Control ID"`
	EffectiveDateTime    TS       `hl7:"3,len=26,format=YMDHMS,display=Effective Date/Time"`
	PrimaryKeyValue      []VARIES `hl7:"4,required,len=200,display=Primary Key Value - MFE"`
	PrimaryKeyValueType  []ID     `hl7:"5,required,len=3,table=0355,display=Primary Key Value Type"`
}

// Master file identification segment
//
// The fields in the MFI segment are defined in Figure 8-1 - MFI attributes .
type MFI struct {
	HL7                             HL7Name `hl7:",name=MFI,type=s"`
	MasterFileIdentifier            CE      `hl7:"1,required,len=60,table=0175,display=Master File Identifier"`
	MasterFileApplicationIdentifier *HD     `hl7:"2,len=180,display=Master File Application Identifier"`
	FileLevelEventCode              ID      `hl7:"3,required,len=3,table=0178,display=File-Level Event Code"`
	EnteredDateTime                 TS      `hl7:"4,len=26,format=YMDHMS,display=Entered Date/Time"`
	EffectiveDateTime               TS      `hl7:"5,len=26,format=YMDHMS,display=Effective Date/Time"`
	ResponseLevelCode               ID      `hl7:"6,required,len=2,table=0179,display=Response Level Code"`
}

// Merge patient information segment-
//
// The MRG segment provides receiving applications with information necessary to initiate the merging of patient data as well as groups of records. It is intended that this segment be used throughout the Standard to allow the merging of registration, accounting, and clinical records within specific applications.
type MRG struct {
	HL7                        HL7Name `hl7:",name=MRG,type=s"`
	PriorPatientIdentifierList []CX    `hl7:"1,required,len=20,display=Prior Patient Identifier List"`
	PriorAlternatePatientID    []CX    `hl7:"2,len=20,display=Prior Alternate Patient ID"`
	PriorPatientAccountNumber  *CX     `hl7:"3,len=20,display=Prior Patient Account Number"`
	PriorPatientID             *CX     `hl7:"4,len=20,display=Prior Patient ID"`
	PriorVisitNumber           *CX     `hl7:"5,len=20,display=Prior Visit Number"`
	PriorAlternateVisitID      *CX     `hl7:"6,len=20,display=Prior Alternate Visit ID"`
	PriorPatientName           []XPN   `hl7:"7,len=48,display=Prior Patient Name"`
}

// Message acknowledgment segment
//
// The MSA segment contains information sent while acknowledging another message.
type MSA struct {
	HL7                       HL7Name `hl7:",name=MSA,type=s"`
	AcknowledgementCode       ID      `hl7:"1,required,len=2,table=0008,display=Acknowledgement Code"`
	MessageControlID          ST      `hl7:"2,required,len=20,display=Message Control ID"`
	TextMessage               ST      `hl7:"3,len=80,display=Text Message"`
	ExpectedSequenceNumber    NM      `hl7:"4,len=15,display=Expected Sequence Number"`
	DelayedAcknowledgmentType ID      `hl7:"5,len=1,table=0102,display=Delayed Acknowledgment Type"`
	ErrorCondition            *CE     `hl7:"6,len=100,display=Error Condition"`
}

// Message header segment
//
// The MSH segment defines the intent, source, destination, and some specifics of the syntax of a message.
type MSH struct {
	HL7                                 HL7Name `hl7:",name=MSH,type=s"`
	FieldSeparator                      ST      `hl7:"1,noescape,fieldsep,omit,required,len=1,display=Field Separator"`
	EncodingCharacters                  ST      `hl7:"2,noescape,fieldchars,required,len=4,display=Encoding Characters"`
	SendingApplication                  *HD     `hl7:"3,len=180,table=0361,display=Sending Application"`
	SendingFacility                     *HD     `hl7:"4,len=180,table=0362,display=Sending Facility"`
	ReceivingApplication                *HD     `hl7:"5,len=180,table=0361,display=Receiving Application"`
	ReceivingFacility                   *HD     `hl7:"6,len=180,table=0362,display=Receiving Facility"`
	DateTimeOfMessage                   TS      `hl7:"7,len=26,format=YMDHMS,display=Date/Time Of Message"`
	Security                            ST      `hl7:"8,len=40,display=Security"`
	MessageType                         MSG     `hl7:"9,required,len=7,display=Message Type"`
	MessageControlID                    ST      `hl7:"10,required,len=20,display=Message Control ID"`
	ProcessingID                        PT      `hl7:"11,required,len=3,display=Processing ID"`
	VersionID                           VID     `hl7:"12,required,len=60,display=Version ID"`
	SequenceNumber                      NM      `hl7:"13,len=15,display=Sequence Number"`
	ContinuationPointer                 ST      `hl7:"14,len=180,display=Continuation Pointer"`
	AcceptAcknowledgmentType            ID      `hl7:"15,len=2,table=0155,display=Accept Acknowledgment Type"`
	ApplicationAcknowledgmentType       ID      `hl7:"16,len=2,table=0155,display=Application Acknowledgment Type"`
	CountryCode                         ID      `hl7:"17,len=2,table=ISO3166,display=Country Code"`
	CharacterSet                        []ID    `hl7:"18,len=16,table=0211,display=Character Set"`
	PrincipalLanguageOfMessage          *CE     `hl7:"19,len=60,display=Principal Language Of Message"`
	AlternateCharacterSetHandlingScheme ID      `hl7:"20,len=20,table=0356,display=Alternate Character Set Handling Scheme"`
}

// MessageStructureID returns the code for the message structure.
// Implements the interface for decoders.
func (s MSH) MessageStructureID() string {
	return s.MessageType.MessageStructureID()
}

// System Clock
//
// The NCK segment is used to allow the various systems on the network to synchronize their system clocks (system date and time).
type NCK struct {
	HL7            HL7Name `hl7:",name=NCK,type=s"`
	SystemDateTime TS      `hl7:"1,required,len=26,format=YMDHMS,display=System Date/Time"`
}

// Next of kin / associated parties segment
//
// The NK1 segment contains information about the patient's other related parties. Any associated parties may be identified. Utilizing NK1-1-set ID, multiple NK1 segments can be sent to patient accounts.
type NK1 struct {
	HL7                                      HL7Name `hl7:",name=NK1,type=s"`
	SetID                                    SI      `hl7:"1,seq,required,len=4,display=Set ID - NK1"`
	NKName                                   []XPN   `hl7:"2,len=48,display=NK Name"`
	Relationship                             *CE     `hl7:"3,len=60,table=0063,display=Relationship"`
	Address                                  []XAD   `hl7:"4,len=106,display=Address"`
	PhoneNumber                              []XTN   `hl7:"5,len=40,display=Phone Number"`
	BusinessPhoneNumber                      []XTN   `hl7:"6,len=40,display=Business Phone Number"`
	ContactRole                              *CE     `hl7:"7,len=60,table=0131,display=Contact Role"`
	StartDate                                DT      `hl7:"8,len=8,format=YMD,display=Start Date"`
	EndDate                                  DT      `hl7:"9,len=8,format=YMD,display=End Date"`
	NextOfKinAssociatedPartiesJobTitle       ST      `hl7:"10,len=60,display=Next of Kin / Associated Parties Job Title"`
	NextOfKinAssociatedPartiesJobCodeClass   *JCC    `hl7:"11,len=20,display=Next of Kin / Associated Parties Job Code/Class"`
	NextOfKinAssociatedPartiesEmployeeNumber *CX     `hl7:"12,len=20,display=Next of Kin / Associated Parties Employee Number"`
	OrganizationName                         []XON   `hl7:"13,len=90,display=Organization Name - NK1"`
	MaritalStatus                            *CE     `hl7:"14,len=80,table=0002,display=Marital Status"`
	Sex                                      IS      `hl7:"15,len=1,table=0001,display=Sex"`
	DateTimeOfBirth                          TS      `hl7:"16,len=26,format=YMDHMS,display=Date/Time Of Birth"`
	LivingDependency                         []IS    `hl7:"17,len=2,table=0223,display=Living Dependency"`
	AmbulatoryStatus                         []IS    `hl7:"18,len=2,table=0009,display=Ambulatory Status"`
	Citizenship                              []CE    `hl7:"19,len=80,table=0171,display=Citizenship"`
	PrimaryLanguage                          *CE     `hl7:"20,len=60,table=0296,display=Primary Language"`
	LivingArrangement                        IS      `hl7:"21,len=2,table=0220,display=Living Arrangement"`
	PublicityCode                            *CE     `hl7:"22,len=80,table=0215,display=Publicity Code"`
	ProtectionIndicator                      ID      `hl7:"23,len=1,table=0136,display=Protection Indicator"`
	StudentIndicator                         IS      `hl7:"24,len=2,table=0231,display=Student Indicator"`
	Religion                                 *CE     `hl7:"25,len=80,table=0006,display=Religion"`
	MotherSMaidenName                        []XPN   `hl7:"26,len=48,display=Mother s Maiden Name"`
	Nationality                              *CE     `hl7:"27,len=80,table=0212,display=Nationality"`
	EthnicGroup                              []CE    `hl7:"28,len=80,table=0189,display=Ethnic Group"`
	ContactReason                            []CE    `hl7:"29,len=80,table=0222,display=Contact Reason"`
	ContactPersonSName                       []XPN   `hl7:"30,len=48,display=Contact Person s Name"`
	ContactPersonSTelephoneNumber            []XTN   `hl7:"31,len=40,display=Contact Person s Telephone Number"`
	ContactPersonSAddress                    []XAD   `hl7:"32,len=106,display=Contact Person s Address"`
	NextOfKinAssociatedPartySIdentifiers     []CX    `hl7:"33,len=32,display=Next of Kin/Associated Party s Identifiers"`
	JobStatus                                IS      `hl7:"34,len=2,table=0311,display=Job Status"`
	Race                                     []CE    `hl7:"35,len=80,table=0005,display=Race"`
	Handicap                                 IS      `hl7:"36,len=2,table=0295,display=Handicap"`
	ContactPersonSocialSecurityNumber        ST      `hl7:"37,len=16,display=Contact Person Social Security Number"`
}

// Bed status update segment
//
// The NPU segment allows the updating of census (bed status) data without sending patient-specific data. An example might include changing the status of a bed from 'housekeeping' to 'unoccupied.'
type NPU struct {
	HL7         HL7Name `hl7:",name=NPU,type=s"`
	BedLocation PL      `hl7:"1,required,len=80,display=Bed Location"`
	BedStatus   IS      `hl7:"2,len=1,table=0116,display=Bed Status"`
}

// Status change
//
// The NSC segment can be used to request the start-up, shut-down, and/or migration (to a different cpu or file-server/file-system) of a particular application. It can also be used in an unsolicited update from one system to another to announce the start-up, shut-down, or migration of an application.
type NSC struct {
	HL7                HL7Name `hl7:",name=NSC,type=s"`
	NetworkChangeType  IS      `hl7:"1,required,len=4,table=0333,display=Network Change Type"`
	CurrentCPU         ST      `hl7:"2,len=30,display=Current CPU"`
	CurrentFileserver  ST      `hl7:"3,len=30,display=Current Fileserver"`
	CurrentApplication ST      `hl7:"4,len=30,display=Current Application"`
	CurrentFacility    ST      `hl7:"5,len=30,display=Current Facility"`
	NewCPU             ST      `hl7:"6,len=30,display=New CPU"`
	NewFileserver      ST      `hl7:"7,len=30,display=New Fileserver"`
	NewApplication     ST      `hl7:"8,len=30,display=New Application"`
	NewFacility        ST      `hl7:"9,len=30,display=New Facility"`
}

// Statistics
//
// The NST segment allows network statistical information to be passed between the various systems on the network.  Some fields in this segment refer to portions of lower level protocols; they contain information that can be used by network management applications monitoring the state of various network links
type NST struct {
	HL7                    HL7Name `hl7:",name=NST,type=s"`
	StatisticsAvailable    ID      `hl7:"1,required,len=1,table=0136,display=Statistics Available"`
	SourceIdentifier       ST      `hl7:"2,len=30,display=Source Identifier"`
	SourceType             ID      `hl7:"3,len=3,table=0332,display=Source Type"`
	StatisticsStart        TS      `hl7:"4,len=26,format=YMDHMS,display=Statistics Start"`
	StatisticsEnd          TS      `hl7:"5,len=26,format=YMDHMS,display=Statistics End"`
	ReceiveCharacterCount  NM      `hl7:"6,len=10,display=Receive Character Count"`
	SendCharacterCount     NM      `hl7:"7,len=10,display=Send Character Count"`
	MessagesReceived       NM      `hl7:"8,len=10,display=Messages Received"`
	MessagesSent           NM      `hl7:"9,len=10,display=Messages Sent"`
	ChecksumErrorsReceived NM      `hl7:"10,len=10,display=Checksum Errors Received"`
	LengthErrorsReceived   NM      `hl7:"11,len=10,display=Length Errors Received"`
	OtherErrorsReceived    NM      `hl7:"12,len=10,display=Other Errors Received"`
	ConnectTimeouts        NM      `hl7:"13,len=10,display=Connect Timeouts"`
	ReceiveTimeouts        NM      `hl7:"14,len=10,display=Receive Timeouts"`
	NetworkErrors          NM      `hl7:"15,len=10,display=Network Errors"`
}

// Notes and comments segment
//
// The NTE segment is defined here for inclusion in messages defined in other chapters. It is a common format for sending notes and comments.
type NTE struct {
	HL7             HL7Name `hl7:",name=NTE,type=s"`
	SetID           SI      `hl7:"1,seq,len=4,display=Set ID - NTE"`
	SourceOfComment ID      `hl7:"2,len=8,table=0105,display=Source of Comment"`
	Comment         []FT    `hl7:"3,len=65536,display=Comment"`
	CommentType     *CE     `hl7:"4,len=60,table=0364,display=Comment Type"`
}

// Observation request segment
//
// The Observation Request (OBR) segment is used to transmit information specific to an order for a diagnostic study or observation, physical exam, or assessment.
type OBR struct {
	HL7                                 HL7Name `hl7:",name=OBR,type=s"`
	SetID                               SI      `hl7:"1,seq,len=4,display=Set ID - OBR"`
	PlacerOrderNumber                   *EI     `hl7:"2,conditional,len=22,display=Placer Order Number"`
	FillerOrderNumber                   *EI     `hl7:"3,conditional,len=22,display=Filler Order Number"`
	UniversalServiceID                  CE      `hl7:"4,required,len=200,display=Universal Service ID"`
	Priority                            ID      `hl7:"5,len=2,display=Priority-OBR"`
	RequestedDateTime                   TS      `hl7:"6,len=26,format=YMDHMS,display=Requested Date/time"`
	ObservationDateTime                 TS      `hl7:"7,conditional,len=26,format=YMDHMS,display=Observation Date/Time  "`
	ObservationEndDateTime              TS      `hl7:"8,len=26,format=YMDHMS,display=Observation End Date/Time  "`
	CollectionVolume                    *CQ     `hl7:"9,len=20,display=Collection Volume *"`
	CollectorIdentifier                 []XCN   `hl7:"10,len=60,display=Collector Identifier *"`
	SpecimenActionCode                  ID      `hl7:"11,len=1,table=0065,display=Specimen Action Code *"`
	DangerCode                          *CE     `hl7:"12,len=60,display=Danger Code"`
	RelevantClinicalInfo                ST      `hl7:"13,len=300,display=Relevant Clinical Info."`
	SpecimenReceivedDateTime            TS      `hl7:"14,conditional,len=26,format=YMDHMS,display=Specimen Received Date/Time *"`
	SpecimenSource                      *SPS    `hl7:"15,len=300,display=Specimen Source"`
	OrderingProvider                    []XCN   `hl7:"16,len=80,display=Ordering Provider"`
	OrderCallbackPhoneNumber            []XTN   `hl7:"17,max=2,len=40,display=Order Callback Phone Number"`
	PlacerField1                        ST      `hl7:"18,len=60,display=Placer Field 1"`
	PlacerField2                        ST      `hl7:"19,len=60,display=Placer Field 2"`
	FillerField1                        ST      `hl7:"20,len=60,display=Filler Field 1 +"`
	FillerField2                        ST      `hl7:"21,len=60,display=Filler Field 2 +"`
	ResultsRptStatusChngDateTime        TS      `hl7:"22,conditional,len=26,format=YMDHMS,display=Results Rpt/Status Chng - Date/Time +"`
	ChargeToPractice                    *MOC    `hl7:"23,len=40,display=Charge to Practice +"`
	DiagnosticServSectID                ID      `hl7:"24,len=10,table=0074,display=Diagnostic Serv Sect ID"`
	ResultStatus                        ID      `hl7:"25,conditional,len=1,table=0123,display=Result Status +"`
	ParentResult                        *PRL    `hl7:"26,len=400,display=Parent Result +"`
	QuantityTiming                      []TQ    `hl7:"27,len=200,display=Quantity/Timing"`
	ResultCopiesTo                      []XCN   `hl7:"28,max=5,len=150,display=Result Copies To"`
	ParentNumber                        *EIP    `hl7:"29,len=200,display=Parent Number"`
	TransportationMode                  ID      `hl7:"30,len=20,table=0124,display=Transportation Mode"`
	ReasonForStudy                      []CE    `hl7:"31,len=300,display=Reason for Study"`
	PrincipalResultInterpreter          *NDL    `hl7:"32,len=200,display=Principal Result Interpreter +"`
	AssistantResultInterpreter          []NDL   `hl7:"33,len=200,display=Assistant Result Interpreter +"`
	Technician                          []NDL   `hl7:"34,len=200,display=Technician +"`
	Transcriptionist                    []NDL   `hl7:"35,len=200,display=Transcriptionist +"`
	ScheduledDateTime                   TS      `hl7:"36,len=26,format=YMDHMS,display=Scheduled Date/Time +"`
	NumberOfSampleContainers            NM      `hl7:"37,len=4,display=Number of Sample Containers *"`
	TransportLogisticsOfCollectedSample []CE    `hl7:"38,len=60,display=Transport Logistics of Collected Sample *"`
	CollectorSComment                   []CE    `hl7:"39,len=200,display=Collector s Comment *"`
	TransportArrangementResponsibility  *CE     `hl7:"40,len=60,display=Transport Arrangement Responsibility"`
	TransportArranged                   ID      `hl7:"41,len=30,table=0224,display=Transport Arranged"`
	EscortRequired                      ID      `hl7:"42,len=1,table=0225,display=Escort Required"`
	PlannedPatientTransportComment      []CE    `hl7:"43,len=200,display=Planned Patient Transport Comment"`
	ProcedureCode                       *CE     `hl7:"44,len=80,table=0088,display=Procedure Code"`
	ProcedureCodeModifier               []CE    `hl7:"45,len=80,table=0340,display=Procedure Code Modifier"`
}

// Observation/result segment
//
// The OBX segment is used to transmit a single observation or observation fragment. It represents the smallest indivisible unit of a report. Its structure is summarized in Figure 7-5.
type OBX struct {
	HL7                      HL7Name  `hl7:",name=OBX,type=s"`
	SetID                    SI       `hl7:"1,seq,len=4,display=Set ID - OBX"`
	ValueType                ID       `hl7:"2,conditional,len=3,table=0125,display=Value Type"`
	ObservationIdentifier    CE       `hl7:"3,required,len=80,display=Observation Identifier"`
	ObservationSubID         ST       `hl7:"4,conditional,len=20,display=Observation Sub-ID"`
	ObservationValue         []VARIES `hl7:"5,conditional,len=65536,display=Observation Value"`
	Units                    *CE      `hl7:"6,len=60,display=Units"`
	ReferencesRange          ST       `hl7:"7,len=60,display=References Range"`
	AbnormalFlags            []ID     `hl7:"8,max=5,len=5,table=0078,display=Abnormal Flags"`
	Probability              []NM     `hl7:"9,max=5,len=5,display=Probability"`
	NatureOfAbnormalTest     []ID     `hl7:"10,len=2,table=0080,display=Nature of Abnormal Test"`
	ObservationResultStatus  ID       `hl7:"11,required,len=1,table=0085,display=Observation Result Status"`
	DateLastObsNormalValues  TS       `hl7:"12,len=26,format=YMDHMS,display=Date Last Obs Normal Values"`
	UserDefinedAccessChecks  ST       `hl7:"13,len=20,display=User Defined Access Checks"`
	DateTimeOfTheObservation TS       `hl7:"14,len=26,format=YMDHMS,display=Date/Time of the Observation"`
	ProducersID              *CE      `hl7:"15,len=60,display=Producer's ID"`
	ResponsibleObserver      []XCN    `hl7:"16,len=80,display=Responsible Observer"`
	ObservationMethod        []CE     `hl7:"17,len=60,display=Observation Method"`
}

// Dietary orders, supplements, and preferences segment
//
// The ORC sequence items of interest to ODS are ORC-1-order control,ORC-2-placer order number, ORC-3-filler order number, ORC-7-quantity/timing, ORC-9-date/time of transaction, ORC-10-entered by, and ORC-11-verified by. For ORC-1-order control, the values may be New (NW), Cancel (CA), Discontinue Order Request (DC), Change (XO), Hold Order Request (HD), and Release Previous Hold (RL). The HD and RL codes could stop service for a specified length of time. ORC-7-quantity/timing should be used to specify whether an order is continuous or for one service period only. It is also useful for supplements which are part of a diet but only delivered, say, every day at night. Example:
type ODS struct {
	HL7                            HL7Name `hl7:",name=ODS,type=s"`
	Type                           ID      `hl7:"1,required,len=1,table=0159,display=Type"`
	ServicePeriod                  []CE    `hl7:"2,max=10,len=60,display=Service Period"`
	DietSupplementOrPreferenceCode []CE    `hl7:"3,required,max=20,len=60,display=Diet- Supplement- or Preference Code"`
	TextInstruction                []ST    `hl7:"4,max=2,len=80,display=Text Instruction"`
}

// Diet tray instructions segment
//
// This segment addresses tray instructions. These are independent of diet codes, supplements, and preferences and therefore get separate order numbers.
type ODT struct {
	HL7             HL7Name `hl7:",name=ODT,type=s"`
	TrayType        CE      `hl7:"1,required,len=60,table=0160,display=Tray Type"`
	ServicePeriod   []CE    `hl7:"2,max=10,len=60,display=Service Period"`
	TextInstruction ST      `hl7:"3,len=80,display=Text Instruction"`
}

// General segment
//
// The OM1 segment contains the attributes that apply to the definition of most observations. This segment also contains the field attributes that specify what additional segments might also be defined for this observation.
type OM1 struct {
	HL7                                                    HL7Name `hl7:",name=OM1,type=s"`
	SequenceNumberTestObservationMasterFile                NM      `hl7:"1,required,len=4,display=Sequence Number - Test/Observation Master File"`
	ProducersTestObservationID                             CE      `hl7:"2,required,len=200,display=Producer's Test/Observation ID"`
	PermittedDataTypes                                     []ID    `hl7:"3,len=12,table=0125,display=Permitted Data Types"`
	SpecimenRequired                                       ID      `hl7:"4,required,len=1,table=0136,display=Specimen Required"`
	ProducerID                                             CE      `hl7:"5,required,len=200,display=Producer ID"`
	ObservationDescription                                 TX      `hl7:"6,len=200,display=Observation Description"`
	OtherTestObservationIDsForTheObservation               *CE     `hl7:"7,len=200,display=Other Test/Observation IDs for the Observation"`
	OtherNames                                             []ST    `hl7:"8,required,len=200,display=Other Names"`
	PreferredReportNameForTheObservation                   ST      `hl7:"9,len=30,display=Preferred Report Name for the Observation"`
	PreferredShortNameOrMnemonicForObservation             ST      `hl7:"10,len=8,display=Preferred Short Name or Mnemonic for Observation"`
	PreferredLongNameForTheObservation                     ST      `hl7:"11,len=200,display=Preferred Long Name for the Observation"`
	Orderability                                           ID      `hl7:"12,len=1,table=0136,display=Orderability"`
	IdentityOfInstrumentUsedToPerformThisStudy             []CE    `hl7:"13,len=60,display=Identity of Instrument Used to Perform this Study"`
	CodedRepresentationOfMethod                            []CE    `hl7:"14,len=200,display=Coded Representation of Method"`
	Portable                                               ID      `hl7:"15,len=1,table=0136,display=Portable"`
	ObservationProducingDepartmentSection                  []CE    `hl7:"16,len=1,display=Observation Producing Department/Section"`
	TelephoneNumberOfSection                               *XTN    `hl7:"17,len=40,display=Telephone Number of Section"`
	NatureOfTestObservation                                IS      `hl7:"18,required,len=1,table=0174,display=Nature of Test/Observation"`
	ReportSubheader                                        *CE     `hl7:"19,len=200,display=Report Subheader"`
	ReportDisplayOrder                                     ST      `hl7:"20,len=20,display=Report Display Order"`
	DateTimeStampForAnyChangeInDefinitionForTheObservation TS      `hl7:"21,len=26,format=YMDHMS,display=Date/Time Stamp for any change in Definition for the Observation"`
	EffectiveDateTimeOfChange                              TS      `hl7:"22,len=26,format=YMDHMS,display=Effective Date/Time of Change"`
	TypicalTurnAroundTime                                  NM      `hl7:"23,len=20,display=Typical Turn-Around Time"`
	ProcessingTime                                         NM      `hl7:"24,len=20,display=Processing Time"`
	ProcessingPriority                                     []ID    `hl7:"25,len=40,table=0168,display=Processing Priority"`
	ReportingPriority                                      ID      `hl7:"26,len=5,table=0169,display=Reporting Priority"`
	OutsideSite                                            []CE    `hl7:"27,len=200,display=Outside Site"`
	AddressOfOutsideSite                                   []XAD   `hl7:"28,len=1000,display=Address of Outside Site"`
	PhoneNumberOfOutsideSite                               *XTN    `hl7:"29,len=400,display=Phone Number of Outside Site"`
	ConfidentialityCode                                    IS      `hl7:"30,len=1,table=0177,display=Confidentiality Code"`
	ObservationsRequiredToInterpretTheObs                  *CE     `hl7:"31,len=200,display=Observations Required to Interpret the Obs"`
	InterpretationOfObservations                           TX      `hl7:"32,len=65536,display=Interpretation of Observations"`
	ContraindicationsToObservations                        *CE     `hl7:"33,len=65536,display=Contraindications to Observations"`
	ReflexTestsObservations                                []CE    `hl7:"34,len=200,display=Reflex Tests/Observations"`
	RulesThatTriggerReflexTesting                          TX      `hl7:"35,len=80,display=Rules that Trigger Reflex Testing"`
	FixedCannedMessage                                     *CE     `hl7:"36,len=65536,display=Fixed Canned Message"`
	PatientPreparation                                     TX      `hl7:"37,len=200,display=Patient Preparation"`
	ProcedureMedication                                    *CE     `hl7:"38,len=200,display=Procedure Medication"`
	FactorsThatMayEffectTheObservation                     TX      `hl7:"39,len=200,display=Factors that may Effect the Observation"`
	TestObservationPerformanceSchedule                     []ST    `hl7:"40,len=60,display=Test/Observation Performance Schedule"`
	DescriptionOfTestMethods                               TX      `hl7:"41,len=65536,display=Description of Test Methods"`
	KindOfQuantityObserved                                 *CE     `hl7:"42,len=60,table=0254,display=Kind of Quantity Observed"`
	PointVersusInterval                                    *CE     `hl7:"43,len=60,table=0255,display=Point Versus Interval"`
	ChallengeInformation                                   TX      `hl7:"44,len=200,display=Challenge Information"`
	RelationshipModifier                                   *CE     `hl7:"45,len=200,table=0258,display=Relationship Modifier"`
	TargetAnatomicSiteOfTest                               *CE     `hl7:"46,len=200,display=Target Anatomic Site Of Test"`
	ModalityOfImagingMeasurement                           *CE     `hl7:"47,len=200,table=0259,display=Modality Of Imaging Measurement"`
}

// Numeric observation segment
//
// This segment contains the attributes of observations with continuous values (including those with data types of numeric, date, or time stamp). It can be applied to observation batteries of type A and C (see OM1-18-nature of test/observation ).
type OM2 struct {
	HL7                                     HL7Name       `hl7:",name=OM2,type=s"`
	SequenceNumberTestObservationMasterFile NM            `hl7:"1,len=4,display=Sequence Number - Test/Observation Master File"`
	UnitsOfMeasure                          *CE           `hl7:"2,len=60,display=Units of Measure"`
	RangeOfDecimalPrecision                 []NM          `hl7:"3,len=10,display=Range of Decimal Precision"`
	CorrespondingSIUnitsOfMeasure           *CE           `hl7:"4,len=60,display=Corresponding SI Units of Measure"`
	SIConversionFactor                      TX            `hl7:"5,len=60,display=SI Conversion Factor"`
	Reference                               *RFR          `hl7:"6,len=200,display=Reference"`
	CriticalRangeForOrdinalContinuousObs    *NR           `hl7:"7,len=200,display=Critical Range for Ordinal & Continuous Obs"`
	AbsoluteRangeForOrdinalContinuousObs    *CM_ABS_RANGE `hl7:"8,len=200,display=Absolute Range for Ordinal & Continuous Obs"`
	DeltaCheckCriteria                      []DLT         `hl7:"9,len=200,display=Delta Check Criteria"`
	MinimumMeaningfulIncrements             NM            `hl7:"10,len=20,display=Minimum Meaningful Increments"`
}

// Categorical test/observation segment
//
// This segment applies to free text and other non-numeric data types.
type OM3 struct {
	HL7                                         HL7Name `hl7:",name=OM3,type=s"`
	SequenceNumberTestObservationMasterFile     NM      `hl7:"1,len=4,display=Sequence Number - Test/Observation Master File"`
	PreferredCodingSystem                       *CE     `hl7:"2,len=60,display=Preferred Coding System"`
	ValidCodedAnswers                           *CE     `hl7:"3,len=60,display=Valid Coded  Answers "`
	NormalTextCodesForCategoricalObservations   []CE    `hl7:"4,len=200,display=Normal Text/Codes for Categorical Observations"`
	AbnormalTextCodesForCategoricalObservations *CE     `hl7:"5,len=200,display=Abnormal Text/Codes for Categorical Observations"`
	CriticalTextCodesForCategoricalObservations *CE     `hl7:"6,len=200,display=Critical Text Codes for Categorical Observations"`
	ValueType                                   ID      `hl7:"7,len=3,table=0125,display=Value Type"`
}

// Observations that require specimens segment
//
// This segment applies to observations/batteries that require a specimen for their performance. When an observation or battery requires multiple specimens for their performance (e.g., creatinine clearance requires a 24-hour urine specimen and a serum specimen), multiple segments may be included, one for each specimen type.
type OM4 struct {
	HL7                                     HL7Name `hl7:",name=OM4,type=s"`
	SequenceNumberTestObservationMasterFile NM      `hl7:"1,len=4,display=Sequence Number - Test/Observation Master File"`
	DerivedSpecimen                         ID      `hl7:"2,len=1,table=0170,display=Derived Specimen"`
	ContainerDescription                    TX      `hl7:"3,len=60,display=Container Description"`
	ContainerVolume                         NM      `hl7:"4,len=20,display=Container Volume"`
	ContainerUnits                          *CE     `hl7:"5,len=60,display=Container Units"`
	Specimen                                *CE     `hl7:"6,len=60,display=Specimen"`
	Additive                                *CE     `hl7:"7,len=60,display=Additive"`
	Preparation                             TX      `hl7:"8,len=10240,display=Preparation"`
	SpecialHandlingRequirements             TX      `hl7:"9,len=10240,display=Special Handling Requirements"`
	NormalCollectionVolume                  *CQ     `hl7:"10,len=20,display=Normal Collection Volume"`
	MinimumCollectionVolume                 *CQ     `hl7:"11,len=20,display=Minimum Collection Volume"`
	SpecimenRequirements                    TX      `hl7:"12,len=10240,display=Specimen Requirements"`
	SpecimenPriorities                      []ID    `hl7:"13,len=1,table=0027,display=Specimen Priorities"`
	SpecimenRetentionTime                   *CQ     `hl7:"14,len=20,display=Specimen Retention Time"`
}

// Observation batteries (sets)
//
// This segment contains the information about batteries and supersets (a nature code of F, P or S, as described in OM1-18-nature of test/observation ).
type OM5 struct {
	HL7                                                HL7Name `hl7:",name=OM5,type=s"`
	SequenceNumberTestObservationMasterFile            NM      `hl7:"1,len=4,display=Sequence Number - Test/Observation Master File"`
	TestObservationsIncludedWithinAnOrderedTestBattery []CE    `hl7:"2,len=200,display=Test/Observations Included within an Ordered Test Battery"`
	ObservationIDSuffixes                              ST      `hl7:"3,len=200,display=Observation ID Suffixes"`
}

// Observations that are calculated from other observations segment
//
// This segment contains the information about quantities that are derived from one or more other quantities or direct observations by mathematical or logical means.
type OM6 struct {
	HL7                                     HL7Name `hl7:",name=OM6,type=s"`
	SequenceNumberTestObservationMasterFile NM      `hl7:"1,len=4,display=Sequence Number - Test/Observation Master File"`
	DerivationRule                          TX      `hl7:"2,len=10240,display=Derivation Rule"`
}

// Common order segment
//
// The Common Order segment (ORC) is used to transmit fields that are common to all orders (all types of services that are requested). The ORC segment is required in the Order (ORM) message. ORC is mandatory in Order Acknowledgment (ORR) messages if an order detail segment is present, but is not required otherwise.
type ORC struct {
	HL7                           HL7Name `hl7:",name=ORC,type=s"`
	OrderControl                  ID      `hl7:"1,required,len=2,table=0119,display=Order Control"`
	PlacerOrderNumber             *EI     `hl7:"2,conditional,len=22,display=Placer Order Number"`
	FillerOrderNumber             *EI     `hl7:"3,conditional,len=22,display=Filler Order Number"`
	PlacerGroupNumber             *EI     `hl7:"4,len=22,display=Placer Group Number"`
	OrderStatus                   ID      `hl7:"5,len=2,table=0038,display=Order Status"`
	ResponseFlag                  ID      `hl7:"6,len=1,table=0121,display=Response Flag"`
	QuantityTiming                *TQ     `hl7:"7,len=200,display=Quantity/Timing"`
	ParentOrder                   *EIP    `hl7:"8,len=200,display=Parent Order"`
	DateTimeOfTransaction         TS      `hl7:"9,len=26,format=YMDHMS,display=Date/Time of Transaction"`
	EnteredBy                     []XCN   `hl7:"10,len=120,display=Entered By"`
	VerifiedBy                    []XCN   `hl7:"11,len=120,display=Verified By"`
	OrderingProvider              []XCN   `hl7:"12,len=120,display=Ordering Provider"`
	EntererSLocation              *PL     `hl7:"13,len=80,display=Enterer s Location"`
	CallBackPhoneNumber           []XTN   `hl7:"14,max=2,len=40,display=Call Back Phone Number"`
	OrderEffectiveDateTime        TS      `hl7:"15,len=26,format=YMDHMS,display=Order Effective Date/Time"`
	OrderControlCodeReason        *CE     `hl7:"16,len=200,display=Order Control Code Reason"`
	EnteringOrganization          *CE     `hl7:"17,len=60,display=Entering Organization"`
	EnteringDevice                *CE     `hl7:"18,len=60,display=Entering Device"`
	ActionBy                      []XCN   `hl7:"19,len=120,display=Action By"`
	AdvancedBeneficiaryNoticeCode *CE     `hl7:"20,len=40,table=0339,display=Advanced Beneficiary Notice Code"`
	OrderingFacilityName          []XON   `hl7:"21,len=60,display=Ordering Facility Name"`
	OrderingFacilityAddress       []XAD   `hl7:"22,len=106,display=Ordering Facility Address"`
	OrderingFacilityPhoneNumber   []XTN   `hl7:"23,len=48,display=Ordering Facility Phone Number"`
	OrderingProviderAddress       []XAD   `hl7:"24,len=106,display=Ordering Provider Address"`
}

// Possible causal relationship segment
//
// The PCR segment is used to communicate a potential or suspected relationship between a product (drug or device) or test and an event with detrimental effect on a patient. This segment identifies a potential causal relationship between the product identified in this segment and the event identified in the PEO segment.
type PCR struct {
	HL7                               HL7Name `hl7:",name=PCR,type=s"`
	ImplicatedProduct                 CE      `hl7:"1,required,len=60,display=Implicated Product"`
	GenericProduct                    IS      `hl7:"2,len=1,table=0249,display=Generic Product"`
	ProductClass                      *CE     `hl7:"3,len=60,display=Product Class"`
	TotalDurationOfTherapy            *CQ     `hl7:"4,len=8,display=Total Duration Of Therapy"`
	ProductManufactureDate            TS      `hl7:"5,len=26,format=YMDHMS,display=Product Manufacture Date"`
	ProductExpirationDate             TS      `hl7:"6,len=26,format=YMDHMS,display=Product Expiration Date"`
	ProductImplantationDate           TS      `hl7:"7,len=26,format=YMDHMS,display=Product Implantation Date"`
	ProductExplantationDate           TS      `hl7:"8,len=26,format=YMDHMS,display=Product Explantation Date"`
	SingleUseDevice                   IS      `hl7:"9,len=8,table=0244,display=Single Use Device"`
	IndicationForProductUse           *CE     `hl7:"10,len=60,display=Indication For Product Use"`
	ProductProblem                    IS      `hl7:"11,len=8,table=0245,display=Product Problem"`
	ProductSerialLotNumber            []ST    `hl7:"12,max=3,len=30,display=Product Serial/Lot Number"`
	ProductAvailableForInspection     IS      `hl7:"13,len=1,table=0246,display=Product Available For Inspection"`
	ProductEvaluationPerformed        *CE     `hl7:"14,len=60,display=Product Evaluation Performed"`
	ProductEvaluationStatus           *CE     `hl7:"15,len=60,table=0247,display=Product Evaluation Status"`
	ProductEvaluationResults          *CE     `hl7:"16,len=60,display=Product Evaluation Results"`
	EvaluatedProductSource            ID      `hl7:"17,len=8,table=0248,display=Evaluated Product Source"`
	DateProductReturnedToManufacturer TS      `hl7:"18,len=26,format=YMDHMS,display=Date Product Returned To Manufacturer"`
	DeviceOperatorQualifications      ID      `hl7:"19,len=1,table=0242,display=Device Operator Qualifications"`
	RelatednessAssessment             ID      `hl7:"20,len=1,table=0250,display=Relatedness Assessment"`
	ActionTakenInResponseToTheEvent   []ID    `hl7:"21,max=6,len=2,table=0251,display=Action Taken In Response To The Event"`
	EventCausalityObservations        []ID    `hl7:"22,max=6,len=2,table=0252,display=Event Causality Observations"`
	IndirectExposureMechanism         []ID    `hl7:"23,max=3,len=1,table=0253,display=Indirect Exposure Mechanism"`
}

// Patient Additional Demographic
//
// The patient additional demographic segment contains demographic information that is likely to change about the patient.
type PD1 struct {
	HL7                                HL7Name `hl7:",name=PD1,type=s"`
	LivingDependency                   []IS    `hl7:"1,len=2,table=0223,display=Living Dependency"`
	LivingArrangement                  IS      `hl7:"2,len=2,table=0220,display=Living Arrangement"`
	PatientPrimaryFacility             []XON   `hl7:"3,len=90,display=Patient Primary Facility"`
	PatientPrimaryCareProviderNameIDNo []XCN   `hl7:"4,len=90,display=Patient Primary Care Provider Name & ID No."`
	StudentIndicator                   IS      `hl7:"5,len=2,table=0231,display=Student Indicator"`
	Handicap                           IS      `hl7:"6,len=2,table=0295,display=Handicap"`
	LivingWill                         IS      `hl7:"7,len=2,table=0315,display=Living Will"`
	OrganDonor                         IS      `hl7:"8,len=2,table=0316,display=Organ Donor"`
	SeparateBill                       ID      `hl7:"9,len=1,table=0136,display=Separate Bill"`
	DuplicatePatient                   []CX    `hl7:"10,len=20,display=Duplicate Patient"`
	PublicityCode                      *CE     `hl7:"11,len=80,table=0215,display=Publicity Code"`
	ProtectionIndicator                ID      `hl7:"12,len=1,table=0136,display=Protection Indicator"`
}

// Product detail country segment
//
// Figure 7-24. PDC attributes
type PDC struct {
	HL7                     HL7Name `hl7:",name=PDC,type=s"`
	ManufacturerDistributor []XON   `hl7:"1,required,len=80,display=Manufacturer/Distributor"`
	Country                 CE      `hl7:"2,required,len=60,display=Country"`
	BrandName               ST      `hl7:"3,required,len=60,display=Brand Name"`
	DeviceFamilyName        ST      `hl7:"4,len=60,display=Device Family Name"`
	GenericName             *CE     `hl7:"5,len=60,display=Generic Name"`
	ModelIdentifier         []ST    `hl7:"6,len=60,display=Model Identifier"`
	CatalogueIdentifier     ST      `hl7:"7,len=60,display=Catalogue Identifier"`
	OtherIdentifier         []ST    `hl7:"8,len=60,display=Other Identifier"`
	ProductCode             *CE     `hl7:"9,len=60,display=Product Code"`
	MarketingBasis          ID      `hl7:"10,len=4,table=0330,display=Marketing Basis"`
	MarketingApprovalID     ST      `hl7:"11,len=60,display=Marketing Approval ID"`
	LabeledShelfLife        *CQ     `hl7:"12,len=12,display=Labeled Shelf Life"`
	ExpectedShelfLife       *CQ     `hl7:"13,len=12,display=Expected Shelf Life"`
	DateFirstMarketed       TS      `hl7:"14,len=26,format=YMDHMS,display=Date First Marketed"`
	DateLastMarketed        TS      `hl7:"15,len=26,format=YMDHMS,display=Date Last Marketed"`
}

// Product experience observation segment
//
// Details related to a particular clinical experience or event are embodied in the PEO segment. This segment can be used to characterize an event which might be attributed to a product to which the patient was exposed. Products with a possible causal relationship to the observed experience are described in the following PCR (possible causal relationship) segments. The message format was designed to be robust and includes many optional elements which may not be required for a particular regulatory purpose but allow a complete representation of the drug experience if needed.
type PEO struct {
	HL7                                   HL7Name `hl7:",name=PEO,type=s"`
	EventIdentifiersUsed                  []CE    `hl7:"1,len=60,display=Event Identifiers Used"`
	EventSymptomDiagnosisCode             []CE    `hl7:"2,len=60,display=Event Symptom/Diagnosis Code"`
	EventOnsetDateTime                    TS      `hl7:"3,required,len=26,format=YMDHMS,display=Event Onset Date/Time"`
	EventExacerbationDateTime             TS      `hl7:"4,len=26,format=YMDHMS,display=Event Exacerbation Date/Time"`
	EventImprovedDateTime                 TS      `hl7:"5,len=26,format=YMDHMS,display=Event Improved Date/Time"`
	EventEndedDataTime                    TS      `hl7:"6,len=26,format=YMDHMS,display=Event Ended Data/Time"`
	EventLocationOccurredAddress          []XAD   `hl7:"7,len=106,display=Event Location Occurred Address"`
	EventQualification                    []ID    `hl7:"8,len=1,table=0237,display=Event Qualification"`
	EventSerious                          ID      `hl7:"9,len=1,table=0238,display=Event Serious"`
	EventExpected                         ID      `hl7:"10,len=1,table=0239,display=Event Expected"`
	EventOutcome                          []ID    `hl7:"11,len=1,table=0240,display=Event Outcome"`
	PatientOutcome                        ID      `hl7:"12,len=1,table=0241,display=Patient Outcome"`
	EventDescriptionFromOthers            []FT    `hl7:"13,len=600,display=Event Description From Others"`
	EventFromOriginalReporter             []FT    `hl7:"14,len=600,display=Event From Original Reporter"`
	EventDescriptionFromPatient           []FT    `hl7:"15,len=600,display=Event Description From Patient"`
	EventDescriptionFromPractitioner      []FT    `hl7:"16,len=600,display=Event Description From Practitioner"`
	EventDescriptionFromAutopsy           []FT    `hl7:"17,len=600,display=Event Description From Autopsy"`
	CauseOfDeath                          []CE    `hl7:"18,len=60,display=Cause Of Death"`
	PrimaryObserverName                   []XPN   `hl7:"19,len=46,display=Primary Observer Name"`
	PrimaryObserverAddress                []XAD   `hl7:"20,len=106,display=Primary Observer Address"`
	PrimaryObserverTelephone              []XTN   `hl7:"21,len=40,display=Primary Observer Telephone"`
	PrimaryObserverSQualification         ID      `hl7:"22,len=1,table=0242,display=Primary Observer s Qualification"`
	ConfirmationProvidedBy                ID      `hl7:"23,len=1,table=0242,display=Confirmation Provided By"`
	PrimaryObserverAwareDateTime          TS      `hl7:"24,len=26,format=YMDHMS,display=Primary Observer Aware Date/Time"`
	PrimaryObserverSIdentityMayBeDivulged ID      `hl7:"25,len=1,table=0243,display=Primary Observer s identity May Be Divulged"`
}

// Product experience sender segment
//
// Figure 7-20. PES attributes
type PES struct {
	HL7                    HL7Name `hl7:",name=PES,type=s"`
	SenderOrganizationName []XON   `hl7:"1,len=80,display=Sender Organization Name"`
	SenderIndividualName   []XCN   `hl7:"2,len=60,display=Sender Individual Name"`
	SenderAddress          []XAD   `hl7:"3,len=200,display=Sender Address"`
	SenderTelephone        []XTN   `hl7:"4,len=44,display=Sender Telephone"`
	SenderEventIdentifier  *EI     `hl7:"5,len=75,display=Sender Event Identifier"`
	SenderSequenceNumber   NM      `hl7:"6,len=2,display=Sender Sequence Number"`
	SenderEventDescription []FT    `hl7:"7,len=600,display=Sender Event Description"`
	SenderComment          FT      `hl7:"8,len=600,display=Sender Comment"`
	SenderAwareDateTime    TS      `hl7:"9,len=26,format=YMDHMS,display=Sender Aware Date/Time"`
	EventReportDate        TS      `hl7:"10,required,len=26,format=YMDHMS,display=Event Report Date"`
	EventReportTimingType  []ID    `hl7:"11,max=2,len=3,table=0234,display=Event Report Timing/Type"`
	EventReportSource      ID      `hl7:"12,len=1,table=0235,display=Event Report Source"`
	EventReportedTo        []ID    `hl7:"13,len=1,table=0236,display=Event Reported To"`
}

// Patient identification segment
//
// The PID segment is used by all applications as the primary means of communicating patient identification information. This segment contains permanent patient identifying and demographic information that, for the most part, is not likely to change frequently.
type PID struct {
	HL7                         HL7Name `hl7:",name=PID,type=s"`
	SetID                       SI      `hl7:"1,seq,len=4,display=Set ID - PID"`
	PatientID                   CX      `hl7:"2,len=20,display=Patient ID"`
	PatientIdentifierList       []CX    `hl7:"3,required,len=20,display=Patient Identifier List"`
	AlternatePatientID          []CX    `hl7:"4,len=20,display=Alternate Patient ID - PID"`
	PatientName                 []XPN   `hl7:"5,required,len=48,display=Patient Name"`
	MotherSMaidenName           []XPN   `hl7:"6,len=48,display=Mother s Maiden Name"`
	DateTimeOfBirth             TS      `hl7:"7,len=26,format=YMDHMS,display=Date/Time Of Birth"`
	Sex                         IS      `hl7:"8,len=1,table=0001,display=Sex"`
	PatientAlias                []XPN   `hl7:"9,len=48,display=Patient Alias"`
	Race                        []CE    `hl7:"10,len=80,table=0005,display=Race"`
	PatientAddress              []XAD   `hl7:"11,len=106,display=Patient Address"`
	CountyCode                  IS      `hl7:"12,len=4,table=0289,display=County Code"`
	PhoneNumberHome             []XTN   `hl7:"13,len=40,display=Phone Number - Home"`
	PhoneNumberBusiness         []XTN   `hl7:"14,len=40,display=Phone Number - Business"`
	PrimaryLanguage             *CE     `hl7:"15,len=60,table=0296,display=Primary Language"`
	MaritalStatus               *CE     `hl7:"16,len=80,table=0002,display=Marital Status"`
	Religion                    *CE     `hl7:"17,len=80,table=0006,display=Religion"`
	PatientAccountNumber        *CX     `hl7:"18,len=20,display=Patient Account Number"`
	SSNNumberPatient            ST      `hl7:"19,len=16,display=SSN Number - Patient"`
	DriversLicenseNumberPatient *DLN    `hl7:"20,len=25,display=Driver's License Number - Patient"`
	MothersIdentifier           []CX    `hl7:"21,len=20,display=Mother's Identifier"`
	EthnicGroup                 []CE    `hl7:"22,len=80,table=0189,display=Ethnic Group"`
	BirthPlace                  ST      `hl7:"23,len=60,display=Birth Place"`
	MultipleBirthIndicator      ID      `hl7:"24,len=1,table=0136,display=Multiple Birth Indicator"`
	BirthOrder                  NM      `hl7:"25,len=2,display=Birth Order"`
	Citizenship                 []CE    `hl7:"26,len=80,table=0171,display=Citizenship"`
	VeteransMilitaryStatus      *CE     `hl7:"27,len=60,table=0172,display=Veterans Military Status"`
	Nationality                 *CE     `hl7:"28,len=80,table=0212,display=Nationality"`
	PatientDeathDateAndTime     TS      `hl7:"29,len=26,format=YMDHMS,display=Patient Death Date and Time"`
	PatientDeathIndicator       ID      `hl7:"30,len=1,table=0136,display=Patient Death Indicator"`
}

// Procedures segment
//
// The PR1 segment contains information relative to various types of procedures that can be performed on a patient. The PR1 segment can be used to send procedure information, for example: Surgical, Nuclear Medicine, X-ray with contrast, etc. The PR1 segment is used to send multiple procedures, for example, for medical records encoding or for billing systems.
type PR1 struct {
	HL7                     HL7Name `hl7:",name=PR1,type=s"`
	SetID                   SI      `hl7:"1,seq,required,len=4,display=Set ID - PR1"`
	ProcedureCodingMethod   IS      `hl7:"2,len=2,table=0089,display=Procedure Coding Method"`
	ProcedureCode           CE      `hl7:"3,required,len=80,table=0088,display=Procedure Code"`
	ProcedureDescription    ST      `hl7:"4,len=40,display=Procedure Description"`
	ProcedureDateTime       TS      `hl7:"5,required,len=26,format=YMDHMS,display=Procedure Date/Time"`
	ProcedureFunctionalType IS      `hl7:"6,required,len=2,table=0230,display=Procedure Functional Type"`
	ProcedureMinutes        NM      `hl7:"7,len=4,display=Procedure Minutes"`
	Anesthesiologist        []XCN   `hl7:"8,len=120,table=0010,display=Anesthesiologist"`
	AnesthesiaCode          IS      `hl7:"9,len=2,table=0019,display=Anesthesia Code"`
	AnesthesiaMinutes       NM      `hl7:"10,len=4,display=Anesthesia Minutes"`
	Surgeon                 []XCN   `hl7:"11,len=120,table=0010,display=Surgeon"`
	ProcedurePractitioner   []XCN   `hl7:"12,len=230,table=0010,display=Procedure Practitioner"`
	ConsentCode             *CE     `hl7:"13,len=60,table=0059,display=Consent Code"`
	ProcedurePriority       NM      `hl7:"14,len=2,display=Procedure Priority"`
	AssociatedDiagnosisCode *CE     `hl7:"15,len=80,table=0051,display=Associated Diagnosis Code"`
	ProcedureCodeModifier   []CE    `hl7:"16,len=80,table=0340,display=Procedure Code Modifier"`
}

// Practitioner detail segment
//
// The PRA segment adds detailed medical practitioner information to the personnel identified by the STF segment. A PRA segment may optionally follow an STF segment. A PRA segment must always have been preceded by a corresponding STF segment. The PRA segment may also be used for staff who work in healthcare who are not practitioners, but need to be certified, e.g., 'medical records staff.'
type PRA struct {
	HL7                   HL7Name `hl7:",name=PRA,type=s"`
	PrimaryKeyValue       CE      `hl7:"1,required,len=60,display=Primary Key Value - PRA"`
	PractitionerGroup     []CE    `hl7:"2,len=60,display=Practitioner Group"`
	PractitionerCategory  []IS    `hl7:"3,len=3,table=0186,display=Practitioner Category"`
	ProviderBilling       ID      `hl7:"4,len=1,table=0187,display=Provider Billing"`
	Specialty             []SPD   `hl7:"5,len=100,display=Specialty"`
	PractitionerIDNumbers []PLN   `hl7:"6,len=100,display=Practitioner ID Numbers"`
	Privileges            []PIP   `hl7:"7,len=200,display=Privileges"`
	DateEnteredPractice   DT      `hl7:"8,len=8,format=YMD,display=Date Entered Practice"`
}

// Problem Detail
//
// The problem detail segment contains the data necessary to add, update, correct, and delete the problems of a given individual.
type PRB struct {
	HL7                                               HL7Name `hl7:",name=PRB,type=s"`
	ActionCode                                        ID      `hl7:"1,required,len=2,table=0287,display=Action Code"`
	ActionDateTime                                    TS      `hl7:"2,required,len=26,format=YMDHMS,display=Action Date/Time"`
	ProblemID                                         CE      `hl7:"3,required,len=80,display=Problem ID"`
	ProblemInstanceID                                 EI      `hl7:"4,required,len=60,display=Problem Instance ID"`
	EpisodeOfCareID                                   *EI     `hl7:"5,len=60,display=Episode of Care ID"`
	ProblemListPriority                               NM      `hl7:"6,len=60,display=Problem List Priority"`
	ProblemEstablishedDateTime                        TS      `hl7:"7,len=26,format=YMDHMS,display=Problem Established Date/Time"`
	AnticipatedProblemResolutionDateTime              TS      `hl7:"8,len=26,format=YMDHMS,display=Anticipated Problem Resolution Date/Time"`
	ActualProblemResolutionDateTime                   TS      `hl7:"9,len=26,format=YMDHMS,display=Actual Problem Resolution Date/Time"`
	ProblemClassification                             *CE     `hl7:"10,len=80,display=Problem Classification"`
	ProblemManagementDiscipline                       []CE    `hl7:"11,len=80,display=Problem Management Discipline"`
	ProblemPersistence                                *CE     `hl7:"12,len=80,display=Problem Persistence"`
	ProblemConfirmationStatus                         *CE     `hl7:"13,len=80,display=Problem Confirmation Status"`
	ProblemLifeCycleStatus                            *CE     `hl7:"14,len=80,display=Problem Life Cycle Status"`
	ProblemLifeCycleStatusDateTime                    TS      `hl7:"15,len=26,format=YMDHMS,display=Problem Life Cycle Status Date/Time"`
	ProblemDateOfOnset                                TS      `hl7:"16,len=26,format=YMDHMS,display=Problem Date of Onset"`
	ProblemOnsetText                                  ST      `hl7:"17,len=80,display=Problem Onset Text"`
	ProblemRanking                                    *CE     `hl7:"18,len=80,display=Problem Ranking"`
	CertaintyOfProblem                                *CE     `hl7:"19,len=60,display=Certainty of Problem"`
	ProbabilityOfProblem                              NM      `hl7:"20,len=5,display=Probability of Problem"`
	IndividualAwarenessOfProblem                      *CE     `hl7:"21,len=80,display=Individual Awareness of Problem"`
	ProblemPrognosis                                  *CE     `hl7:"22,len=80,display=Problem Prognosis"`
	IndividualAwarenessOfPrognosis                    *CE     `hl7:"23,len=80,display=Individual Awareness of Prognosis"`
	FamilySignificantOtherAwarenessOfProblemPrognosis ST      `hl7:"24,len=200,display=Family/Significant Other Awareness of Problem/Prognosis"`
	SecuritySensitivity                               *CE     `hl7:"25,len=80,display=Security/Sensitivity"`
}

// Pricing segment
//
// The PRC segment contains the pricing information for the preceding CDM segment's chargeable item. It contains the fields which, for the same chargeable item, might vary depending upon facility or department or patient type. The preceding CDM segment contains the fields which, for one chargeable item, remain the same across facilities, departments, and patient types.
type PRC struct {
	HL7                 HL7Name `hl7:",name=PRC,type=s"`
	PrimaryKeyValue     CE      `hl7:"1,required,len=200,table=0132,display=Primary Key Value - PRC"`
	FacilityID          []CE    `hl7:"2,len=60,display=Facility ID - PRC"`
	Department          []CE    `hl7:"3,len=200,table=0184,display=Department"`
	ValidPatientClasses []IS    `hl7:"4,len=1,table=0004,display=Valid Patient Classes"`
	Price               []CP    `hl7:"5,conditional,len=12,display=Price"`
	Formula             []ST    `hl7:"6,len=200,display=Formula"`
	MinimumQuantity     NM      `hl7:"7,len=4,display=Minimum Quantity"`
	MaximumQuantity     NM      `hl7:"8,len=4,display=Maximum Quantity"`
	MinimumPrice        *MO     `hl7:"9,len=12,display=Minimum Price"`
	MaximumPrice        *MO     `hl7:"10,len=12,display=Maximum Price"`
	EffectiveStartDate  TS      `hl7:"11,len=26,format=YMDHMS,display=Effective Start Date"`
	EffectiveEndDate    TS      `hl7:"12,len=26,format=YMDHMS,display=Effective End Date"`
	PriceOverrideFlag   IS      `hl7:"13,len=1,table=0268,display=Price Override Flag"`
	BillingCategory     []CE    `hl7:"14,len=60,table=0293,display=Billing Category"`
	ChargeableFlag      ID      `hl7:"15,len=1,table=0136,display=Chargeable Flag"`
	ActiveInactiveFlag  ID      `hl7:"16,len=1,table=0183,display=Active/Inactive Flag"`
	Cost                *MO     `hl7:"17,len=12,display=Cost"`
	ChargeOnIndicator   IS      `hl7:"18,len=1,table=0269,display=Charge On Indicator"`
}

// Provider Data
//
// This segment will be employed as part of a patient referral message and its related transactions. The PRD segment contains data specifically focused on a referral, and it is inter-enterprise in nature. The justification for this new segment comes from the fact that we are dealing with referrals that are external to the facilities that received them. Therefore, using a segment such as the current PV1 would be inadequate for all the return information that may be required by the receiving facility or application. In addition, the PV1 does not always provide information sufficient to enable the external facility to make a complete identification of the referring entity. The information contained in the PRD segment will include the referring provider, the referred-to provider, the referred-to location or service, and the referring provider clinic address.
type PRD struct {
	HL7                              HL7Name `hl7:",name=PRD,type=s"`
	ProviderRole                     []CE    `hl7:"1,required,len=200,table=0286,display=Provider Role"`
	ProviderName                     []XPN   `hl7:"2,len=106,display=Provider Name"`
	ProviderAddress                  []XAD   `hl7:"3,len=60,display=Provider Address"`
	ProviderLocation                 *PL     `hl7:"4,len=60,display=Provider Location"`
	ProviderCommunicationInformation []XTN   `hl7:"5,len=100,display=Provider Communication Information"`
	PreferredMethodOfContact         *CE     `hl7:"6,len=200,table=0185,display=Preferred Method Of Contact"`
	ProviderIdentifiers              []PI    `hl7:"7,len=100,display=Provider Identifiers"`
	EffectiveStartDateOfProviderRole TS      `hl7:"8,len=26,format=YMDHMS,display=Effective Start Date of Provider Role"`
	EffectiveEndDateOfProviderRole   TS      `hl7:"9,len=26,format=YMDHMS,display=Effective End Date of Provider Role"`
}

// Product summary header segment
//
// Figure 7-23. PSH attributes
type PSH struct {
	HL7                                                HL7Name `hl7:",name=PSH,type=s"`
	ReportType                                         ST      `hl7:"1,required,len=60,display=Report Type"`
	ReportFormIdentifier                               ST      `hl7:"2,len=60,display=Report Form Identifier"`
	ReportDate                                         TS      `hl7:"3,required,len=26,format=YMDHMS,display=Report Date"`
	ReportIntervalStartDate                            TS      `hl7:"4,len=26,format=YMDHMS,display=Report Interval Start Date"`
	ReportIntervalEndDate                              TS      `hl7:"5,len=26,format=YMDHMS,display=Report Interval End Date"`
	QuantityManufactured                               *CQ     `hl7:"6,len=12,display=Quantity Manufactured"`
	QuantityDistributed                                *CQ     `hl7:"7,len=12,display=Quantity Distributed"`
	QuantityDistributedMethod                          ID      `hl7:"8,len=1,table=0329,display=Quantity Distributed Method"`
	QuantityDistributedComment                         FT      `hl7:"9,len=600,display=Quantity Distributed Comment"`
	QuantityInUse                                      *CQ     `hl7:"10,len=12,display=Quantity in Use"`
	QuantityInUseMethod                                ID      `hl7:"11,len=1,table=0329,display=Quantity in Use Method"`
	QuantityInUseComment                               FT      `hl7:"12,len=600,display=Quantity in Use Comment"`
	NumberOfProductExperienceReportsFiledByFacility    []NM    `hl7:"13,max=8,len=2,display=Number of Product Experience Reports Filed by Facility"`
	NumberOfProductExperienceReportsFiledByDistributor []NM    `hl7:"14,max=8,len=2,display=Number of Product Experience Reports Filed by Distributor"`
}

// Pathway
//
// The pathway segment contains the data necessary to add, update, correct, and delete from the record pathways that are utilized to address an individual's health care.
type PTH struct {
	HL7                                  HL7Name `hl7:",name=PTH,type=s"`
	ActionCode                           ID      `hl7:"1,required,len=2,table=0287,display=Action Code"`
	PathwayID                            CE      `hl7:"2,required,len=80,display=Pathway ID"`
	PathwayInstanceID                    EI      `hl7:"3,required,len=60,display=Pathway Instance ID"`
	PathwayEstablishedDateTime           TS      `hl7:"4,required,len=26,format=YMDHMS,display=Pathway Established Date/Time"`
	PathwayLifeCycleStatus               *CE     `hl7:"5,len=80,display=Pathway Life Cycle Status"`
	ChangePathwayLifeCycleStatusDateTime TS      `hl7:"6,conditional,len=26,format=YMDHMS,display=Change Pathway Life Cycle Status Date/Time"`
}

// Patient visit segment
//
// The PV1 segment is used by Registration/Patient Administration applications to communicate information on a visit-specific basis. This segment can be used to send multiple-visit statistic records to the same patient account or single-visit records to more than one account. Individual sites must determine the use for this segment.
type PV1 struct {
	HL7                     HL7Name `hl7:",name=PV1,type=s"`
	SetID                   SI      `hl7:"1,seq,len=4,display=Set ID - PV1"`
	PatientClass            IS      `hl7:"2,required,len=1,table=0004,display=Patient Class"`
	AssignedPatientLocation *PL     `hl7:"3,len=80,display=Assigned Patient Location"`
	AdmissionType           IS      `hl7:"4,len=2,table=0007,display=Admission Type"`
	PreadmitNumber          *CX     `hl7:"5,len=20,display=Preadmit Number"`
	PriorPatientLocation    *PL     `hl7:"6,len=80,display=Prior Patient Location"`
	AttendingDoctor         []XCN   `hl7:"7,len=60,table=0010,display=Attending Doctor"`
	ReferringDoctor         []XCN   `hl7:"8,len=60,table=0010,display=Referring Doctor"`
	ConsultingDoctor        []XCN   `hl7:"9,len=60,table=0010,display=Consulting Doctor"`
	HospitalService         IS      `hl7:"10,len=3,table=0069,display=Hospital Service"`
	TemporaryLocation       *PL     `hl7:"11,len=80,display=Temporary Location"`
	PreadmitTestIndicator   IS      `hl7:"12,len=2,table=0087,display=Preadmit Test Indicator"`
	ReAdmissionIndicator    IS      `hl7:"13,len=2,table=0092,display=Re-admission Indicator"`
	AdmitSource             IS      `hl7:"14,len=3,table=0023,display=Admit Source"`
	AmbulatoryStatus        []IS    `hl7:"15,len=2,table=0009,display=Ambulatory Status"`
	VIPIndicator            IS      `hl7:"16,len=2,table=0099,display=VIP Indicator"`
	AdmittingDoctor         []XCN   `hl7:"17,len=60,table=0010,display=Admitting Doctor"`
	PatientType             IS      `hl7:"18,len=2,table=0018,display=Patient Type"`
	VisitNumber             *CX     `hl7:"19,len=20,display=Visit Number"`
	FinancialClass          []FC    `hl7:"20,len=50,display=Financial Class"`
	ChargePriceIndicator    IS      `hl7:"21,len=2,table=0032,display=Charge Price Indicator"`
	CourtesyCode            IS      `hl7:"22,len=2,table=0045,display=Courtesy Code"`
	CreditRating            IS      `hl7:"23,len=2,table=0046,display=Credit Rating"`
	ContractCode            []IS    `hl7:"24,len=2,table=0044,display=Contract Code"`
	ContractEffectiveDate   []DT    `hl7:"25,len=8,format=YMD,display=Contract Effective Date"`
	ContractAmount          []NM    `hl7:"26,len=12,display=Contract Amount"`
	ContractPeriod          []NM    `hl7:"27,len=3,display=Contract Period"`
	InterestCode            IS      `hl7:"28,len=2,table=0073,display=Interest Code"`
	TransferToBadDebtCode   IS      `hl7:"29,len=1,table=0110,display=Transfer to Bad Debt Code"`
	TransferToBadDebtDate   DT      `hl7:"30,len=8,format=YMD,display=Transfer to Bad Debt Date"`
	BadDebtAgencyCode       IS      `hl7:"31,len=10,table=0021,display=Bad Debt Agency Code"`
	BadDebtTransferAmount   NM      `hl7:"32,len=12,display=Bad Debt Transfer Amount"`
	BadDebtRecoveryAmount   NM      `hl7:"33,len=12,display=Bad Debt Recovery Amount"`
	DeleteAccountIndicator  IS      `hl7:"34,len=1,table=0111,display=Delete Account Indicator"`
	DeleteAccountDate       DT      `hl7:"35,len=8,format=YMD,display=Delete Account Date"`
	DischargeDisposition    IS      `hl7:"36,len=3,table=0112,display=Discharge Disposition"`
	DischargedToLocation    *DLD    `hl7:"37,len=25,display=Discharged to Location"`
	DietType                *CE     `hl7:"38,len=80,table=0114,display=Diet Type"`
	ServicingFacility       IS      `hl7:"39,len=2,table=0115,display=Servicing Facility"`
	BedStatus               IS      `hl7:"40,len=1,table=0116,display=Bed Status"`
	AccountStatus           IS      `hl7:"41,len=2,table=0117,display=Account Status"`
	PendingLocation         *PL     `hl7:"42,len=80,display=Pending Location"`
	PriorTemporaryLocation  *PL     `hl7:"43,len=80,display=Prior Temporary Location"`
	AdmitDateTime           TS      `hl7:"44,len=26,format=YMDHMS,display=Admit Date/Time"`
	DischargeDateTime       TS      `hl7:"45,len=26,format=YMDHMS,display=Discharge Date/Time"`
	CurrentPatientBalance   NM      `hl7:"46,len=12,display=Current Patient Balance"`
	TotalCharges            NM      `hl7:"47,len=12,display=Total Charges"`
	TotalAdjustments        NM      `hl7:"48,len=12,display=Total Adjustments"`
	TotalPayments           NM      `hl7:"49,len=12,display=Total Payments"`
	AlternateVisitID        *CX     `hl7:"50,len=20,display=Alternate Visit ID"`
	VisitIndicator          IS      `hl7:"51,len=1,table=0326,display=Visit Indicator"`
	OtherHealthcareProvider []XCN   `hl7:"52,len=60,table=0010,display=Other Healthcare Provider"`
}

// Patient visit - additional information segment
//
// The PV2 segment is a continuation of visit-specific information contained on the PV1 segment.
type PV2 struct {
	HL7                               HL7Name `hl7:",name=PV2,type=s"`
	PriorPendingLocation              *PL     `hl7:"1,conditional,len=80,display=Prior Pending Location"`
	AccommodationCode                 *CE     `hl7:"2,len=60,table=0129,display=Accommodation Code"`
	AdmitReason                       *CE     `hl7:"3,len=60,display=Admit Reason"`
	TransferReason                    *CE     `hl7:"4,len=60,display=Transfer Reason"`
	PatientValuables                  []ST    `hl7:"5,len=25,display=Patient Valuables"`
	PatientValuablesLocation          ST      `hl7:"6,len=25,display=Patient Valuables Location"`
	VisitUserCode                     IS      `hl7:"7,len=2,table=0130,display=Visit User Code"`
	ExpectedAdmitDateTime             TS      `hl7:"8,len=26,format=YMDHMS,display=Expected Admit Date/Time"`
	ExpectedDischargeDateTime         TS      `hl7:"9,len=26,format=YMDHMS,display=Expected Discharge Date/Time"`
	EstimatedLengthOfInpatientStay    NM      `hl7:"10,len=3,display=Estimated Length of Inpatient Stay"`
	ActualLengthOfInpatientStay       NM      `hl7:"11,len=3,display=Actual Length of Inpatient Stay"`
	VisitDescription                  ST      `hl7:"12,len=50,display=Visit Description"`
	ReferralSourceCode                []XCN   `hl7:"13,len=90,display=Referral Source Code"`
	PreviousServiceDate               DT      `hl7:"14,len=8,format=YMD,display=Previous Service Date"`
	EmploymentIllnessRelatedIndicator ID      `hl7:"15,len=1,table=0136,display=Employment Illness Related Indicator"`
	PurgeStatusCode                   IS      `hl7:"16,len=1,table=0213,display=Purge Status Code"`
	PurgeStatusDate                   DT      `hl7:"17,len=8,format=YMD,display=Purge Status Date"`
	SpecialProgramCode                IS      `hl7:"18,len=2,table=0214,display=Special Program Code"`
	RetentionIndicator                ID      `hl7:"19,len=1,table=0136,display=Retention Indicator"`
	ExpectedNumberOfInsurancePlans    NM      `hl7:"20,len=1,display=Expected Number of Insurance Plans"`
	VisitPublicityCode                IS      `hl7:"21,len=1,table=0215,display=Visit Publicity Code"`
	VisitProtectionIndicator          ID      `hl7:"22,len=1,table=0136,display=Visit Protection Indicator"`
	ClinicOrganizationName            []XON   `hl7:"23,len=90,display=Clinic Organization Name"`
	PatientStatusCode                 IS      `hl7:"24,len=2,table=0216,display=Patient Status Code"`
	VisitPriorityCode                 IS      `hl7:"25,len=1,table=0217,display=Visit Priority Code"`
	PreviousTreatmentDate             DT      `hl7:"26,len=8,format=YMD,display=Previous Treatment Date"`
	ExpectedDischargeDisposition      IS      `hl7:"27,len=2,table=0112,display=Expected Discharge Disposition"`
	SignatureOnFileDate               DT      `hl7:"28,len=8,format=YMD,display=Signature on File Date"`
	FirstSimilarIllnessDate           DT      `hl7:"29,len=8,format=YMD,display=First Similar Illness Date"`
	PatientChargeAdjustmentCode       *CE     `hl7:"30,len=80,table=0218,display=Patient Charge Adjustment Code"`
	RecurringServiceCode              IS      `hl7:"31,len=2,table=0219,display=Recurring Service Code"`
	BillingMediaCode                  ID      `hl7:"32,len=1,table=0136,display=Billing Media Code"`
	ExpectedSurgeryDateTime           TS      `hl7:"33,len=26,format=YMDHMS,display=Expected Surgery Date & Time"`
	MilitaryPartnershipCode           ID      `hl7:"34,len=1,table=0136,display=Military Partnership Code"`
	MilitaryNonAvailabilityCode       ID      `hl7:"35,len=1,table=0136,display=Military Non-Availability Code"`
	NewbornBabyIndicator              ID      `hl7:"36,len=1,table=0136,display=Newborn Baby Indicator"`
	BabyDetainedIndicator             ID      `hl7:"37,len=1,table=0136,display=Baby Detained Indicator"`
}

// Query Acknowledgement
//
// The QAK segment contains information sent with responses to a query. Although the QAK segment is required in the responses to the enhanced queries (see section 2.19), it may appear as an optional segment placed after the (optional) ERR segment in any query response (message) to any original mode query.
type QAK struct {
	HL7                 HL7Name `hl7:",name=QAK,type=s"`
	QueryTag            ST      `hl7:"1,conditional,len=32,display=Query Tag"`
	QueryResponseStatus ID      `hl7:"2,len=2,table=0208,display=Query Response Status"`
}

// Original-style query definition segment
//
// The QRD segment is used to define a query.
type QRD struct {
	HL7                      HL7Name `hl7:",name=QRD,type=s"`
	QueryDateTime            TS      `hl7:"1,required,len=26,format=YMDHMS,display=Query Date/Time"`
	QueryFormatCode          ID      `hl7:"2,required,len=1,table=0106,display=Query Format Code"`
	QueryPriority            ID      `hl7:"3,required,len=1,table=0091,display=Query Priority"`
	QueryID                  ST      `hl7:"4,required,len=10,display=Query ID"`
	DeferredResponseType     ID      `hl7:"5,len=1,table=0107,display=Deferred Response Type"`
	DeferredResponseDateTime TS      `hl7:"6,len=26,format=YMDHMS,display=Deferred Response Date/Time"`
	QuantityLimitedRequest   CQ      `hl7:"7,required,len=10,display=Quantity Limited Request"`
	WhoSubjectFilter         []XCN   `hl7:"8,required,len=60,display=Who Subject Filter"`
	WhatSubjectFilter        []CE    `hl7:"9,required,len=60,table=0048,display=What Subject Filter"`
	WhatDepartmentDataCode   []CE    `hl7:"10,required,len=60,display=What Department Data Code"`
	WhatDataCodeValueQual    []VR    `hl7:"11,len=20,display=What Data Code Value Qual."`
	QueryResultsLevel        ID      `hl7:"12,len=1,table=0108,display=Query Results Level"`
}

// Original style query filter segment
//
// The QRF segment is used with the QRD segment to further refine the content of an original style query.
type QRF struct {
	HL7                          HL7Name `hl7:",name=QRF,type=s"`
	WhereSubjectFilter           []ST    `hl7:"1,required,len=20,display=Where Subject Filter"`
	WhenDataStartDateTime        TS      `hl7:"2,len=26,format=YMDHMS,display=When Data Start Date/Time"`
	WhenDataEndDateTime          TS      `hl7:"3,len=26,format=YMDHMS,display=When Data End Date/Time"`
	WhatUserQualifier            []ST    `hl7:"4,len=60,display=What User Qualifier"`
	OtherQRYSubjectFilter        []ST    `hl7:"5,len=60,display=Other QRY Subject Filter"`
	WhichDateTimeQualifier       []ID    `hl7:"6,len=12,table=0156,display=Which Date/Time Qualifier"`
	WhichDateTimeStatusQualifier []ID    `hl7:"7,len=12,table=0157,display=Which Date/Time Status Qualifier"`
	DateTimeSelectionQualifier   []ID    `hl7:"8,len=12,table=0158,display=Date/Time Selection Qualifier"`
	WhenQuantityTimingQualifier  *TQ     `hl7:"9,len=60,display=When Quantity/Timing Qualifier"`
}

// Table row definition segment
//
// The RDF segment defines the content of the row data segments (RDT) in the Tabular Data Response Message (TBR). It is used in two ways:
type RDF struct {
	HL7                   HL7Name `hl7:",name=RDF,type=s"`
	NumberOfColumnsPerRow NM      `hl7:"1,required,len=3,display=Number of Columns per Row"`
	ColumnDescription     []RCD   `hl7:"2,required,len=40,display=Column Description"`
}

// Table row data segment
//
// The RDT segment contains the row data of the tabular data response message (TBR).
type RDT struct {
	HL7         HL7Name `hl7:",name=RDT,type=s"`
	ColumnValue VARIES  `hl7:"1,required,display=Column Value"`
}

// Referral Infomation
//
// This segment represents information that may be useful when sending referrals from the referring provider to the referred-to provider.
type RF1 struct {
	HL7                           HL7Name `hl7:",name=RF1,type=s"`
	ReferralStatus                *CE     `hl7:"1,len=200,table=0283,display=Referral Status"`
	ReferralPriority              *CE     `hl7:"2,len=200,table=0280,display=Referral Priority"`
	ReferralType                  *CE     `hl7:"3,len=200,table=0281,display=Referral Type"`
	ReferralDisposition           []CE    `hl7:"4,len=200,table=0282,display=Referral Disposition"`
	ReferralCategory              *CE     `hl7:"5,len=200,table=0284,display=Referral Category"`
	OriginatingReferralIdentifier EI      `hl7:"6,required,len=30,display=Originating Referral Identifier"`
	EffectiveDate                 TS      `hl7:"7,len=26,format=YMDHMS,display=Effective Date"`
	ExpirationDate                TS      `hl7:"8,len=26,format=YMDHMS,display=Expiration Date"`
	ProcessDate                   TS      `hl7:"9,len=26,format=YMDHMS,display=Process Date"`
	ReferralReason                []CE    `hl7:"10,len=200,table=0336,display=Referral Reason"`
	ExternalReferralIdentifier    []EI    `hl7:"11,len=30,display=External Referral Identifier"`
}

// Resource group segment
//
// The RGS segment is used to identify relationships between resources identified for a scheduled event. This segment can be used, on a site specified basis, to identify groups of resources that are used together within a scheduled event, or to describe some other relationship between resources. To specify related groups of resources within a message, begin each group with an RGS segment, and then follow that RGS with one or more of the Appointment Information segments (AIG, AIL, AIS, or AIP).
type RGS struct {
	HL7               HL7Name `hl7:",name=RGS,type=s"`
	SetID             SI      `hl7:"1,seq,required,len=4,display=Set ID - RGS"`
	SegmentActionCode ID      `hl7:"2,conditional,len=3,table=0206,display=Segment Action Code"`
	ResourceGroupID   *CE     `hl7:"3,len=200,display=Resource Group ID"`
}

// Role
//
// The role segment contains the data necessary to add, update, correct, and delete from the record persons involved, as well as their functional involvement with the activity being transmitted.
type ROL struct {
	HL7               HL7Name `hl7:",name=ROL,type=s"`
	RoleInstanceID    EI      `hl7:"1,required,len=60,display=Role Instance ID"`
	ActionCode        ID      `hl7:"2,required,len=2,table=0287,display=Action Code"`
	Role              CE      `hl7:"3,required,len=80,display=Role-ROL"`
	RolePerson        []XCN   `hl7:"4,required,len=80,display=Role Person"`
	RoleBeginDateTime TS      `hl7:"5,len=26,format=YMDHMS,display=Role Begin Date/Time"`
	RoleEndDateTime   TS      `hl7:"6,len=26,format=YMDHMS,display=Role End Date/Time"`
	RoleDuration      *CE     `hl7:"7,len=80,display=Role Duration"`
	RoleActionReason  *CE     `hl7:"8,len=80,display=Role Action Reason"`
}

// Requisition detail-1 segment
//
// RQ1 contains additional detail for each nonstock requisitioned item. This segment definition is paired with a preceding RQD segment.
type RQ1 struct {
	HL7                  HL7Name `hl7:",name=RQ1,type=s"`
	AnticipatedPrice     ST      `hl7:"1,len=10,display=Anticipated Price"`
	ManufacturerID       *CE     `hl7:"2,conditional,len=60,display=Manufacturer ID"`
	ManufacturerSCatalog ST      `hl7:"3,conditional,len=16,display=Manufacturer s Catalog"`
	VendorID             *CE     `hl7:"4,conditional,len=60,display=Vendor ID"`
	VendorCatalog        ST      `hl7:"5,conditional,len=16,display=Vendor Catalog"`
	Taxable              ID      `hl7:"6,len=1,table=0136,display=Taxable"`
	SubstituteAllowed    ID      `hl7:"7,len=1,table=0136,display=Substitute Allowed"`
}

// Requisition detail segment
//
// RQD contains the detail for each requisitioned item. See assumptions above.
type RQD struct {
	HL7                      HL7Name `hl7:",name=RQD,type=s"`
	RequisitionLineNumber    SI      `hl7:"1,len=4,display=Requisition Line Number"`
	ItemCodeInternal         *CE     `hl7:"2,conditional,len=60,display=Item Code - Internal"`
	ItemCodeExternal         *CE     `hl7:"3,conditional,len=60,display=Item Code - External"`
	HospitalItemCode         *CE     `hl7:"4,conditional,len=60,display=Hospital Item Code"`
	RequisitionQuantity      NM      `hl7:"5,len=6,display=Requisition Quantity"`
	RequisitionUnitOfMeasure *CE     `hl7:"6,len=60,display=Requisition Unit of Measure"`
	DeptCostCenter           IS      `hl7:"7,len=30,table=0319,display=Dept. Cost Center"`
	ItemNaturalAccountCode   IS      `hl7:"8,len=30,table=0320,display=Item Natural Account Code"`
	DeliverToID              *CE     `hl7:"9,len=60,display=Deliver To ID"`
	DateNeeded               DT      `hl7:"10,len=8,format=YMD,display=Date Needed"`
}

// Pharmacy/treatment administration segment
//
// The ORC must have the filler order number and the order control code RE. As a site-specific variant, the RXO and associated RXCs and/or the RXE (and associated RXCs) may be present if the receiving application needs any of their data. The RXA carries the administration data.
type RXA struct {
	HL7                           HL7Name `hl7:",name=RXA,type=s"`
	GiveSubIDCounter              NM      `hl7:"1,required,len=4,display=Give Sub-ID Counter"`
	AdministrationSubIDCounter    NM      `hl7:"2,required,len=4,display=Administration Sub-ID Counter"`
	DateTimeStartOfAdministration TS      `hl7:"3,required,len=26,format=YMDHMS,display=Date/Time Start of Administration"`
	DateTimeEndOfAdministration   TS      `hl7:"4,required,len=26,format=YMDHMS,display=Date/Time End of Administration"`
	AdministeredCode              CE      `hl7:"5,required,len=100,table=0292,display=Administered Code"`
	AdministeredAmount            NM      `hl7:"6,required,len=20,display=Administered Amount"`
	AdministeredUnits             *CE     `hl7:"7,conditional,len=60,display=Administered Units"`
	AdministeredDosageForm        *CE     `hl7:"8,len=60,display=Administered Dosage Form"`
	AdministrationNotes           []CE    `hl7:"9,len=200,display=Administration Notes"`
	AdministeringProvider         []XCN   `hl7:"10,len=200,display=Administering Provider"`
	AdministeredAtLocation        *LA2    `hl7:"11,conditional,len=200,display=Administered-at Location"`
	AdministeredPer               ST      `hl7:"12,conditional,len=20,display=Administered Per"`
	AdministeredStrength          NM      `hl7:"13,len=20,display=Administered Strength"`
	AdministeredStrengthUnits     *CE     `hl7:"14,len=60,display=Administered Strength Units"`
	SubstanceLotNumber            []ST    `hl7:"15,len=20,display=Substance Lot Number"`
	SubstanceExpirationDate       []TS    `hl7:"16,len=26,format=YMDHMS,display=Substance Expiration Date"`
	SubstanceManufacturerName     []CE    `hl7:"17,len=60,table=0227,display=Substance Manufacturer Name"`
	SubstanceRefusalReason        []CE    `hl7:"18,len=200,display=Substance Refusal Reason"`
	Indication                    []CE    `hl7:"19,len=200,display=Indication"`
	CompletionStatus              ID      `hl7:"20,len=2,table=0322,display=Completion Status"`
	ActionCode                    ID      `hl7:"21,len=2,table=0323,display=Action Code-RXA"`
	SystemEntryDateTime           TS      `hl7:"22,len=26,format=YMDHMS,display=System Entry Date/Time"`
}

// Pharmacy/treatment component order segment
//
// If the drug or treatment ordered with the RXO segment is a compound drug OR an IV solution, AND there is not a coded value for OBR-4-universal service ID , which specifies the components (base and all additives), then the components (the base and additives) are specified by two or more RXC segments. The policy of the pharmacy or treatment application on substitutions at the RXC level is identical to that for the RXO level.
type RXC struct {
	HL7                    HL7Name `hl7:",name=RXC,type=s"`
	RXComponentType        ID      `hl7:"1,required,len=1,table=0166,display=RX Component Type"`
	ComponentCode          CE      `hl7:"2,required,len=100,display=Component Code"`
	ComponentAmount        NM      `hl7:"3,required,len=20,display=Component Amount"`
	ComponentUnits         CE      `hl7:"4,required,len=60,display=Component Units"`
	ComponentStrength      NM      `hl7:"5,len=20,display=Component Strength"`
	ComponentStrengthUnits *CE     `hl7:"6,len=60,display=Component Strength Units"`
}

// Pharmacy/treatment dispense segment
//
// Figure 4-17. RXD attributes
type RXD struct {
	HL7                                                     HL7Name `hl7:",name=RXD,type=s"`
	DispenseSubIDCounter                                    NM      `hl7:"1,required,len=4,display=Dispense Sub-ID Counter"`
	DispenseGiveCode                                        CE      `hl7:"2,required,len=100,table=0292,display=Dispense/Give Code"`
	DateTimeDispensed                                       TS      `hl7:"3,required,len=26,format=YMDHMS,display=Date/Time Dispensed"`
	ActualDispenseAmount                                    NM      `hl7:"4,required,len=20,display=Actual Dispense Amount"`
	ActualDispenseUnits                                     *CE     `hl7:"5,conditional,len=60,display=Actual Dispense Units"`
	ActualDosageForm                                        *CE     `hl7:"6,len=60,display=Actual Dosage Form"`
	PrescriptionNumber                                      ST      `hl7:"7,required,len=20,display=Prescription Number"`
	NumberOfRefillsRemaining                                NM      `hl7:"8,conditional,len=20,display=Number of Refills Remaining"`
	DispenseNotes                                           []ST    `hl7:"9,len=200,display=Dispense Notes"`
	DispensingProvider                                      []XCN   `hl7:"10,len=200,display=Dispensing Provider"`
	SubstitutionStatus                                      ID      `hl7:"11,len=1,table=0167,display=Substitution Status"`
	TotalDailyDose                                          *CQ     `hl7:"12,len=10,display=Total Daily Dose"`
	DispenseToLocation                                      *LA2    `hl7:"13,conditional,len=200,display=Dispense-To Location"`
	NeedsHumanReview                                        ID      `hl7:"14,len=1,table=0136,display=Needs Human Review"`
	PharmacyTreatmentSupplierSSpecialDispensingInstructions []CE    `hl7:"15,len=200,display=Pharmacy/Treatment Supplier s Special Dispensing Instructions"`
	ActualStrength                                          NM      `hl7:"16,len=20,display=Actual Strength"`
	ActualStrengthUnit                                      *CE     `hl7:"17,len=60,display=Actual Strength Unit"`
	SubstanceLotNumber                                      []ST    `hl7:"18,len=20,display=Substance Lot Number"`
	SubstanceExpirationDate                                 []TS    `hl7:"19,len=26,format=YMDHMS,display=Substance Expiration Date"`
	SubstanceManufacturerName                               []CE    `hl7:"20,len=60,table=0227,display=Substance Manufacturer Name"`
	Indication                                              []CE    `hl7:"21,len=200,display=Indication"`
	DispensePackageSize                                     NM      `hl7:"22,len=20,display=Dispense Package Size"`
	DispensePackageSizeUnit                                 *CE     `hl7:"23,len=60,display=Dispense Package Size Unit"`
	DispensePackageMethod                                   ID      `hl7:"24,len=2,table=0321,display=Dispense Package Method"`
}

// Pharmacy/treatment encoded order segment
//
// The RXE segment details the pharmacy or treatment application's encoding of the order. It also contains several pharmacy-specific order status fields, such as RXE-16-number of refills remaining , RXE-17-number of refills/doses dispensed, RXE-18-D/T of most recent refill or dose dispensed , and RXE-19-total daily dose.
type RXE struct {
	HL7                                                     HL7Name `hl7:",name=RXE,type=s"`
	QuantityTiming                                          TQ      `hl7:"1,required,len=200,display=Quantity/Timing"`
	GiveCode                                                CE      `hl7:"2,required,len=100,table=0292,display=Give Code"`
	GiveAmountMinimum                                       NM      `hl7:"3,required,len=20,display=Give Amount - Minimum"`
	GiveAmountMaximum                                       NM      `hl7:"4,len=20,display=Give Amount - Maximum"`
	GiveUnits                                               CE      `hl7:"5,required,len=60,display=Give Units"`
	GiveDosageForm                                          *CE     `hl7:"6,len=60,display=Give Dosage Form"`
	ProviderAdministrationInstructions                      []CE    `hl7:"7,len=200,display=Provider Administration Instructions"`
	DeliverToLocation                                       *LA1    `hl7:"8,conditional,len=200,display=Deliver-to Location"`
	SubstitutionStatus                                      ID      `hl7:"9,len=1,table=0167,display=Substitution Status"`
	DispenseAmount                                          NM      `hl7:"10,conditional,len=20,display=Dispense Amount"`
	DispenseUnits                                           *CE     `hl7:"11,conditional,len=60,display=Dispense Units"`
	NumberOfRefills                                         NM      `hl7:"12,len=3,display=Number Of Refills"`
	OrderingProviderSDEANumber                              []XCN   `hl7:"13,conditional,len=60,display=Ordering Provider s DEA Number"`
	PharmacistTreatmentSupplierSVerifierID                  []XCN   `hl7:"14,len=60,display=Pharmacist/Treatment Supplier s Verifier ID"`
	PrescriptionNumber                                      ST      `hl7:"15,conditional,len=20,display=Prescription Number"`
	NumberOfRefillsRemaining                                NM      `hl7:"16,conditional,len=20,display=Number of Refills Remaining"`
	NumberOfRefillsDosesDispensed                           NM      `hl7:"17,conditional,len=20,display=Number of Refills/Doses Dispensed"`
	DTOfMostRecentRefillOrDoseDispensed                     TS      `hl7:"18,conditional,len=26,format=YMDHMS,display=D/T of Most Recent Refill or Dose Dispensed"`
	TotalDailyDose                                          *CQ     `hl7:"19,conditional,len=10,display=Total Daily Dose"`
	NeedsHumanReview                                        ID      `hl7:"20,len=1,table=0136,display=Needs Human Review"`
	PharmacyTreatmentSupplierSSpecialDispensingInstructions []CE    `hl7:"21,len=200,display=Pharmacy/Treatment Supplier s Special Dispensing Instructions"`
	GivePer                                                 ST      `hl7:"22,conditional,len=20,display=Give Per"`
	GiveRateAmount                                          ST      `hl7:"23,len=6,display=Give Rate Amount"`
	GiveRateUnits                                           *CE     `hl7:"24,len=60,display=Give Rate Units"`
	GiveStrength                                            NM      `hl7:"25,len=20,display=Give Strength"`
	GiveStrengthUnits                                       *CE     `hl7:"26,len=60,display=Give Strength Units"`
	GiveIndication                                          []CE    `hl7:"27,len=200,display=Give Indication"`
	DispensePackageSize                                     NM      `hl7:"28,len=20,display=Dispense Package Size"`
	DispensePackageSizeUnit                                 *CE     `hl7:"29,len=60,display=Dispense Package Size Unit"`
	DispensePackageMethod                                   ID      `hl7:"30,len=2,table=0321,display=Dispense Package Method"`
}

// Pharmacy/treatment give segment
//
// Figure 4-18. RXG attributes
type RXG struct {
	HL7                                                         HL7Name `hl7:",name=RXG,type=s"`
	GiveSubIDCounter                                            NM      `hl7:"1,required,len=4,display=Give Sub-ID Counter"`
	DispenseSubIDCounter                                        NM      `hl7:"2,len=4,display=Dispense Sub-ID Counter"`
	QuantityTiming                                              TQ      `hl7:"3,required,len=200,display=Quantity/Timing"`
	GiveCode                                                    CE      `hl7:"4,required,len=100,table=0292,display=Give Code"`
	GiveAmountMinimum                                           NM      `hl7:"5,required,len=20,display=Give Amount - Minimum"`
	GiveAmountMaximum                                           NM      `hl7:"6,len=20,display=Give Amount - Maximum"`
	GiveUnits                                                   CE      `hl7:"7,required,len=60,display=Give Units"`
	GiveDosageForm                                              *CE     `hl7:"8,len=60,display=Give Dosage Form"`
	AdministrationNotes                                         []CE    `hl7:"9,len=200,display=Administration Notes"`
	SubstitutionStatus                                          ID      `hl7:"10,len=1,table=0167,display=Substitution Status"`
	DispenseToLocation                                          *LA2    `hl7:"11,len=200,display=Dispense-To Location"`
	NeedsHumanReview                                            ID      `hl7:"12,len=1,table=0136,display=Needs Human Review"`
	PharmacyTreatmentSupplierSSpecialAdministrationInstructions []CE    `hl7:"13,len=200,display=Pharmacy/Treatment Supplier s Special Administration Instructions"`
	GivePer                                                     ST      `hl7:"14,conditional,len=20,display=Give Per"`
	GiveRateAmount                                              ST      `hl7:"15,len=6,display=Give Rate Amount"`
	GiveRateUnits                                               *CE     `hl7:"16,len=60,display=Give Rate Units"`
	GiveStrength                                                NM      `hl7:"17,len=20,display=Give Strength"`
	GiveStrengthUnits                                           *CE     `hl7:"18,len=60,display=Give Strength Units"`
	SubstanceLotNumber                                          []ST    `hl7:"19,len=20,display=Substance Lot Number"`
	SubstanceExpirationDate                                     []TS    `hl7:"20,len=26,format=YMDHMS,display=Substance Expiration Date"`
	SubstanceManufacturerName                                   []CE    `hl7:"21,len=60,table=0227,display=Substance Manufacturer Name"`
	Indication                                                  []CE    `hl7:"22,len=200,display=Indication"`
}

// Pharmacy/treatment order segment
//
// This is the 'master' pharmacy/treatment order segment. It contains order data not specific to components or additives. Unlike the OBR, it does not contain status fields or other data that are results-only.
type RXO struct {
	HL7                                    HL7Name `hl7:",name=RXO,type=s"`
	RequestedGiveCode                      *CE     `hl7:"1,conditional,len=100,display=Requested Give Code"`
	RequestedGiveAmountMinimum             NM      `hl7:"2,conditional,len=20,display=Requested Give Amount - Minimum"`
	RequestedGiveAmountMaximum             NM      `hl7:"3,len=20,display=Requested Give Amount - Maximum"`
	RequestedGiveUnits                     *CE     `hl7:"4,conditional,len=60,display=Requested Give Units"`
	RequestedDosageForm                    *CE     `hl7:"5,len=60,display=Requested Dosage Form"`
	ProviderSPharmacyTreatmentInstructions []CE    `hl7:"6,len=200,display=Provider s Pharmacy/Treatment Instructions"`
	ProviderSAdministrationInstructions    []CE    `hl7:"7,len=200,display=Provider s Administration Instructions"`
	DeliverToLocation                      *LA1    `hl7:"8,len=200,display=Deliver-to Location"`
	AllowSubstitutions                     ID      `hl7:"9,len=1,table=0161,display=Allow Substitutions"`
	RequestedDispenseCode                  *CE     `hl7:"10,len=100,display=Requested Dispense Code"`
	RequestedDispenseAmount                NM      `hl7:"11,len=20,display=Requested Dispense Amount"`
	RequestedDispenseUnits                 *CE     `hl7:"12,len=60,display=Requested Dispense Units"`
	NumberOfRefills                        NM      `hl7:"13,len=3,display=Number Of Refills"`
	OrderingProviderSDEANumber             []XCN   `hl7:"14,conditional,len=60,display=Ordering Provider s DEA Number"`
	PharmacistTreatmentSupplierSVerifierID []XCN   `hl7:"15,conditional,len=60,display=Pharmacist/Treatment Supplier s Verifier ID"`
	NeedsHumanReview                       ID      `hl7:"16,len=1,table=0136,display=Needs Human Review"`
	RequestedGivePer                       ST      `hl7:"17,conditional,len=20,display=Requested Give Per"`
	RequestedGiveStrength                  NM      `hl7:"18,len=20,display=Requested Give Strength"`
	RequestedGiveStrengthUnits             *CE     `hl7:"19,len=60,display=Requested Give Strength Units"`
	Indication                             []CE    `hl7:"20,len=200,display=Indication"`
	RequestedGiveRateAmount                ST      `hl7:"21,len=6,display=Requested Give Rate Amount"`
	RequestedGiveRateUnits                 *CE     `hl7:"22,len=60,display=Requested Give Rate Units"`
	TotalDailyDose                         *CQ     `hl7:"23,len=10,display=Total Daily Dose"`
}

// Pharmacy/treatment route segment
//
// The Pharmacy/Treatment Route segment contains the alternative combination of route, site, administration device, and administration method that are prescribed. The pharmacy, treatment staff and/or nursing staff has a choice between the routes based on either their professional judgment or administration instructions provided by the physician.
type RXR struct {
	HL7                  HL7Name `hl7:",name=RXR,type=s"`
	Route                CE      `hl7:"1,required,len=60,table=0162,display=Route"`
	Site                 *CE     `hl7:"2,len=60,table=0163,display=Site"`
	AdministrationDevice *CE     `hl7:"3,len=60,table=0164,display=Administration Device"`
	AdministrationMethod *CE     `hl7:"4,len=60,table=0165,display=Administration Method"`
	RoutingInstruction   *CE     `hl7:"5,len=60,display=Routing Instruction"`
}

// Schedule activity information segment
//
// The SCH segment contains general information about the scheduled appointment.
type SCH struct {
	HL7                       HL7Name `hl7:",name=SCH,type=s"`
	PlacerAppointmentID       *EI     `hl7:"1,conditional,len=75,display=Placer Appointment ID"`
	FillerAppointmentID       *EI     `hl7:"2,conditional,len=75,display=Filler Appointment ID"`
	OccurrenceNumber          NM      `hl7:"3,conditional,len=5,display=Occurrence Number"`
	PlacerGroupNumber         *EI     `hl7:"4,len=22,display=Placer Group Number"`
	ScheduleID                *CE     `hl7:"5,len=200,display=Schedule ID"`
	EventReason               CE      `hl7:"6,required,len=200,display=Event Reason"`
	AppointmentReason         *CE     `hl7:"7,len=200,table=0276,display=Appointment Reason"`
	AppointmentType           *CE     `hl7:"8,len=200,table=0277,display=Appointment Type"`
	AppointmentDuration       NM      `hl7:"9,len=20,display=Appointment Duration"`
	AppointmentDurationUnits  *CE     `hl7:"10,len=200,display=Appointment Duration Units"`
	AppointmentTimingQuantity []TQ    `hl7:"11,required,len=200,display=Appointment Timing Quantity"`
	PlacerContactPerson       []XCN   `hl7:"12,len=48,display=Placer Contact Person"`
	PlacerContactPhoneNumber  *XTN    `hl7:"13,len=40,display=Placer Contact Phone Number"`
	PlacerContactAddress      []XAD   `hl7:"14,len=106,display=Placer Contact Address"`
	PlacerContactLocation     *PL     `hl7:"15,len=80,display=Placer Contact Location"`
	FillerContactPerson       []XCN   `hl7:"16,required,len=38,display=Filler Contact Person"`
	FillerContactPhoneNumber  *XTN    `hl7:"17,len=40,display=Filler Contact Phone Number"`
	FillerContactAddress      []XAD   `hl7:"18,len=106,display=Filler Contact Address"`
	FillerContactLocation     *PL     `hl7:"19,len=80,display=Filler Contact Location"`
	EnteredByPerson           []XCN   `hl7:"20,required,len=48,display=Entered by Person"`
	EnteredByPhoneNumber      []XTN   `hl7:"21,len=40,display=Entered by Phone Number"`
	EnteredByLocation         *PL     `hl7:"22,len=80,display=Entered by Location"`
	ParentPlacerAppointmentID *EI     `hl7:"23,len=75,display=Parent Placer Appointment ID"`
	ParentFillerAppointmentID *EI     `hl7:"24,conditional,len=75,display=Parent Filler Appointment ID"`
	FillerStatusCode          *CE     `hl7:"25,len=200,table=0278,display=Filler Status Code"`
}

// Stored procedure request definition segment
//
// The SPR segment is used to issue queries using stored procedure calls. Refer to the functional chapters for the lists of HL7-defined stored procedure names, input parameters and output tables.
type SPR struct {
	HL7                     HL7Name `hl7:",name=SPR,type=s"`
	QueryTag                ST      `hl7:"1,len=32,display=Query Tag"`
	QueryResponseFormatCode ID      `hl7:"2,required,len=1,table=0106,display=Query/ Response Format Code"`
	StoredProcedureName     CE      `hl7:"3,required,len=60,display=Stored Procedure Name"`
	InputParameterList      []QIP   `hl7:"4,len=256,display=Input Parameter List"`
}

// Staff identification segment
//
// The STF segment can identify any personnel referenced by information systems. These can be providers, staff, system users, and referring agents. In a network environment, this segment can be used to define personnel to other applications; for example, order entry clerks, insurance verification clerks, admission clerks, as well as provider demographics. MFE-4-primary key value is used to link all the segments pertaining to the same master file entry. Therefore, in the MFE segment, MFE-4-primary key value must be filled in. Other segments may follow the STF segment to provide data for a particular type of staff member. The PRA segment (practitioner) is one such. It may optionally follow the STF segment in order to add practitioner-specific data. Other segments may be defined as needed.
type STF struct {
	HL7                         HL7Name `hl7:",name=STF,type=s"`
	PrimaryKeyValue             CE      `hl7:"1,required,len=60,display=Primary Key Value - STF"`
	StaffIDCode                 []CX    `hl7:"2,len=60,display=Staff ID Code"`
	StaffName                   []XPN   `hl7:"3,len=48,display=Staff Name"`
	StaffType                   []IS    `hl7:"4,len=2,table=0182,display=Staff Type"`
	Sex                         IS      `hl7:"5,len=1,table=0001,display=Sex"`
	DateTimeOfBirth             TS      `hl7:"6,len=26,format=YMDHMS,display=Date/Time Of Birth"`
	ActiveInactiveFlag          ID      `hl7:"7,len=1,table=0183,display=Active/Inactive Flag"`
	Department                  []CE    `hl7:"8,len=200,table=0184,display=Department"`
	HospitalService             []CE    `hl7:"9,len=200,table=0069,display=Hospital Service"`
	Phone                       []XTN   `hl7:"10,len=40,display=Phone"`
	OfficeHomeAddress           []XAD   `hl7:"11,len=106,display=Office/Home Address"`
	InstitutionActivationDate   []DIN   `hl7:"12,len=26,display=Institution Activation Date"`
	InstitutionInactivationDate []DIN   `hl7:"13,len=26,display=Institution Inactivation Date"`
	BackupPersonID              []CE    `hl7:"14,len=60,display=Backup Person ID"`
	EMailAddress                []ST    `hl7:"15,len=40,display=E-Mail Address"`
	PreferredMethodOfContact    *CE     `hl7:"16,len=200,table=0185,display=Preferred Method Of Contact"`
	MaritalStatus               *CE     `hl7:"17,len=80,table=0002,display=Marital Status"`
	JobTitle                    ST      `hl7:"18,len=20,display=Job Title"`
	JobCodeClass                *JCC    `hl7:"19,len=20,display=Job Code/Class"`
	EmploymentStatus            IS      `hl7:"20,len=2,table=0066,display=Employment Status"`
	AdditionalInsuredOnAuto     ID      `hl7:"21,len=1,table=0136,display=Additional Insured on  Auto"`
	DriverSLicenseNumberStaff   *DLN    `hl7:"22,len=25,display=Driver s License Number - Staff"`
	CopyAutoIns                 ID      `hl7:"23,len=1,table=0136,display=Copy  Auto Ins"`
	AutoInsExpires              DT      `hl7:"24,len=8,format=YMD,display=Auto Ins. Expires"`
	DateLastDMVReview           DT      `hl7:"25,len=8,format=YMD,display=Date Last DMV Review"`
	DateNextDMVReview           DT      `hl7:"26,len=8,format=YMD,display=Date Next DMV Review"`
}

// Document notification segment
//
// The TXA segment contains information specific to a transcribed document but does not include the text of the document. The message is created as a result of a document status change. This information is used to update other healthcare systems to identify reports that are available in the transcription system. By maintaining the TXA message information in these systems, the information is available when constructing queries to the transcription system requesting the full document text.
type TXA struct {
	HL7                             HL7Name `hl7:",name=TXA,type=s"`
	SetID                           SI      `hl7:"1,seq,required,len=4,display=Set ID - TXA"`
	DocumentType                    IS      `hl7:"2,required,len=30,table=0270,display=Document Type"`
	DocumentContentPresentation     ID      `hl7:"3,conditional,len=2,table=0191,display=Document Content Presentation"`
	ActivityDateTime                TS      `hl7:"4,len=26,format=YMDHMS,display=Activity Date/Time"`
	PrimaryActivityProviderCodeName []XCN   `hl7:"5,conditional,len=60,display=Primary Activity Provider Code/Name"`
	OriginationDateTime             TS      `hl7:"6,len=26,format=YMDHMS,display=Origination Date/Time"`
	TranscriptionDateTime           TS      `hl7:"7,conditional,len=26,format=YMDHMS,display=Transcription Date/Time"`
	EditDateTime                    []TS    `hl7:"8,len=26,format=YMDHMS,display=Edit Date/Time"`
	OriginatorCodeName              []XCN   `hl7:"9,len=60,display=Originator Code/Name"`
	AssignedDocumentAuthenticator   []XCN   `hl7:"10,len=60,display=Assigned Document Authenticator"`
	TranscriptionistCodeName        []XCN   `hl7:"11,conditional,len=48,display=Transcriptionist Code/Name"`
	UniqueDocumentNumber            EI      `hl7:"12,required,len=30,display=Unique Document Number"`
	ParentDocumentNumber            *EI     `hl7:"13,conditional,len=30,display=Parent Document Number"`
	PlacerOrderNumber               []EI    `hl7:"14,len=22,display=Placer Order Number"`
	FillerOrderNumber               *EI     `hl7:"15,len=22,display=Filler Order Number"`
	UniqueDocumentFileName          ST      `hl7:"16,len=30,display=Unique Document File Name"`
	DocumentCompletionStatus        ID      `hl7:"17,required,len=2,table=0271,display=Document Completion Status"`
	DocumentConfidentialityStatus   ID      `hl7:"18,len=2,table=0272,display=Document Confidentiality Status"`
	DocumentAvailabilityStatus      ID      `hl7:"19,len=2,table=0273,display=Document Availability Status"`
	DocumentStorageStatus           ID      `hl7:"20,len=2,table=0275,display=Document Storage Status"`
	DocumentChangeReason            ST      `hl7:"21,conditional,len=30,display=Document Change Reason"`
	AuthenticationPersonTimeStamp   []PPN   `hl7:"22,conditional,len=60,display=Authentication Person- Time Stamp"`
	DistributedCopies               []XCN   `hl7:"23,len=60,display=Distributed Copies"`
}

// UB82 data segment
//
// The UB1 segment contains the data necessary to complete UB82 bills. Only UB82 fields that do not exist in other HL7 defined segments appear in this segment. Patient Name and Date of Birth are required for UB82 billing; however, they are included in the PID segment and therefore do not appear here. The UB codes listed as examples are not an exhaustive or current list. Refer to a UB specification for additional information.
type UB1 struct {
	HL7                     HL7Name `hl7:",name=UB1,type=s"`
	SetID                   SI      `hl7:"1,seq,len=4,display=Set ID - UB1"`
	BloodDeductible         NM      `hl7:"2,len=1,display=Blood Deductible"`
	BloodFurnishedPintsOf   NM      `hl7:"3,len=2,display=Blood Furnished-Pints Of"`
	BloodReplacedPints      NM      `hl7:"4,len=2,display=Blood Replaced-Pints"`
	BloodNotReplacedPints   NM      `hl7:"5,len=2,display=Blood Not Replaced-Pints"`
	CoInsuranceDays         NM      `hl7:"6,len=2,display=Co-Insurance Days"`
	ConditionCode           []IS    `hl7:"7,max=5,len=14,table=0043,display=Condition Code"`
	CoveredDays             NM      `hl7:"8,len=3,display=Covered Days -"`
	NonCoveredDays          NM      `hl7:"9,len=3,display=Non Covered Days -"`
	ValueAmountCode         []UVC   `hl7:"10,max=8,len=12,display=Value Amount & Code"`
	NumberOfGraceDays       NM      `hl7:"11,len=2,display=Number Of Grace Days"`
	SpecialProgramIndicator *CE     `hl7:"12,len=60,table=0348,display=Special Program Indicator"`
	PSROURApprovalIndicator *CE     `hl7:"13,len=60,table=0349,display=PSRO/UR Approval Indicator"`
	PSROURApprovedStayFm    DT      `hl7:"14,len=8,format=YMD,display=PSRO/UR Approved Stay-Fm"`
	PSROURApprovedStayTo    DT      `hl7:"15,len=8,format=YMD,display=PSRO/UR Approved Stay-To"`
	Occurrence              []OCD   `hl7:"16,max=5,len=20,display=Occurrence"`
	OccurrenceSpan          *CE     `hl7:"17,len=60,table=0351,display=Occurrence Span"`
	OccurSpanStartDate      DT      `hl7:"18,len=8,format=YMD,display=Occur Span Start Date"`
	OccurSpanEndDate        DT      `hl7:"19,len=8,format=YMD,display=Occur Span End Date"`
	UB82Locator2            ST      `hl7:"20,len=30,display=UB-82 Locator 2"`
	UB82Locator9            ST      `hl7:"21,len=7,display=UB-82 Locator 9"`
	UB82Locator27           ST      `hl7:"22,len=8,display=UB-82 Locator 27"`
	UB82Locator45           ST      `hl7:"23,len=17,display=UB-82 Locator 45"`
}

// UB92 data segment
//
// The UB2 segment contains data necessary to complete UB92 bills. Only UB92 fields that do not exist in other HL7 defined segments appear in this segment. Just as with the UB82 billing, Patient Name and Date of Birth are required; they are included in the PID segment and therefore do not appear here. When the field locators are different on the UB92, as compared to the UB82, the element is listed with its new location in parentheses ( ). The UB codes listed as examples are not an exhaustive or current list; refer to a UB specification for additional information.
type UB2 struct {
	HL7                     HL7Name `hl7:",name=UB2,type=s"`
	SetID                   SI      `hl7:"1,seq,len=4,display=Set ID - UB2"`
	CoInsuranceDays         ST      `hl7:"2,len=3,display=Co-Insurance Days"`
	ConditionCode           []IS    `hl7:"3,max=7,len=2,table=0043,display=Condition Code"`
	CoveredDays             ST      `hl7:"4,len=3,display=Covered Days"`
	NonCoveredDays          ST      `hl7:"5,len=4,display=Non-Covered Days"`
	ValueAmountCode         []UVC   `hl7:"6,max=12,len=11,display=Value Amount & Code"`
	OccurrenceCodeDate      []OCD   `hl7:"7,max=8,len=11,display=Occurrence Code & Date"`
	OccurrenceSpanCodeDates []OSP   `hl7:"8,max=2,len=28,display=Occurrence Span Code/Dates"`
	UB92Locator2            []ST    `hl7:"9,max=2,len=29,display=UB92 Locator 2"`
	UB92Locator11           []ST    `hl7:"10,max=2,len=12,display=UB92 Locator 11"`
	UB92Locator31           ST      `hl7:"11,len=5,display=UB92 Locator 31"`
	DocumentControlNumber   []ST    `hl7:"12,max=3,len=23,display=Document Control Number"`
	UB92Locator49           []ST    `hl7:"13,max=23,len=4,display=UB92 Locator 49"`
	UB92Locator56           []ST    `hl7:"14,max=5,len=14,display=UB92 Locator 56"`
	UB92Locator57           ST      `hl7:"15,len=27,display=UB92 Locator 57"`
	UB92Locator78           []ST    `hl7:"16,max=2,len=2,display=UB92 Locator 78"`
	SpecialVisitCount       NM      `hl7:"17,len=3,display=Special Visit Count"`
}

// Results/update definition segment
//
// The URD segment is used in sending unsolicited updates about orders and results. Its purpose is similar to that of the QRD segment, but from the results/unsolicited update point of view. Some of the fields have parallels in the QRD segment.
type URD struct {
	HL7                     HL7Name `hl7:",name=URD,type=s"`
	RUDateTime              TS      `hl7:"1,len=26,format=YMDHMS,display=R/U Date/Time"`
	ReportPriority          ID      `hl7:"2,len=1,table=0109,display=Report Priority"`
	RUWhoSubjectDefinition  []XCN   `hl7:"3,required,len=60,display=R/U Who Subject Definition"`
	RUWhatSubjectDefinition []CE    `hl7:"4,len=60,table=0048,display=R/U What Subject Definition"`
	RUWhatDepartmentCode    []CE    `hl7:"5,len=60,display=R/U What Department Code"`
	RUDisplayPrintLocations []ST    `hl7:"6,len=20,display=R/U Display/Print Locations"`
	RUResultsLevel          ID      `hl7:"7,len=1,table=0108,display=R/U Results Level"`
}

// Unsolicited selection segment
//
// The URS segment is identical with the QRF segment, except that if the name of any field contains Query (of QRY), this word has been changed to Results (see URS-5-R/U other results subject definition).
type URS struct {
	HL7                             HL7Name `hl7:",name=URS,type=s"`
	RUWhereSubjectDefinition        []ST    `hl7:"1,required,len=20,display=R/U Where Subject Definition"`
	RUWhenDataStartDateTime         TS      `hl7:"2,len=26,format=YMDHMS,display=R/U When Data Start Date/Time"`
	RUWhenDataEndDateTime           TS      `hl7:"3,len=26,format=YMDHMS,display=R/U When Data End Date/Time"`
	RUWhatUserQualifier             []ST    `hl7:"4,len=20,display=R/U What User Qualifier"`
	RUOtherResultsSubjectDefinition []ST    `hl7:"5,len=20,display=R/U Other Results Subject Definition"`
	RUWhichDateTimeQualifier        []ID    `hl7:"6,len=12,table=0156,display=R/U Which Date/Time Qualifier"`
	RUWhichDateTimeStatusQualifier  []ID    `hl7:"7,len=12,table=0157,display=R/U Which Date/Time Status Qualifier"`
	RUDateTimeSelectionQualifier    []ID    `hl7:"8,len=12,table=0158,display=R/U Date/Time Selection Qualifier"`
	RUQuantityTimingQualifier       *TQ     `hl7:"9,len=60,display=R/U Quantity/Timing Qualifier"`
}

// Variance
//
// The variance segment contains the data necessary to describe differences that may have occurred at the time when a healthcare event was documented.
type VAR struct {
	HL7                    HL7Name `hl7:",name=VAR,type=s"`
	VarianceInstanceID     EI      `hl7:"1,required,len=60,display=Variance Instance ID"`
	DocumentedDateTime     TS      `hl7:"2,required,len=26,format=YMDHMS,display=Documented Date/Time"`
	StatedVarianceDateTime TS      `hl7:"3,len=26,format=YMDHMS,display=Stated Variance Date/Time"`
	VarianceOriginator     []XCN   `hl7:"4,len=80,display=Variance Originator"`
	VarianceClassification *CE     `hl7:"5,len=60,display=Variance Classification"`
	VarianceDescription    []ST    `hl7:"6,len=512,display=Variance Description"`
}

// Virtual table query request segment
//
// The VTQ segment is used to define queries that are responded to with the Tabular Data Message (TBR). The VTQ query message is an alternate method to the EQQ query message that some systems may find easier to implement, due to its use of HL7 delimiters that separate components of the selection definition, and its limited selection criteria. Queries involving complex selection criteria (nested operators, etc.) may need to be formatted as an EQL segment.
type VTQ struct {
	HL7                     HL7Name `hl7:",name=VTQ,type=s"`
	QueryTag                ST      `hl7:"1,len=32,display=Query Tag"`
	QueryResponseFormatCode ID      `hl7:"2,required,len=1,table=0106,display=Query/ Response Format Code"`
	VTQueryName             CE      `hl7:"3,required,len=60,display=VT Query Name"`
	VirtualTableName        CE      `hl7:"4,required,len=60,display=Virtual Table Name"`
	SelectionCriteria       []QSC   `hl7:"5,len=256,display=Selection Criteria"`
}
