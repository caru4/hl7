// Code generated by "hl7fetch -pkgdir v28 -root ./genjson -version 2.8"; DO NOT EDIT.

package v28

// Abstract
//
// This segment was created to communicate patient abstract information used for billing and reimbursement purposes. “Abstract”
// is a condensed form of medical history created for analysis, care planning, etc.
type ABS struct {
	HL7                        HL7Name `hl7:",name=ABS,type=s"`
	DischargeCareProvider      *XCN    `hl7:"1,table=0010,display=Discharge Care Provider"`
	TransferMedicalServiceCode *CWE    `hl7:"2,table=0069,display=Transfer Medical Service Code"`
	SeverityOfIllnessCode      *CWE    `hl7:"3,table=0421,display=Severity Of Illness Code"`
	DateTimeOfAttestation      DTM     `hl7:"4,format=YMDHM,display=Date/Time Of Attestation"`
	AttestedBy                 *XCN    `hl7:"5,display=Attested By"`
	TriageCode                 *CWE    `hl7:"6,table=0422,display=Triage Code"`
	AbstractCompletionDateTime DTM     `hl7:"7,format=YMDHM,display=Abstract Completion Date/Time"`
	AbstractedBy               *XCN    `hl7:"8,display=Abstracted By"`
	CaseCategoryCode           *CWE    `hl7:"9,table=0423,display=Case Category Code"`
	CaesarianSectionIndicator  ID      `hl7:"10,len=1,table=0136,display=Caesarian Section Indicator"`
	GestationCategoryCode      *CWE    `hl7:"11,table=0424,display=Gestation Category Code"`
	GestationPeriodWeeks       NM      `hl7:"12,display=Gestation Period - Weeks"`
	NewbornCode                *CWE    `hl7:"13,table=0425,display=Newborn Code"`
	StillbornIndicator         ID      `hl7:"14,len=1,table=0136,display=Stillborn Indicator"`
}

// Accident
//
// The ACC segment contains patient information relative to an accident in which the patient has been involved.
type ACC struct {
	HL7                         HL7Name `hl7:",name=ACC,type=s"`
	AccidentDateTime            DTM     `hl7:"1,format=YMDHM,display=Accident Date/Time"`
	AccidentCode                *CWE    `hl7:"2,table=0050,display=Accident Code"`
	AccidentLocation            ST      `hl7:"3,display=Accident Location"`
	AutoAccidentState           CWE     `hl7:"4,table=0347,display=Auto Accident State"`
	AccidentJobRelatedIndicator ID      `hl7:"5,len=1,table=0136,display=Accident Job Related Indicator"`
	AccidentDeathIndicator      ID      `hl7:"6,len=1,table=0136,display=Accident Death Indicator"`
	EnteredBy                   *XCN    `hl7:"7,display=Entered By"`
	AccidentDescription         ST      `hl7:"8,display=Accident Description"`
	BroughtInBy                 ST      `hl7:"9,display=Brought In By"`
	PoliceNotifiedIndicator     ID      `hl7:"10,len=1,table=0136,display=Police Notified Indicator"`
	AccidentAddress             *XAD    `hl7:"11,display=Accident Address"`
	DegreeOfPatientLiability    NM      `hl7:"12,display=Degree Of Patient Liability"`
	AccidentIdentifier          []EI    `hl7:"13,display=Accident Identifier"`
}

// Addendum
//
// The ADD segment is used to define the continuation of the prior segment in a continuation message. See Section 2.10.2, "Continuation
// messages and segments," for details.
type ADD struct {
	HL7                         HL7Name `hl7:",name=ADD,type=s"`
	AddendumContinuationPointer ST      `hl7:"1,display=Addendum Continuation Pointer"`
}

// Adjustment
//
// This segment describes Provider and/or Payer adjustments to a Product/Service Line Item or Response Summary.  These include
// surcharges such as tax, dispensing fees and mark ups.
//
// X12 REF: Similar to CAS segment, with a few new fields.
type ADJ struct {
	HL7                                                HL7Name `hl7:",name=ADJ,type=s"`
	ProviderAdjustmentNumber                           EI      `hl7:"1,required,display=Provider Adjustment Number"`
	PayerAdjustmentNumber                              EI      `hl7:"2,required,display=Payer Adjustment Number"`
	AdjustmentSequenceNumber                           SI      `hl7:"3,required,len=4,display=Adjustment Sequence Number"`
	AdjustmentCategory                                 CWE     `hl7:"4,required,table=0564,display=Adjustment Category"`
	AdjustmentAmount                                   *CP     `hl7:"5,display=Adjustment Amount"`
	AdjustmentQuantity                                 *CQ     `hl7:"6,display=Adjustment Quantity"`
	AdjustmentReasonPa                                 *CWE    `hl7:"7,conditional,table=0565,display=Adjustment Reason Pa"`
	AdjustmentDescription                              ST      `hl7:"8,display=Adjustment Description"`
	OriginalValue                                      NM      `hl7:"9,display=Original Value"`
	SubstituteValue                                    NM      `hl7:"10,display=Substitute Value"`
	AdjustmentAction                                   *CWE    `hl7:"11,table=0569,display=Adjustment Action"`
	ProviderAdjustmentNumberCrossReference             *EI     `hl7:"12,display=Provider Adjustment Number Cross Reference"`
	ProviderProductServiceLineItemNumberCrossReference *EI     `hl7:"13,display=Provider Product/Service Line Item Number Cross Reference"`
	AdjustmentDate                                     DTM     `hl7:"14,required,format=YMDHM,display=Adjustment Date"`
	ResponsibleOrganization                            *XON    `hl7:"15,display=Responsible Organization"`
}

// Professional Affiliation
//
// The AFF segment adds detailed information regarding professional affiliations with which the staff member identified
// by the STF segment is/was associated.
type AFF struct {
	HL7                                          HL7Name `hl7:",name=AFF,type=s"`
	SetID                                        SI      `hl7:"1,seq,required,len=4,display=Set Id - Aff"`
	ProfessionalOrganization                     XON     `hl7:"2,required,display=Professional Organization"`
	ProfessionalOrganizationAddress              *XAD    `hl7:"3,display=Professional Organization Address"`
	ProfessionalOrganizationAffiliationDateRange []DR    `hl7:"4,display=Professional Organization Affiliation Date Range"`
	ProfessionalAffiliationAdditionalInformation ST      `hl7:"5,display=Professional Affiliation Additional Information"`
}

// Appointment Information - General Resource
//
// The AIG segment contains information about various kinds of resources (other than those with specifically defined segments
// in this chapter) that can be scheduled.  Resources included in a transaction using this segment are assumed to be controlled
// by a schedule on a schedule filler application.  Resources not controlled by a schedule are not identified on a schedule
// request using this segment.  Resources described by this segment are general kinds of resources, such as equipment, that
// are identified with a simple identification code.
type AIG struct {
	HL7                      HL7Name `hl7:",name=AIG,type=s"`
	SetID                    SI      `hl7:"1,seq,required,len=4,display=Set Id - Aig"`
	SegmentActionCode        ID      `hl7:"2,conditional,len=1,table=0206,display=Segment Action Code"`
	ResourceID               *CWE    `hl7:"3,conditional,display=Resource Id"`
	ResourceType             CWE     `hl7:"4,required,display=Resource Type"`
	ResourceGroup            []CWE   `hl7:"5,display=Resource Group"`
	ResourceQuantity         NM      `hl7:"6,display=Resource Quantity"`
	ResourceQuantityUnits    *CNE    `hl7:"7,display=Resource Quantity Units"`
	StartDateTime            DTM     `hl7:"8,conditional,format=YMDHM,display=Start Date/Time"`
	StartDateTimeOffset      NM      `hl7:"9,conditional,display=Start Date/Time Offset"`
	StartDateTimeOffsetUnits *CNE    `hl7:"10,conditional,display=Start Date/Time Offset Units"`
	Duration                 NM      `hl7:"11,display=Duration"`
	DurationUnits            *CNE    `hl7:"12,display=Duration Units"`
	AllowSubstitutionCode    *CWE    `hl7:"13,conditional,table=0279,display=Allow Substitution Code"`
	FillerStatusCode         *CWE    `hl7:"14,conditional,table=0278,display=Filler Status Code"`
}

// Appointment Information - Location Resource
//
// The AIL segment contains information about location resources (meeting rooms, operating rooms, examination rooms,
// or other locations) that can be scheduled.  Resources included in a transaction using this segment are assumed to be controlled
// by a schedule on a schedule filler application.  Resources not controlled by a schedule are not identified on a schedule
// request using this segment.  Location resources are identified with this specific segment because of the specific encoding
// of locations used by the HL7 specification.
type AIL struct {
	HL7                      HL7Name `hl7:",name=AIL,type=s"`
	SetID                    SI      `hl7:"1,seq,required,len=4,display=Set Id - Ail"`
	SegmentActionCode        ID      `hl7:"2,conditional,len=1,table=0206,display=Segment Action Code"`
	LocationResourceID       []PL    `hl7:"3,conditional,display=Location Resource Id"`
	LocationType             *CWE    `hl7:"4,conditional,table=0305,display=Location Type - Ail"`
	LocationGroup            *CWE    `hl7:"5,display=Location Group"`
	StartDateTime            DTM     `hl7:"6,conditional,format=YMDHM,display=Start Date/Time"`
	StartDateTimeOffset      NM      `hl7:"7,conditional,display=Start Date/Time Offset"`
	StartDateTimeOffsetUnits *CNE    `hl7:"8,conditional,display=Start Date/Time Offset Units"`
	Duration                 NM      `hl7:"9,display=Duration"`
	DurationUnits            *CNE    `hl7:"10,display=Duration Units"`
	AllowSubstitutionCode    *CWE    `hl7:"11,conditional,table=0279,display=Allow Substitution Code"`
	FillerStatusCode         *CWE    `hl7:"12,conditional,table=0278,display=Filler Status Code"`
}

// Appointment Information - Personnel Resource
//
// The AIP segment contains information about the personnel types that can be scheduled.  Personnel included in a transaction
// using this segment are assumed to be controlled by a schedule on a schedule filler application.  Personnel not controlled
// by a schedule are not identified on a schedule request using this segment.  The kinds of personnel described on this segment
// include any healthcare provider in the institution controlled by a schedule (for example: technicians, physicians,
// nurses, surgeons, anesthesiologists, or CRNAs).
type AIP struct {
	HL7                      HL7Name `hl7:",name=AIP,type=s"`
	SetID                    SI      `hl7:"1,seq,required,len=4,display=Set Id - Aip"`
	SegmentActionCode        ID      `hl7:"2,conditional,len=1,table=0206,display=Segment Action Code"`
	PersonnelResourceID      []XCN   `hl7:"3,conditional,display=Personnel Resource Id"`
	ResourceType             *CWE    `hl7:"4,conditional,table=0182,display=Resource Type"`
	ResourceGroup            *CWE    `hl7:"5,display=Resource Group"`
	StartDateTime            DTM     `hl7:"6,conditional,format=YMDHM,display=Start Date/Time"`
	StartDateTimeOffset      NM      `hl7:"7,conditional,display=Start Date/Time Offset"`
	StartDateTimeOffsetUnits *CNE    `hl7:"8,conditional,display=Start Date/Time Offset Units"`
	Duration                 NM      `hl7:"9,display=Duration"`
	DurationUnits            *CNE    `hl7:"10,display=Duration Units"`
	AllowSubstitutionCode    *CWE    `hl7:"11,conditional,table=0279,display=Allow Substitution Code"`
	FillerStatusCode         *CWE    `hl7:"12,conditional,table=0278,display=Filler Status Code"`
}

// Appointment Information
//
// The AIS segment contains information about various kinds of services that can be scheduled.  Services included in a transaction
// using this segment are assumed to be controlled by a schedule on a schedule filler application.  Services not controlled
// by a schedule are not identified on a schedule request using this segment.
type AIS struct {
	HL7                                  HL7Name `hl7:",name=AIS,type=s"`
	SetID                                SI      `hl7:"1,seq,required,len=4,display=Set Id - Ais"`
	SegmentActionCode                    ID      `hl7:"2,conditional,len=1,table=0206,display=Segment Action Code"`
	UniversalServiceIdentifier           CWE     `hl7:"3,required,display=Universal Service Identifier"`
	StartDateTime                        DTM     `hl7:"4,conditional,format=YMDHM,display=Start Date/Time"`
	StartDateTimeOffset                  NM      `hl7:"5,conditional,display=Start Date/Time Offset"`
	StartDateTimeOffsetUnits             *CNE    `hl7:"6,conditional,display=Start Date/Time Offset Units"`
	Duration                             NM      `hl7:"7,display=Duration"`
	DurationUnits                        *CNE    `hl7:"8,display=Duration Units"`
	AllowSubstitutionCode                *CWE    `hl7:"9,conditional,table=0279,display=Allow Substitution Code"`
	FillerStatusCode                     *CWE    `hl7:"10,conditional,table=0278,display=Filler Status Code"`
	PlacerSupplementalServiceInformation []CWE   `hl7:"11,table=0411,display=Placer Supplemental Service Information"`
	FillerSupplementalServiceInformation []CWE   `hl7:"12,table=0411,display=Filler Supplemental Service Information"`
}

// Patient Allergy Information
//
// The AL1 segment contains patient allergy information of various types. Most of this information will be derived from user-defined
// tables. Each AL1 segment describes a single patient allergy.
type AL1 struct {
	HL7                             HL7Name `hl7:",name=AL1,type=s"`
	SetID                           SI      `hl7:"1,seq,required,len=4,display=Set Id - Al1"`
	AllergenTypeCode                *CWE    `hl7:"2,table=0127,display=Allergen Type Code"`
	AllergenCodeMnemonicDescription CWE     `hl7:"3,required,display=Allergen Code/Mnemonic/Description"`
	AllergySeverityCode             *CWE    `hl7:"4,table=0128,display=Allergy Severity Code"`
	AllergyReactionCode             []ST    `hl7:"5,display=Allergy Reaction Code"`
	IdentificationDate              ST      `hl7:"6,display=Identification Date"`
}

// Appointment Preferences
//
// The APR segment contains parameters and preference specifications used for requesting appointments in the SRM message.
// It allows placer applications to provide coded parameters and preference indicators to the filler application, to help
// determine when a requested appointment should be scheduled.  An APR segment can be provided in conjunction with either
// the ARQ segment or any of the service and resource segments (AIG, AIS, AIP, and AIL).  If an APR segment appears in conjunction
// with an ARQ segment, its parameters and preference indicators pertain to the schedule request as a whole.  If the APR segment
// appears with any of the service and resource segments, then its parameters and preferences apply only to the immediately
// preceding service or resource.
type APR struct {
	HL7                       HL7Name `hl7:",name=APR,type=s"`
	TimeSelectionCriteria     []SCV   `hl7:"1,display=Time Selection Criteria"`
	ResourceSelectionCriteria []SCV   `hl7:"2,display=Resource Selection Criteria"`
	LocationSelectionCriteria []SCV   `hl7:"3,display=Location Selection Criteria"`
	SlotSpacingCriteria       NM      `hl7:"4,display=Slot Spacing Criteria"`
	FillerOverrideCriteria    []SCV   `hl7:"5,display=Filler Override Criteria"`
}

// Appointment Request
//
// The ARQ segment defines a request for the booking of an appointment.  It is used in transactions sent from an application
// acting in the role of a placer.
type ARQ struct {
	HL7                         HL7Name `hl7:",name=ARQ,type=s"`
	PlacerAppointmentID         EI      `hl7:"1,required,display=Placer Appointment Id"`
	FillerAppointmentID         *EI     `hl7:"2,conditional,display=Filler Appointment Id"`
	OccurrenceNumber            NM      `hl7:"3,conditional,display=Occurrence Number"`
	PlacerGroupNumber           *EI     `hl7:"4,display=Placer Group Number"`
	ScheduleID                  *CWE    `hl7:"5,display=Schedule Id"`
	RequestEventReason          *CWE    `hl7:"6,display=Request Event Reason"`
	AppointmentReason           *CWE    `hl7:"7,table=0276,display=Appointment Reason"`
	AppointmentType             *CWE    `hl7:"8,table=0277,display=Appointment Type"`
	AppointmentDuration         NM      `hl7:"9,display=Appointment Duration"`
	AppointmentDurationUnits    *CNE    `hl7:"10,display=Appointment Duration Units"`
	RequestedStartDateTimeRange []DR    `hl7:"11,display=Requested Start Date/Time Range"`
	Priority                    ST      `hl7:"12,display=Priority-arq"`
	RepeatingInterval           *RI     `hl7:"13,display=Repeating Interval"`
	RepeatingIntervalDuration   ST      `hl7:"14,display=Repeating Interval Duration"`
	PlacerContactPerson         []XCN   `hl7:"15,required,display=Placer Contact Person"`
	PlacerContactPhoneNumber    []XTN   `hl7:"16,display=Placer Contact Phone Number"`
	PlacerContactAddress        []XAD   `hl7:"17,display=Placer Contact Address"`
	PlacerContactLocation       *PL     `hl7:"18,display=Placer Contact Location"`
	EnteredByPerson             []XCN   `hl7:"19,required,display=Entered By Person"`
	EnteredByPhoneNumber        []XTN   `hl7:"20,display=Entered By Phone Number"`
	EnteredByLocation           *PL     `hl7:"21,display=Entered By Location"`
	ParentPlacerAppointmentID   *EI     `hl7:"22,display=Parent Placer Appointment Id"`
	ParentFillerAppointmentID   *EI     `hl7:"23,display=Parent Filler Appointment Id"`
	PlacerOrderNumber           []EI    `hl7:"24,conditional,display=Placer Order Number"`
	FillerOrderNumber           []EI    `hl7:"25,conditional,display=Filler Order Number"`
}

// Access Restriction
//
// The ARV segment is used to communicate the requested/required type of access restrictions from system to system, at both
// the person/patient and the encounter/visit level.
//
// Examples:
// A person/patient may have the right to object to any or all of his/her information to be disclosed. In addition, the patient
// may request that protected information not be disclosed to family members or friends who may be involved in their care or
// for notification purposes.
//
// A realm or organization may have certain privacy policies.
//
// A patient may have the right to opt out of being included on facility directories.
// In an international context, a physician may be culturally obligated to protect the patient's privacy.
//
// Any "opt-in" or "opt-out" restrictions are communicated in ARV-3 - Access Restriction Value. This segment replaces PD1-12
// and PV2-22, which have been deprecated in V2.6. The ARV segment is optional and is sent after the PID/PD1 segments to describe
// access restrictions associated with the person/patient. The ARV segment is optional and is sent after the PV1/PV2 segments
// to describe access restrictions associated with that specific encounter.
//
// Usage Notes:
//
// The individual system security may want to utilize the Access Restriction Value along with the Access Restriction Reason
// (and/or with the Confidentiality Code from another segment, e.g., OM1-30 or other data) in order to implement the appropriate
// type of protection for the person, patient, visit and/or visit data. Each system has the flexibility to incorporate/map
// the access values into their security system appropriately; the actual implementation for access to protected data is
// determined by the individual system. The Access Restriction Values supported by an enterprise/system would be defined
// and determined by that organization.
//
// It is expected that these access restriction values would be utilized in combination with other system security information
// (e.g., patient locations, user department, caregiver-patient relationships, other access restriction parameters)
// to determine user access.
//
// System implementers should carefully control access to the restriction codes and values, as they themselves hold sensitive
// information.
type ARV struct {
	HL7                                  HL7Name `hl7:",name=ARV,type=s"`
	SetID                                SI      `hl7:"1,seq,len=4,display=Set Id"`
	AccessRestrictionActionCode          CNE     `hl7:"2,required,table=0206,display=Access Restriction Action Code"`
	AccessRestrictionValue               CWE     `hl7:"3,required,table=0717,display=Access Restriction Value"`
	AccessRestrictionReason              []CWE   `hl7:"4,table=0719,display=Access Restriction Reason"`
	SpecialAccessRestrictionInstructions []ST    `hl7:"5,display=Special Access Restriction Instructions"`
	AccessRestrictionDateRange           *DR     `hl7:"6,display=Access Restriction Date Range"`
}

// Authorization Information
//
// This segment represents an authorization or a pre-authorization for a referred procedure or requested service by the
// payor covering the patient's health care.
type AUT struct {
	HL7                               HL7Name `hl7:",name=AUT,type=s"`
	AuthorizingPayorPlanID            *CWE    `hl7:"1,table=0072,display=Authorizing Payor- Plan Id"`
	AuthorizingPayorCompanyID         CWE     `hl7:"2,required,table=0285,display=Authorizing Payor- Company Id"`
	AuthorizingPayorCompanyName       ST      `hl7:"3,display=Authorizing Payor- Company Name"`
	AuthorizationEffectiveDate        DTM     `hl7:"4,format=YMDHM,display=Authorization Effective Date"`
	AuthorizationExpirationDate       DTM     `hl7:"5,format=YMDHM,display=Authorization Expiration Date"`
	AuthorizationIdentifier           *EI     `hl7:"6,conditional,display=Authorization Identifier"`
	ReimbursementLimit                *CP     `hl7:"7,display=Reimbursement Limit"`
	RequestedNumberOfTreatments       *CQ     `hl7:"8,display=Requested Number Of Treatments"`
	AuthorizedNumberOfTreatments      *CQ     `hl7:"9,display=Authorized Number Of Treatments"`
	ProcessDate                       DTM     `hl7:"10,format=YMDHM,display=Process Date"`
	RequestedDisciplineS              []CWE   `hl7:"11,display=Requested Discipline(s)"`
	AuthorizedDisciplineS             []CWE   `hl7:"12,display=Authorized Discipline(s)"`
	AuthorizationReferralType         CWE     `hl7:"13,required,display=Authorization Referral Type"`
	ApprovalStatus                    *CWE    `hl7:"14,display=Approval Status"`
	PlannedTreatmentStopDate          DTM     `hl7:"15,format=YMDHM,display=Planned Treatment Stop Date"`
	ClinicalService                   *CWE    `hl7:"16,display=Clinical Service"`
	ReasonText                        ST      `hl7:"17,display=Reason Text"`
	NumberOfAuthorizedTreatmentsUnits *CQ     `hl7:"18,display=Number of Authorized Treatments/Units"`
	NumberOfUsedTreatmentsUnits       *CQ     `hl7:"19,display=Number of Used Treatments/Units"`
	NumberOfScheduleTreatmentsUnits   *CQ     `hl7:"20,display=Number of Schedule Treatments/Units"`
	EncounterType                     *CWE    `hl7:"21,display=Encounter Type"`
	RemainingBenefitAmount            *MO     `hl7:"22,display=Remaining Benefit Amount"`
	AuthorizedProvider                *XON    `hl7:"23,display=Authorized Provider"`
	AuthorizedHealthProfessional      *XCN    `hl7:"24,display=Authorized Health Professional"`
	SourceText                        ST      `hl7:"25,display=Source Text"`
	SourceDate                        DTM     `hl7:"26,format=YMDHM,display=Source Date"`
	SourcePhone                       *XTN    `hl7:"27,display=Source Phone"`
	Comment                           ST      `hl7:"28,display=Comment"`
	ActionCode                        ID      `hl7:"29,table=0206,display=Action Code"`
}

// Batch Header
//
// The BHS segment defines the start of a batch.
type BHS struct {
	HL7                          HL7Name `hl7:",name=BHS,type=s"`
	BatchFieldSeparator          ST      `hl7:"1,required,len=1,display=Batch Field Separator"`
	BatchEncodingCharacters      ST      `hl7:"2,required,len=5,display=Batch Encoding Characters"`
	BatchSendingApplication      *HD     `hl7:"3,display=Batch Sending Application"`
	BatchSendingFacility         *HD     `hl7:"4,display=Batch Sending Facility"`
	BatchReceivingApplication    *HD     `hl7:"5,display=Batch Receiving Application"`
	BatchReceivingFacility       *HD     `hl7:"6,display=Batch Receiving Facility"`
	BatchCreationDateTime        DTM     `hl7:"7,format=YMDHM,display=Batch Creation Date/Time"`
	BatchSecurity                ST      `hl7:"8,display=Batch Security"`
	BatchNameIDType              ST      `hl7:"9,display=Batch Name/Id/Type"`
	BatchComment                 ST      `hl7:"10,display=Batch Comment"`
	BatchControlID               ST      `hl7:"11,display=Batch Control Id"`
	ReferenceBatchControlID      ST      `hl7:"12,display=Reference Batch Control Id"`
	BatchSendingNetworkAddress   *HD     `hl7:"13,display=Batch Sending Network Address"`
	BatchReceivingNetworkAddress *HD     `hl7:"14,display=Batch Receiving Network Address"`
}

// Blood Code
//
// The BLC segment contains data necessary to communicate patient abstract blood information used for billing and reimbursement
// purposes. This segment is repeating to report blood product codes and the associated blood units.
type BLC struct {
	HL7              HL7Name `hl7:",name=BLC,type=s"`
	BloodProductCode *CWE    `hl7:"1,table=0426,display=Blood Product Code"`
	BloodAmount      *CQ     `hl7:"2,display=Blood Amount"`
}

// Billing
//
// The BLG segment is used to provide billing information, on the ordered service, to the filling application.
type BLG struct {
	HL7              HL7Name `hl7:",name=BLG,type=s"`
	WhenToCharge     *CCD    `hl7:"1,display=When To Charge"`
	ChargeType       ID      `hl7:"2,len=2,table=0122,display=Charge Type"`
	AccountID        *CX     `hl7:"3,display=Account Id"`
	ChargeTypeReason *CWE    `hl7:"4,table=0475,display=Charge Type Reason"`
}

// Blood Product Order
//
// Blood product order messages require additional information that is not available in other standard HL7 order messages.
// Blood product order messages need to contain accompanying details regarding the blood product component, such as special
// processing requirements (e.g., irradiation and leukoreduction) and the amount of the blood product to be administered.
type BPO struct {
	HL7                            HL7Name `hl7:",name=BPO,type=s"`
	SetID                          SI      `hl7:"1,seq,required,len=4,display=Set Id - Bpo"`
	BpUniversalServiceIdentifier   CWE     `hl7:"2,required,table=9999,display=Bp Universal Service Identifier"`
	BpProcessingRequirements       []CWE   `hl7:"3,table=0508,display=Bp  Processing Requirements"`
	BpQuantity                     NM      `hl7:"4,required,display=Bp Quantity"`
	BpAmount                       NM      `hl7:"5,display=Bp Amount"`
	BpUnits                        *CWE    `hl7:"6,table=9999,display=Bp Units"`
	BpIntendedUseDateTime          DTM     `hl7:"7,format=YMDHM,display=Bp Intended Use Date/Time"`
	BpIntendedDispenseFromLocation *PL     `hl7:"8,display=Bp Intended Dispense From Location"`
	BpIntendedDispenseFromAddress  *XAD    `hl7:"9,display=Bp Intended Dispense From Address"`
	BpRequestedDispenseDateTime    DTM     `hl7:"10,format=YMDHM,display=Bp Requested Dispense Date/Time"`
	BpRequestedDispenseToLocation  *PL     `hl7:"11,display=Bp Requested Dispense To Location"`
	BpRequestedDispenseToAddress   *XAD    `hl7:"12,display=Bp Requested Dispense To Address"`
	BpIndicationForUse             []CWE   `hl7:"13,table=0509,display=Bp Indication For Use"`
	BpInformedConsentIndicator     ID      `hl7:"14,len=1,table=0136,display=Bp Informed Consent Indicator"`
}

// Blood Product Dispense Status
//
// In the processing of blood products, it is necessary for the transfusion service and the placer system to communicate information.
// The status messages need to contain additional information regarding the blood products requested, such as the unique
// donation ID, product code, blood type, expiration date/time of the blood product, and current status of the product. This
// segment is similar to an OBX segment, but contains additional attributes.
//
// The BP prefix in the element name indicates that the attribute pertains to any type of blood product. A blood product is defined
// as any type of blood component or commercially prepared blood product that is prepared and dispensed from the transfusion
// service.
//
// The BC prefix in the element name indicates that the attribute pertains only to blood components. A blood component is defined
// as the whole or any part of a blood donation. For example, from one whole blood donation, the unit of whole blood can be fractionated
// into red blood cells, plasma and platelets with each component contained in separate bags. These types of blood products
// are assigned a unique donation identification number as well as a product code that indicates the type of component contained
// in the bag.
//
// The CP prefix in the element name indicates that the attribute pertains only to Commercial Products. A commercial product
// is defined as a commercially manufactured product, such as blood derivatives ( Rh Immune Globulin, Factor VIII Concentrate
// or Blood Recipient Sets or Filters). These types of products are tracked by manufacturer and lot number and are not necessarily
// assigned a unique donation number.
type BPX struct {
	HL7                         HL7Name `hl7:",name=BPX,type=s"`
	SetID                       SI      `hl7:"1,seq,required,len=4,display=Set Id - Bpx"`
	BpDispenseStatus            CWE     `hl7:"2,required,table=0510,display=Bp Dispense Status"`
	BpStatus                    ID      `hl7:"3,required,len=1,table=0511,display=Bp Status"`
	BpDateTimeOfStatus          DTM     `hl7:"4,required,format=YMDHM,display=Bp Date/Time Of Status"`
	BcDonationID                *EI     `hl7:"5,conditional,display=Bc Donation Id"`
	BcComponent                 *CNE    `hl7:"6,conditional,table=9999,display=Bc Component"`
	BcDonationTypeIntendedUse   *CNE    `hl7:"7,table=9999,display=Bc Donation Type / Intended Use"`
	CpCommercialProduct         *CWE    `hl7:"8,conditional,table=0512,display=Cp Commercial Product"`
	CpManufacturer              *XON    `hl7:"9,conditional,display=Cp Manufacturer"`
	CpLotNumber                 *EI     `hl7:"10,conditional,display=Cp Lot Number"`
	BpBloodGroup                *CNE    `hl7:"11,table=9999,display=Bp Blood Group"`
	BcSpecialTesting            []CNE   `hl7:"12,table=9999,display=Bc Special Testing"`
	BpExpirationDateTime        DTM     `hl7:"13,format=YMDHM,display=Bp Expiration Date/Time"`
	BpQuantity                  NM      `hl7:"14,required,display=Bp Quantity"`
	BpAmount                    NM      `hl7:"15,display=Bp Amount"`
	BpUnits                     *CWE    `hl7:"16,table=9999,display=Bp Units"`
	BpUniqueID                  *EI     `hl7:"17,display=Bp Unique Id"`
	BpActualDispensedToLocation *PL     `hl7:"18,display=Bp Actual Dispensed To Location"`
	BpActualDispensedToAddress  *XAD    `hl7:"19,display=Bp Actual Dispensed To Address"`
	BpDispensedToReceiver       *XCN    `hl7:"20,display=Bp Dispensed To Receiver"`
	BpDispensingIndividual      *XCN    `hl7:"21,display=Bp Dispensing Individual"`
}

// Batch Trailer
//
// The BTS segment defines the end of a batch.
type BTS struct {
	HL7               HL7Name `hl7:",name=BTS,type=s"`
	BatchMessageCount ST      `hl7:"1,display=Batch Message Count"`
	BatchComment      ST      `hl7:"2,display=Batch Comment"`
	BatchTotals       []NM    `hl7:"3,display=Batch Totals"`
}

// Blood Product Transfusion/disposition
//
// The BP prefix in the element name indicates that the attribute pertains to any type of blood product. A blood product is defined
// as any type of blood component or commercially prepared blood product that is prepared and dispensed from the transfusion
// service.
//
// The BC prefix in the element name indicates that the attribute pertains only to blood components. A blood component is defined
// as any part or all of a whole blood donation. For example, from one whole blood donation, the unit of whole blood can be fractionated
// into red blood cells, plasma and platelets with each component contained in separate bags. These types of blood products
// are always assigned a unique donation identification number as well as a product code that indicates the type of component
// contained in the bag.
//
// The CP prefix in the element name indicates that the attribute pertains only to Commercial Products. A commercial product
// is defined as a commercially manufactured product, such as blood derivatives (Rh Immune Globulin, Factor VIII Concentrate
// or Blood Recipient Sets or Filters). These types of products are tracked by manufacturer and lot number and are not necessarily
// assigned a unique donation number.
type BTX struct {
	HL7                                HL7Name `hl7:",name=BTX,type=s"`
	SetID                              SI      `hl7:"1,seq,required,len=4,display=Set Id - Btx"`
	BcDonationID                       *EI     `hl7:"2,conditional,display=Bc Donation Id"`
	BcComponent                        *CNE    `hl7:"3,conditional,table=9999,display=Bc Component"`
	BcBloodGroup                       *CNE    `hl7:"4,conditional,table=9999,display=Bc Blood Group"`
	CpCommercialProduct                *CWE    `hl7:"5,conditional,table=0512,display=Cp Commercial Product"`
	CpManufacturer                     *XON    `hl7:"6,conditional,display=Cp Manufacturer"`
	CpLotNumber                        *EI     `hl7:"7,conditional,display=Cp Lot Number"`
	BpQuantity                         NM      `hl7:"8,required,display=Bp Quantity"`
	BpAmount                           NM      `hl7:"9,display=Bp Amount"`
	BpUnits                            *CWE    `hl7:"10,table=9999,display=Bp Units"`
	BpTransfusionDispositionStatus     CWE     `hl7:"11,required,table=0513,display=Bp Transfusion/Disposition Status"`
	BpMessageStatus                    ID      `hl7:"12,required,len=1,table=0511,display=Bp Message Status"`
	BpDateTimeOfStatus                 DTM     `hl7:"13,required,format=YMDHM,display=Bp Date/Time Of Status"`
	BpTransfusionAdministrator         *XCN    `hl7:"14,display=Bp Transfusion Administrator"`
	BpTransfusionVerifier              *XCN    `hl7:"15,display=Bp Transfusion Verifier"`
	BpTransfusionStartDateTimeOfStatus DTM     `hl7:"16,format=YMDHM,display=Bp Transfusion Start Date/Time Of Status"`
	BpTransfusionEndDateTimeOfStatus   DTM     `hl7:"17,format=YMDHM,display=Bp Transfusion End Date/Time Of Status"`
	BpAdverseReactionType              []CWE   `hl7:"18,table=0514,display=Bp Adverse Reaction Type"`
	BpTransfusionInterruptedReason     *CWE    `hl7:"19,table=0515,display=Bp Transfusion Interrupted Reason"`
	BPUniqueID                         *EI     `hl7:"20,display=BP Unique ID"`
}

// Blood Unit information Segment
//
// The intent of this segment is to describe the information associated with a blood unit, one example of which is one or more
// blood unit(s) resulting from a donation
type BUI struct {
	HL7                       HL7Name `hl7:",name=BUI,type=s"`
	SetID                     SI      `hl7:"1,seq,len=4,display=Set ID – BUI"`
	BloodUnitIdentifier       EI      `hl7:"2,required,display=Blood Unit Identifier"`
	BloodUnitType             CWE     `hl7:"3,required,table=0566,display=Blood Unit Type"`
	BloodUnitWeight           NM      `hl7:"4,required,display=Blood Unit Weight"`
	WeightUnits               CNE     `hl7:"5,required,table=0929,display=Weight Units"`
	BloodUnitVolume           NM      `hl7:"6,required,display=Blood Unit Volume"`
	VolumeUnits               CNE     `hl7:"7,required,table=0930,display=Volume Units"`
	ContainerCatalogNumber    ST      `hl7:"8,required,display=Container Catalog Number"`
	ContainerLotNumber        ST      `hl7:"9,required,display=Container Lot Number"`
	ContainerManufacturer     XON     `hl7:"10,required,display=Container Manufacturer"`
	TransportTemperature      NR      `hl7:"11,required,display=Transport Temperature"`
	TransportTemperatureUnits []CNE   `hl7:"12,required,table=0931,display=Transport Temperature Units"`
}

// Charge Description Master
//
// The CDM segment contains the fields for identifying anything which is charged to patient accounts, including procedures,
// services, supplies.  It is intended to be used to maintain a list of valid chargeable utilization items.  Its purpose is to
// keep billing codes synchronized between HIS, Patient Accounting, and other departmental systems.  It is not intended
// to completely support materials management, inventory, or complex pricing structures for which additional complex
// fields would be required.  Given an identifying charge code, the associated fields in the charge description master file
// will provide basic pricing and billing data.  All the additional information necessary for patient accounting systems
// to do billing and claims is not intended to be included in this segment; those should be part of insurance or billing profile
// tables.
//
// The CDM segment contains the fields which, for one chargeable item, remain the same across facilities, departments, and
// patient types.  The following PRC segment contains the fields which, for the same chargeable item, vary depending upon
// facility or department or patient type.
type CDM struct {
	HL7                          HL7Name `hl7:",name=CDM,type=s"`
	PrimaryKeyValue              CWE     `hl7:"1,required,table=0132,display=Primary Key Value - Cdm"`
	ChargeCodeAlias              []CWE   `hl7:"2,table=0132,display=Charge Code Alias"`
	ChargeDescriptionShort       ST      `hl7:"3,required,display=Charge Description Short"`
	ChargeDescriptionLong        ST      `hl7:"4,display=Charge Description Long"`
	DescriptionOverrideIndicator *CWE    `hl7:"5,table=0268,display=Description Override Indicator"`
	ExplodingCharges             []CWE   `hl7:"6,table=0132,display=Exploding Charges"`
	ProcedureCode                []CNE   `hl7:"7,table=0088,display=Procedure Code"`
	ActiveInactiveFlag           ID      `hl7:"8,len=1,table=0183,display=Active/Inactive Flag"`
	InventoryNumber              []CWE   `hl7:"9,table=0463,display=Inventory Number"`
	ResourceLoad                 NM      `hl7:"10,display=Resource Load"`
	ContractNumber               []CX    `hl7:"11,display=Contract Number"`
	ContractOrganization         []XON   `hl7:"12,display=Contract Organization"`
	RoomFeeIndicator             ID      `hl7:"13,len=1,table=0136,display=Room Fee Indicator"`
}

// Cumulative Dosage
//
// The Cumulative Dosage segment allows for the communication of cumulative dosage limits that administrations against
// this medication order should stay within.  As part of one of the pharmacy messages, one may want to indicate one or more limits
// that apply, e.g., limit for the duration of the order, lifetime limit, or weekly limit
type CDO struct {
	HL7                               HL7Name `hl7:",name=CDO,type=s"`
	SetID                             SI      `hl7:"1,seq,display=Set ID – CDO"`
	ActionCode                        ID      `hl7:"2,table=0206,display=Action Code"`
	CumulativeDosageLimit             *CQ     `hl7:"3,display=Cumulative Dosage Limit"`
	CumulativeDosageLimitTimeInterval *CQ     `hl7:"4,table=0924,display=Cumulative Dosage Limit Time Interval"`
}

// Certificate Detail
//
// The CER segment adds detailed information regarding the formal authorizations to provide a service (e.g. licenses, certificates)
// held by the health professional identified by the STF segment.
type CER struct {
	HL7                                HL7Name `hl7:",name=CER,type=s"`
	SetID                              SI      `hl7:"1,seq,required,len=4,display=Set Id - Cer"`
	SerialNumber                       ST      `hl7:"2,display=Serial Number"`
	Version                            ST      `hl7:"3,display=Version"`
	GrantingAuthority                  *XON    `hl7:"4,display=Granting Authority"`
	IssuingAuthority                   *XCN    `hl7:"5,display=Issuing Authority"`
	Signature                          *ED     `hl7:"6,display=Signature"`
	GrantingCountry                    ID      `hl7:"7,len=3,table=0399,display=Granting Country"`
	GrantingStateProvince              *CWE    `hl7:"8,table=0347,display=Granting State/Province"`
	GrantingCountyParish               *CWE    `hl7:"9,table=0289,display=Granting County/Parish"`
	CertificateType                    *CWE    `hl7:"10,display=Certificate Type"`
	CertificateDomain                  *CWE    `hl7:"11,display=Certificate Domain"`
	SubjectID                          *EI     `hl7:"12,conditional,display=Subject Id"`
	SubjectName                        ST      `hl7:"13,required,display=Subject Name"`
	SubjectDirectoryAttributeExtension []CWE   `hl7:"14,display=Subject Directory Attribute Extension"`
	SubjectPublicKeyInfo               *CWE    `hl7:"15,display=Subject Public Key Info"`
	AuthorityKeyIdentifier             *CWE    `hl7:"16,display=Authority Key Identifier"`
	BasicConstraint                    ID      `hl7:"17,len=1,table=0136,display=Basic Constraint"`
	CrlDistributionPoint               []CWE   `hl7:"18,display=Crl Distribution Point"`
	JurisdictionCountry                ID      `hl7:"19,len=3,table=0399,display=Jurisdiction Country"`
	JurisdictionStateProvince          *CWE    `hl7:"20,table=0347,display=Jurisdiction State/Province"`
	JurisdictionCountyParish           *CWE    `hl7:"21,table=0289,display=Jurisdiction County/Parish"`
	JurisdictionBreadth                []CWE   `hl7:"22,table=0547,display=Jurisdiction Breadth"`
	GrantingDate                       DTM     `hl7:"23,format=YMDHM,display=Granting Date"`
	IssuingDate                        DTM     `hl7:"24,format=YMDHM,display=Issuing Date"`
	ActivationDate                     DTM     `hl7:"25,format=YMDHM,display=Activation Date"`
	InactivationDate                   DTM     `hl7:"26,format=YMDHM,display=Inactivation Date"`
	ExpirationDate                     DTM     `hl7:"27,format=YMDHM,display=Expiration Date"`
	RenewalDate                        DTM     `hl7:"28,format=YMDHM,display=Renewal Date"`
	RevocationDate                     DTM     `hl7:"29,format=YMDHM,display=Revocation Date"`
	RevocationReasonCode               *CWE    `hl7:"30,display=Revocation Reason Code"`
	CertificateStatusCode              *CWE    `hl7:"31,table=0536,display=Certificate Status Code"`
}

// Clinical Study Master
//
// The Clinical Study Master (CM0) segment contains the information about the study itself.  The sending application study
// number for each patient is sent in the CSR segment.  The optional CM0 enables information about the study at the sending application
// that may be useful to the receiving systems.  All of the fields in the segment describe the study status at the sending facility
// unless otherwise agreed upon.
type CM0 struct {
	HL7                     HL7Name `hl7:",name=CM0,type=s"`
	SetID                   SI      `hl7:"1,seq,len=4,display=Set Id - Cm0"`
	SponsorStudyID          EI      `hl7:"2,required,display=Sponsor Study Id"`
	AlternateStudyID        []EI    `hl7:"3,max=3,display=Alternate Study Id"`
	TitleOfStudy            ST      `hl7:"4,required,display=Title Of Study"`
	ChairmanOfStudy         []XCN   `hl7:"5,display=Chairman Of Study"`
	LastIrbApprovalDate     DT      `hl7:"6,format=YMD,display=Last Irb Approval Date"`
	TotalAccrualToDate      NM      `hl7:"7,display=Total Accrual To Date"`
	LastAccrualDate         DT      `hl7:"8,format=YMD,display=Last Accrual Date"`
	ContactForStudy         []XCN   `hl7:"9,display=Contact For Study"`
	ContactsTelephoneNumber *XTN    `hl7:"10,display=Contact's Telephone Number"`
	ContactsAddress         []XAD   `hl7:"11,display=Contact's Address"`
}

// Clinical Study Phase Master
//
// Each Clinical Study Phase Master (CM1) segment contains the information about one phase of a study identified in the preceding
// CM0.  This is an optional structure to be used if the study has more than one treatment or evaluation phase within it.  The identification
// of study phases that the patient enters are sent in the CSP segment: sequence 2.  The CM1 segment describes the phase in general
// for the receiving system.
type CM1 struct {
	HL7                     HL7Name `hl7:",name=CM1,type=s"`
	SetID                   SI      `hl7:"1,seq,required,len=4,display=Set Id - Cm1"`
	StudyPhaseIdentifier    CWE     `hl7:"2,required,display=Study Phase Identifier"`
	DescriptionOfStudyPhase ST      `hl7:"3,required,display=Description Of Study Phase"`
}

// Clinical Study Schedule Master
//
// The Clinical Study Schedule Master (CM2) contains the information about the scheduled time points for study or phase-related
// treatment or evaluation events.  The fact that a patient has data satisfying a scheduled time point is sent in the CSS segment,
// sequence 2.  The CM2 segment describes the scheduled time points in general.
type CM2 struct {
	HL7                          HL7Name `hl7:",name=CM2,type=s"`
	SetID                        SI      `hl7:"1,seq,len=4,display=Set Id- Cm2"`
	ScheduledTimePoint           CWE     `hl7:"2,required,display=Scheduled Time Point"`
	DescriptionOfTimePoint       ST      `hl7:"3,display=Description Of Time Point"`
	EventsScheduledThisTimePoint []CWE   `hl7:"4,required,max=200,display=Events Scheduled This Time Point"`
}

// Clear Notification
//
// The clear equipment notification segment contains the data necessary to allow the receiving equipment to clear any associated
// notifications.
type CNS struct {
	HL7                                 HL7Name `hl7:",name=CNS,type=s"`
	StartingNotificationReferenceNumber NM      `hl7:"1,display=Starting Notification Reference Number"`
	EndingNotificationReferenceNumber   NM      `hl7:"2,display=Ending Notification Reference Number"`
	StartingNotificationDateTime        DTM     `hl7:"3,format=YMDHM,display=Starting Notification Date/Time"`
	EndingNotificationDateTime          DTM     `hl7:"4,format=YMDHM,display=Ending Notification Date/Time"`
	StartingNotificationCode            *CWE    `hl7:"5,table=9999,display=Starting Notification Code"`
	EndingNotificationCode              *CWE    `hl7:"6,table=9999,display=Ending Notification Code"`
}

// Consent Segment
//
// This segment identifies patient consent information relating to a particular message.  It can be used as part of existing
// messages to convey information about patient consent to procedures, admissions, information release/exchange or other
// events discussed by the message.  It may also be used in messages focusing on recording or requesting consent and for   consents
// related to employees or service providers.
//
// The segment will be used in conjunction with various other segments to identify the practitioner (PRA/STF) or patient
// (PID) the consent is for, the various individuals involved in the consent (ROL) as witnesses, consenting person (not always
// the patient), translators, consulting providers, etc., and the specific procedures being proposed (PR1).
type CON struct {
	HL7                                    HL7Name `hl7:",name=CON,type=s"`
	SetID                                  SI      `hl7:"1,seq,required,len=4,display=Set Id - Con"`
	ConsentType                            *CWE    `hl7:"2,table=0496,display=Consent Type"`
	ConsentFormIDAndVersion                ST      `hl7:"3,display=Consent Form Id And Version"`
	ConsentFormNumber                      *EI     `hl7:"4,display=Consent Form Number"`
	ConsentText                            []FT    `hl7:"5,display=Consent Text"`
	SubjectSpecificConsentText             []FT    `hl7:"6,display=Subject-specific Consent Text"`
	ConsentBackgroundInformation           []FT    `hl7:"7,display=Consent Background Information"`
	SubjectSpecificConsentBackgroundText   []FT    `hl7:"8,display=Subject-specific Consent Background Text"`
	ConsenterImposedLimitations            []FT    `hl7:"9,display=Consenter-imposed Limitations"`
	ConsentMode                            *CNE    `hl7:"10,table=0497,display=Consent Mode"`
	ConsentStatus                          CNE     `hl7:"11,required,table=0498,display=Consent Status"`
	ConsentDiscussionDateTime              DTM     `hl7:"12,format=YMDHM,display=Consent Discussion Date/Time"`
	ConsentDecisionDateTime                DTM     `hl7:"13,format=YMDHM,display=Consent Decision Date/Time"`
	ConsentEffectiveDateTime               DTM     `hl7:"14,format=YMDHM,display=Consent Effective Date/Time"`
	ConsentEndDateTime                     DTM     `hl7:"15,format=YMDHM,display=Consent End Date/Time"`
	SubjectCompetenceIndicator             ID      `hl7:"16,len=1,table=0136,display=Subject Competence Indicator"`
	TranslatorAssistanceIndicator          ID      `hl7:"17,len=1,table=0136,display=Translator Assistance Indicator"`
	LanguageTranslatedTo                   *CWE    `hl7:"18,table=0296,display=Language Translated To"`
	InformationalMaterialSuppliedIndicator ID      `hl7:"19,len=1,table=0136,display=Informational Material Supplied Indicator"`
	ConsentBypassReason                    *CWE    `hl7:"20,table=0499,display=Consent Bypass Reason"`
	ConsentDisclosureLevel                 ID      `hl7:"21,len=1,table=0500,display=Consent Disclosure Level"`
	ConsentNonDisclosureReason             *CWE    `hl7:"22,table=0501,display=Consent Non-disclosure Reason"`
	NonSubjectConsenterReason              *CWE    `hl7:"23,table=0502,display=Non-subject Consenter Reason"`
	ConsenterID                            []XPN   `hl7:"24,required,display=Consenter Id"`
	RelationshipToSubject                  []CWE   `hl7:"25,required,table=0548,display=Relationship To Subject"`
}

// Clinical Study Phase
//
// The CSP segment contains information on a patient’s status for a particular phase of the study. This segment is optional
// and is useful when a study has different evaluation intervals within it. (See section 7.7.1, "HL7 Attribute Table – CSR
// – Clinical Study Registration," and section 7.5.1.2, "Phase of a clinical trial:.") The CSP segment is implemented on
// a study-specific basis for messaging purposes. The fact that the patient has entered a phase of the study that represents
// a certain treatment approach may need to be messaged to other systems, like pharmacy, nursing, or order entry. It is also
// important to sponsors and data management centers for tracking patient progress through the study and monitoring the
// data schedule defined for each phase. It may subsume OBR and OBX segments that follow it to indicate that these data describe
// the phase.
type CSP struct {
	HL7                     HL7Name `hl7:",name=CSP,type=s"`
	StudyPhaseIdentifier    CWE     `hl7:"1,required,display=Study Phase Identifier"`
	DateTimeStudyPhaseBegan DTM     `hl7:"2,required,format=YMDHM,display=Date/Time Study Phase Began"`
	DateTimeStudyPhaseEnded DTM     `hl7:"3,format=YMDHM,display=Date/Time Study Phase Ended"`
	StudyPhaseEvaluability  *CWE    `hl7:"4,conditional,table=9999,display=Study Phase Evaluability"`
}

// Clinical Study Registration
//
// The CSR segment will contain fundamental administrative and regulatory information required to document a patient’s
// enrollment on a clinical trial. This segment is all that is required if one needs to message another system that an enrollment
// has taken place, i.e., from clinical trials to pharmacy, accounting, or order entry systems. The CSR segment may also be
// used to identify that OBR, OBX, RXA, and RXR segments that follow represent data applicable to the identified study.
type CSR struct {
	HL7                                HL7Name `hl7:",name=CSR,type=s"`
	SponsorStudyID                     EI      `hl7:"1,required,display=Sponsor Study Id"`
	AlternateStudyID                   *EI     `hl7:"2,display=Alternate Study Id"`
	InstitutionRegisteringThePatient   *CWE    `hl7:"3,table=9999,display=Institution Registering The Patient"`
	SponsorPatientID                   CX      `hl7:"4,required,display=Sponsor Patient Id"`
	AlternatePatientID                 *CX     `hl7:"5,display=Alternate Patient Id - Csr"`
	DateTimeOfPatientStudyRegistration DTM     `hl7:"6,required,format=YMDHM,display=Date/Time Of Patient Study Registration"`
	PersonPerformingStudyRegistration  []XCN   `hl7:"7,display=Person Performing Study Registration"`
	StudyAuthorizingProvider           []XCN   `hl7:"8,required,display=Study Authorizing Provider"`
	DateTimePatientStudyConsentSigned  DTM     `hl7:"9,conditional,format=YMDHM,display=Date/Time Patient Study Consent Signed"`
	PatientStudyEligibilityStatus      *CWE    `hl7:"10,conditional,table=9999,display=Patient Study Eligibility Status"`
	StudyRandomizationDateTime         []DTM   `hl7:"11,max=3,format=YMDHM,display=Study Randomization Date/Time"`
	RandomizedStudyArm                 []CWE   `hl7:"12,max=3,table=9999,display=Randomized Study Arm"`
	StratumForStudyRandomization       []CWE   `hl7:"13,max=3,table=9999,display=Stratum For Study Randomization"`
	PatientEvaluabilityStatus          *CWE    `hl7:"14,conditional,table=9999,display=Patient Evaluability Status"`
	DateTimeEndedStudy                 DTM     `hl7:"15,conditional,format=YMDHM,display=Date/Time Ended Study"`
	ReasonEndedStudy                   *CWE    `hl7:"16,conditional,table=9999,display=Reason Ended Study"`
}

// Clinical Study Data Schedule Segment
//
// The Clinical Study Data Schedule (CSS) segment is optional depending on whether messaging of study data needs to be linked
// to the scheduled data time points for the study. (See Section 7.5.1.3, "Data schedule:".) The CSS segment enables communication
// of data schedules and adherence that ranges from the basic to the elaborate. Use of the segment must be planned for each implementation.
// Each CSS segment will subsume observation and drug administration segments that follow, indicating that they satisfy
// this scheduled time point.
type CSS struct {
	HL7                            HL7Name `hl7:",name=CSS,type=s"`
	StudyScheduledTimePoint        CWE     `hl7:"1,required,table=9999,display=Study Scheduled Time Point"`
	StudyScheduledPatientTimePoint DTM     `hl7:"2,format=YMDHM,display=Study Scheduled Patient Time Point"`
	StudyQualityControlCodes       []CWE   `hl7:"3,max=3,table=9999,display=Study Quality Control Codes"`
}

// Contact Data
//
// The CTD segment may identify any contact personnel associated with a patient referral message and its related transactions.
// The CTD segment will be paired with a PRD segment.  The PRD segment contains data specifically focused on provider information
// in a referral.  While it is important in an inter-enterprise transaction to transmit specific information regarding the
// providers involved (referring and referred-to), it may also be important to identify the contact personnel associated
// with the given provider.  For example, a provider receiving a referral may need to know the office manager or the billing
// person at the institution of the provider who sent the referral.  This segment allows for multiple contact personnel to
// be associated with a single provider.
type CTD struct {
	HL7                             HL7Name `hl7:",name=CTD,type=s"`
	ContactRole                     []CWE   `hl7:"1,required,table=0131,display=Contact Role"`
	ContactName                     []XPN   `hl7:"2,display=Contact Name"`
	ContactAddress                  []XAD   `hl7:"3,display=Contact Address"`
	ContactLocation                 *PL     `hl7:"4,display=Contact Location"`
	ContactCommunicationInformation []XTN   `hl7:"5,display=Contact Communication Information"`
	PreferredMethodOfContact        *CWE    `hl7:"6,table=0185,display=Preferred Method Of Contact"`
	ContactIdentifiers              []PLN   `hl7:"7,display=Contact Identifiers"`
}

// Clinical Trial Identification
//
// The CTI segment is an optional segment that contains information to identify the clinical trial, phase and time point with
// which an order or result is associated.
type CTI struct {
	HL7                     HL7Name `hl7:",name=CTI,type=s"`
	SponsorStudyID          EI      `hl7:"1,required,display=Sponsor Study Id"`
	StudyPhaseIdentifier    *CWE    `hl7:"2,conditional,display=Study Phase Identifier"`
	StudyScheduledTimePoint *CWE    `hl7:"3,table=9999,display=Study Scheduled Time Point"`
}

// Disability
//
// The disability segment contains information related to the disability of a person. This segment was created instead of
// adding disability attributes to each segment that contains a person (to which disability may apply). This is an optional
// segment that can be used to send disability information about a person already defined by the Patient Administration Chapter.
// The disabled person code and identifier allow for the association of the disability information to the person.
type DB1 struct {
	HL7                        HL7Name `hl7:",name=DB1,type=s"`
	SetID                      SI      `hl7:"1,seq,required,len=4,display=Set Id - Db1"`
	DisabledPersonCode         *CWE    `hl7:"2,table=0334,display=Disabled Person Code"`
	DisabledPersonIdentifier   []CX    `hl7:"3,display=Disabled Person Identifier"`
	DisabilityIndicator        ID      `hl7:"4,len=1,table=0136,display=Disability Indicator"`
	DisabilityStartDate        DT      `hl7:"5,format=YMD,display=Disability Start Date"`
	DisabilityEndDate          DT      `hl7:"6,format=YMD,display=Disability End Date"`
	DisabilityReturnToWorkDate DT      `hl7:"7,format=YMD,display=Disability Return To Work Date"`
	DisabilityUnableToWorkDate DT      `hl7:"8,format=YMD,display=Disability Unable To Work Date"`
}

// Diagnosis
//
// The DG1 segment contains patient diagnosis information of various types, for example, admitting, primary, etc. The DG1
// segment is used to send multiple diagnoses (for example, for medical records encoding). It is also used when the FT1-19
// - Diagnosis Code - FT1 does not provide sufficient information for a billing system. This diagnosis coding should be distinguished
// from the clinical problem segment used by caregivers to manage the patient (see Chapter 12, Patient Care). Coding methodologies
// are also defined.
type DG1 struct {
	HL7                             HL7Name `hl7:",name=DG1,type=s"`
	SetID                           SI      `hl7:"1,seq,required,len=4,display=Set Id - Dg1"`
	DiagnosisCodingMethod           ST      `hl7:"2,display=Diagnosis Coding Method"`
	DiagnosisCode                   CWE     `hl7:"3,required,table=0051,display=Diagnosis Code - Dg1"`
	DiagnosisDescription            ST      `hl7:"4,display=Diagnosis Description"`
	DiagnosisDateTime               DTM     `hl7:"5,format=YMDHM,display=Diagnosis Date/Time"`
	DiagnosisType                   CWE     `hl7:"6,required,table=0052,display=Diagnosis Type"`
	MajorDiagnosticCategory         ST      `hl7:"7,display=Major Diagnostic Category"`
	DiagnosticRelatedGroup          ST      `hl7:"8,display=Diagnostic Related Group"`
	DrgApprovalIndicator            ST      `hl7:"9,len=1,display=Drg Approval Indicator"`
	DrgGrouperReviewCode            ST      `hl7:"10,display=Drg Grouper Review Code"`
	OutlierType                     ST      `hl7:"11,display=Outlier Type"`
	OutlierDays                     ST      `hl7:"12,display=Outlier Days"`
	OutlierCost                     ST      `hl7:"13,display=Outlier Cost"`
	GrouperVersionAndType           ST      `hl7:"14,display=Grouper Version And Type"`
	DiagnosisPriority               NM      `hl7:"15,table=0359,display=Diagnosis Priority"`
	DiagnosingClinician             []XCN   `hl7:"16,display=Diagnosing Clinician"`
	DiagnosisClassification         *CWE    `hl7:"17,table=0228,display=Diagnosis Classification"`
	ConfidentialIndicator           ID      `hl7:"18,len=1,table=0136,display=Confidential Indicator"`
	AttestationDateTime             DTM     `hl7:"19,format=YMDHM,display=Attestation Date/Time"`
	DiagnosisIdentifier             *EI     `hl7:"20,conditional,display=Diagnosis Identifier"`
	DiagnosisActionCode             ID      `hl7:"21,conditional,len=1,table=0206,display=Diagnosis Action Code"`
	ParentDiagnosis                 *EI     `hl7:"22,conditional,display=Parent Diagnosis"`
	DrgCclValueCode                 *CWE    `hl7:"23,table=0728,display=Drg Ccl Value Code"`
	DrgGroupingUsage                ID      `hl7:"24,len=1,table=0136,display=Drg Grouping Usage"`
	DrgDiagnosisDeterminationStatus *CWE    `hl7:"25,table=0731,display=Drg Diagnosis Determination Status"`
	PresentOnAdmissionPoaIndicator  *CWE    `hl7:"26,table=0895,display=Present On Admission (poa) Indicator"`
}

// Drg Master File Information
//
// The DMI segment contains the DRG related basic information, for example, relative weight, etc.  The DMI segment is used
// to send the fixed information assigned to a specific DRG.
type DMI struct {
	HL7                     HL7Name `hl7:",name=DMI,type=s"`
	DiagnosticRelatedGroup  *CNE    `hl7:"1,table=0055,display=Diagnostic Related Group"`
	MajorDiagnosticCategory *CNE    `hl7:"2,conditional,table=0118,display=Major Diagnostic Category"`
	LowerAndUpperTrimPoints *NR     `hl7:"3,conditional,display=Lower And Upper Trim Points"`
	AverageLengthOfStay     NM      `hl7:"4,conditional,display=Average Length Of Stay"`
	RelativeWeight          NM      `hl7:"5,conditional,display=Relative Weight"`
}

// Donation Segment
//
// The intent of this segment is to describe the actual donation procedure.
type DON struct {
	HL7                               HL7Name `hl7:",name=DON,type=s"`
	DonationIdentificationNumberDIN   *EI     `hl7:"1,conditional,display=Donation Identification Number - DIN"`
	DonationType                      *CNE    `hl7:"2,conditional,display=Donation Type"`
	PhlebotomyStartDateTime           DTM     `hl7:"3,required,format=YMDHM,display=Phlebotomy Start Date/Time"`
	PhlebotomyEndDateTime             DTM     `hl7:"4,required,format=YMDHM,display=Phlebotomy End Date/Time"`
	DonationDuration                  NM      `hl7:"5,required,display=Donation Duration"`
	DonationDurationUnits             CNE     `hl7:"6,required,table=0932,display=Donation Duration Units"`
	IntendedProcedureType             []CNE   `hl7:"7,required,table=0933,display=Intended Procedure Type"`
	ActualProcedureType               []CNE   `hl7:"8,required,table=0933,display=Actual Procedure Type"`
	DonorEligibilityFlag              ID      `hl7:"9,required,table=0136,display=Donor Eligibility Flag"`
	DonorEligibilityProcedureType     []CNE   `hl7:"10,required,table=0933,display=Donor Eligibility Procedure Type"`
	DonorEligibilityDate              DTM     `hl7:"11,required,format=YMDHM,display=Donor Eligibility Date"`
	ProcessInterruption               CNE     `hl7:"12,required,table=0923,display=Process Interruption"`
	ProcessInterruptionReason         CNE     `hl7:"13,required,table=0935,display=Process Interruption Reason"`
	PhlebotomyIssue                   []CNE   `hl7:"14,required,table=0925,display=Phlebotomy Issue"`
	IntendedRecipientBloodRelative    ID      `hl7:"15,required,table=0136,display=Intended Recipient Blood Relative"`
	IntendedRecipientName             XPN     `hl7:"16,required,display=Intended Recipient Name"`
	IntendedRecipientDOB              DTM     `hl7:"17,required,format=YMDHM,display=Intended Recipient DOB"`
	IntendedRecipientFacility         XON     `hl7:"18,required,display=Intended Recipient Facility"`
	IntendedRecipientProcedureDate    DTM     `hl7:"19,required,format=YMDHM,display=Intended Recipient Procedure Date"`
	IntendedRecipientOrderingProvider XPN     `hl7:"20,required,display=Intended Recipient Ordering Provider"`
	PhlebotomyStatus                  CNE     `hl7:"21,required,table=0926,display=Phlebotomy Status"`
	ArmStick                          CNE     `hl7:"22,required,table=0927,display=Arm Stick"`
	BleedStartPhlebotomist            XPN     `hl7:"23,required,display=Bleed Start Phlebotomist"`
	BleedEndPhlebotomist              XPN     `hl7:"24,required,display=Bleed End Phlebotomist"`
	AphaeresisTypeMachine             ST      `hl7:"25,required,display=Aphaeresis Type Machine"`
	AphaeresisMachineSerialNumber     ST      `hl7:"26,required,display=Aphaeresis Machine Serial Number"`
	DonorReaction                     ID      `hl7:"27,required,table=0136,display=Donor Reaction"`
	FinalReviewStaffID                XPN     `hl7:"28,required,display=Final Review Staff ID"`
	FinalReviewDateTime               DTM     `hl7:"29,required,format=YMDHM,display=Final Review Date/Time"`
	NumberOfTubesCollected            NM      `hl7:"30,required,display=Number of Tubes Collected"`
	DonationSampleIdentifier          []EI    `hl7:"31,required,display=Donation Sample Identifier"`
	DonationAcceptStaff               XCN     `hl7:"32,required,display=Donation Accept Staff"`
	DonationMaterialReviewStaff       []XCN   `hl7:"33,required,display=Donation Material Review Staff"`
}

// Diagnosis Related Group
//
// The DRG segment contains diagnoses-related grouping information of various types. The DRG segment is used to send the
// DRG information, for example, for billing and medical records encoding.
type DRG struct {
	HL7                        HL7Name `hl7:",name=DRG,type=s"`
	DiagnosticRelatedGroup     *CNE    `hl7:"1,table=0055,display=Diagnostic Related Group"`
	AssignedDateTime           DTM     `hl7:"2,format=YMDHM,display=Drg Assigned Date/Time"`
	ApprovalIndicator          ID      `hl7:"3,len=1,table=0136,display=Drg Approval Indicator"`
	GrouperReviewCode          *CWE    `hl7:"4,table=0056,display=Drg Grouper Review Code"`
	OutlierType                *CWE    `hl7:"5,table=0083,display=Outlier Type"`
	OutlierDays                NM      `hl7:"6,display=Outlier Days"`
	OutlierCost                *CP     `hl7:"7,display=Outlier Cost"`
	Payor                      *CWE    `hl7:"8,table=0229,display=Drg Payor"`
	OutlierReimbursement       *CP     `hl7:"9,display=Outlier Reimbursement"`
	ConfidentialIndicator      ID      `hl7:"10,len=1,table=0136,display=Confidential Indicator"`
	TransferType               *CWE    `hl7:"11,table=0415,display=Drg Transfer Type"`
	NameOfCoder                *XPN    `hl7:"12,display=Name Of Coder"`
	GrouperStatus              *CWE    `hl7:"13,table=0734,display=Grouper Status"`
	PcclValueCode              *CWE    `hl7:"14,table=0728,display=Pccl Value Code"`
	EffectiveWeight            NM      `hl7:"15,display=Effective Weight"`
	MonetaryAmount             *MO     `hl7:"16,display=Monetary Amount"`
	StatusPatient              *CWE    `hl7:"17,table=0739,display=Status Patient"`
	GrouperSoftwareName        ST      `hl7:"18,display=Grouper Software Name"`
	GrouperSoftwareVersion     ST      `hl7:"19,display=Grouper Software Version"`
	StatusFinancialCalculation *CWE    `hl7:"20,table=0742,display=Status Financial Calculation"`
	RelativeDiscountSurcharge  *MO     `hl7:"21,display=Relative Discount/Surcharge"`
	BasicCharge                *MO     `hl7:"22,display=Basic Charge"`
	TotalCharge                *MO     `hl7:"23,display=Total Charge"`
	DiscountSurcharge          *MO     `hl7:"24,display=Discount/Surcharge"`
	CalculatedDays             NM      `hl7:"25,display=Calculated Days"`
	StatusGender               *CWE    `hl7:"26,table=0749,display=Status Gender"`
	StatusAge                  *CWE    `hl7:"27,table=0749,display=Status Age"`
	StatusLengthOfStay         *CWE    `hl7:"28,table=0749,display=Status Length Of Stay"`
	StatusSameDayFlag          *CWE    `hl7:"29,table=0749,display=Status Same Day Flag"`
	StatusSeparationMode       *CWE    `hl7:"30,table=0749,display=Status Separation Mode"`
	StatusWeightAtBirth        *CWE    `hl7:"31,table=0755,display=Status Weight At Birth"`
	StatusRespirationMinutes   *CWE    `hl7:"32,table=0757,display=Status Respiration Minutes"`
	StatusAdmission            *CWE    `hl7:"33,table=0759,display=Status Admission"`
}

// Continuation Pointer
//
// The DSC segment is used in the continuation protocol.
type DSC struct {
	HL7                 HL7Name `hl7:",name=DSC,type=s"`
	ContinuationPointer ST      `hl7:"1,display=Continuation Pointer"`
	ContinuationStyle   ID      `hl7:"2,len=1,table=0398,display=Continuation Style"`
}

// Display Data
//
// The DSP segment is used to contain data that has been preformatted by the sender for display.  The semantic content of the
// data is lost; the data is simply treated as lines of text.
type DSP struct {
	HL7               HL7Name `hl7:",name=DSP,type=s"`
	SetID             SI      `hl7:"1,seq,len=4,display=Set Id - Dsp"`
	DisplayLevel      SI      `hl7:"2,len=4,display=Display Level"`
	DataLine          TX      `hl7:"3,required,display=Data Line"`
	LogicalBreakPoint ST      `hl7:"4,display=Logical Break Point"`
	ResultID          TX      `hl7:"5,display=Result Id"`
}

// Equipment Command
//
// The equipment command segment contains the information required to notify the receiving component what is to happen.
type ECD struct {
	HL7                     HL7Name `hl7:",name=ECD,type=s"`
	ReferenceCommandNumber  NM      `hl7:"1,required,display=Reference Command Number"`
	RemoteControlCommand    CWE     `hl7:"2,required,table=0368,display=Remote Control Command"`
	ResponseRequired        ID      `hl7:"3,len=1,table=0136,display=Response Required"`
	RequestedCompletionTime ST      `hl7:"4,display=Requested Completion Time"`
	Parameters              []TX    `hl7:"5,display=Parameters"`
}

// Equipment Command Response
//
// The equipment command response segment contains the receiving component's response to the previously received command.
type ECR struct {
	HL7                       HL7Name `hl7:",name=ECR,type=s"`
	CommandResponse           CWE     `hl7:"1,required,table=0387,display=Command Response"`
	DateTimeCompleted         DTM     `hl7:"2,required,format=YMDHM,display=Date/Time Completed"`
	CommandResponseParameters []TX    `hl7:"3,display=Command Response Parameters"`
}

// Educational Detail
//
// The EDU segment adds detailed educational information to the staff member identified by the STF segment.  An EDU segment
// may optionally follow an STF segment.  An EDU segment must always have been preceded by a corresponding STF segment.
type EDU struct {
	HL7                                         HL7Name `hl7:",name=EDU,type=s"`
	SetID                                       SI      `hl7:"1,seq,required,len=4,display=Set Id - Edu"`
	AcademicDegree                              *CWE    `hl7:"2,table=0360,display=Academic Degree"`
	AcademicDegreeProgramDateRange              *DR     `hl7:"3,display=Academic Degree Program Date Range"`
	AcademicDegreeProgramParticipationDateRange *DR     `hl7:"4,display=Academic Degree Program Participation Date Range"`
	AcademicDegreeGrantedDate                   DT      `hl7:"5,format=YMD,display=Academic Degree Granted Date"`
	School                                      *XON    `hl7:"6,display=School"`
	SchoolTypeCode                              *CWE    `hl7:"7,table=0402,display=School Type Code"`
	SchoolAddress                               *XAD    `hl7:"8,display=School Address"`
	MajorFieldOfStudy                           []CWE   `hl7:"9,display=Major Field Of Study"`
}

// Equipment/log Service
//
// The equipment log/service segment is the data necessary to maintain an adequate audit trail of events that have occurred
// on a particular piece of equipment.
type EQP struct {
	HL7             HL7Name `hl7:",name=EQP,type=s"`
	EventType       CWE     `hl7:"1,required,table=0450,display=Event Type"`
	FileName        ST      `hl7:"2,display=File Name"`
	StartDateTime   DTM     `hl7:"3,required,format=YMDHM,display=Start Date/Time"`
	EndDateTime     DTM     `hl7:"4,format=YMDHM,display=End Date/Time"`
	TransactionData FT      `hl7:"5,required,display=Transaction Data"`
}

// Equipment Detail
//
// The equipment detail segment contains the data necessary to identify and maintain the equipment that is being used throughout
// the Laboratory Automation System.
type EQU struct {
	HL7                         HL7Name `hl7:",name=EQU,type=s"`
	EquipmentInstanceIdentifier EI      `hl7:"1,required,display=Equipment Instance Identifier"`
	EventDateTime               DTM     `hl7:"2,required,format=YMDHM,display=Event Date/Time"`
	EquipmentState              *CWE    `hl7:"3,conditional,table=0365,display=Equipment State"`
	LocalRemoteControlState     *CWE    `hl7:"4,table=0366,display=Local/Remote Control State"`
	AlertLevel                  *CWE    `hl7:"5,table=0367,display=Alert Level"`
}

// Error
//
// The ERR segment is used to add error comments to acknowledgment messages.
//
// Use Cases:
// Severity: A receiving application needs to communicate 2 "error or exception statements." One is an "error;" the other
// is a "warning". To accomplish this, an acknowledgement message with 2 ERR segments is sent. Upon receipt, the sending application
// can display both, including the appropriate severity, to the user.
//
// Application Error Code: A receiving application generates an error that reports an application error code and returns
// this information in its response. This code in turn is used by helpdesk staff to pinpoint the exact cause of the error, or
// by the application to prompt an appropriate response from the user. (Ex. Deceased date must be greater than or equal to birth
// date).
//
// Application Error Parameter: A receiving application encounters an error during processing of a transaction. In addition
// to an error code, the application provides an error parameter that gives greater detail as to the exact nature of the error.
// The receiving application looks up the message corresponding to the error code, substitutes in the parameter, and displays
// the resulting message to the user.
//
// Diagnostic Information: While processing a transaction, a receiving application encounters an exception. When the
// exception is thrown, it provides a volume of detailed information relating to the error encountered. The receiving application
// captures the information and sends it in its response. The user reports the error to the help desk, and on request, faxes
// a copy of the diagnostic information to assist analyzing the problem.
//
// User Message: A user executes an application function that generates a transaction that is sent to another application
// for further processing. During this processing, the receiving application encounters an error and, as part of the error
// handling routine, retrieves a User Message that it returns in its response. The originating application receives the
// error and displays it to the end user with the intent that the error condition can be resolved and the user can re-execute
// the function without error.
//
// Inform Person Code: After submitting a dispense transaction, a response is returned to the user indicating that the patient
// may be abusing drugs. Given the sensitivity of this warning, the error is returned with an indicator stating that the patient
// should not be informed of the error with the implication that steps should be taken to rule out or confirm the warning.
//
// Override Type: If a business rule states that a prescription on hold cannot be dispensed, an override type might be "Dispense
// Held Prescription" to allow the prescription to be dispensed in exception to the rule.
//
// Override Reason Codes: A patient is given a prescription; however, before completing the prescription, the remaining
// pills are spoiled. The patient returns to their pharmacy and explains the situation to their pharmacist. The pharmacist
// decides to replace the spoiled drugs; however, when attempting to record the event, a message is returned indicating that
// the dispense would exceed the maximum amount prescribed. The pharmacist overrides the rule and specifies an Override
// Reason Code indicating a replacement of lost product.
//
// Help Desk Contact: Help desk contact information is stored in a database. When an application error is encountered, the
// database is queried and the most current help desk contact information is returned in the error message. This is displayed
// to the user by the receiving application.
//
// Better Error Location Information: Receiving system detects an error with the 3rd repetition of the ROL.4 (Role Person
// - XCN).16 (Name Context – CE).4(Alternate Identifier – CWE). The application identifies the specific repetition and
// component when raising the error, simplifying diagnosis of the problem.
//
// Support for multiple Error Locations: Two fields are marked as conditional, with the condition that one of the two must
// be specified. The sending application leaves both blank. The receiving application detects the problem, and sends back
// a single error indicating that one of the fields must be filled in. The ERR segment identifies both positions within the
// message that relate to the error.
type ERR struct {
	HL7                       HL7Name `hl7:",name=ERR,type=s"`
	ErrorCodeAndLocation      ST      `hl7:"1,display=Error Code And Location"`
	ErrorLocation             []ERL   `hl7:"2,display=Error Location"`
	Hl7ErrorCode              CWE     `hl7:"3,required,table=0357,display=Hl7 Error Code"`
	Severity                  ID      `hl7:"4,required,len=1,table=0516,display=Severity"`
	ApplicationErrorCode      *CWE    `hl7:"5,table=0533,display=Application Error Code"`
	ApplicationErrorParameter []ST    `hl7:"6,max=10,display=Application Error Parameter"`
	DiagnosticInformation     TX      `hl7:"7,display=Diagnostic Information"`
	UserMessage               TX      `hl7:"8,display=User Message"`
	InformPersonIndicator     []CWE   `hl7:"9,table=0517,display=Inform Person Indicator"`
	OverrideType              *CWE    `hl7:"10,table=0518,display=Override Type"`
	OverrideReasonCode        []CWE   `hl7:"11,table=0519,display=Override Reason Code"`
	HelpDeskContactPoint      []XTN   `hl7:"12,display=Help Desk Contact Point"`
}

// Event Type
//
// The EVN segment is used to communicate necessary trigger event information to receiving applications. Valid event types
// for all chapters are contained in HL7 Table 0003 - Event Type.
type EVN struct {
	HL7                  HL7Name `hl7:",name=EVN,type=s"`
	EventTypeCode        ST      `hl7:"1,display=Event Type Code"`
	RecordedDateTime     DTM     `hl7:"2,required,format=YMDHM,display=Recorded Date/Time"`
	DateTimePlannedEvent DTM     `hl7:"3,format=YMDHM,display=Date/Time Planned Event"`
	EventReasonCode      *CWE    `hl7:"4,table=0062,display=Event Reason Code"`
	OperatorID           []XCN   `hl7:"5,table=0188,display=Operator Id"`
	EventOccurred        DTM     `hl7:"6,format=YMDHM,display=Event Occurred"`
	EventFacility        *HD     `hl7:"7,display=Event Facility"`
}

// File Header
//
// The FHS segment is used to head a file (group of batches) as defined in Section 2.10.3, "HL7 batch protocol".
type FHS struct {
	HL7                         HL7Name `hl7:",name=FHS,type=s"`
	FileFieldSeparator          ST      `hl7:"1,required,len=1,display=File Field Separator"`
	FileEncodingCharacters      ST      `hl7:"2,required,len=5,display=File Encoding Characters"`
	FileSendingApplication      *HD     `hl7:"3,display=File Sending Application"`
	FileSendingFacility         *HD     `hl7:"4,display=File Sending Facility"`
	FileReceivingApplication    *HD     `hl7:"5,display=File Receiving Application"`
	FileReceivingFacility       *HD     `hl7:"6,display=File Receiving Facility"`
	FileCreationDateTime        DTM     `hl7:"7,format=YMDHM,display=File Creation Date/Time"`
	FileSecurity                ST      `hl7:"8,display=File Security"`
	FileNameID                  ST      `hl7:"9,display=File Name/Id"`
	FileHeaderComment           ST      `hl7:"10,display=File Header Comment"`
	FileControlID               ST      `hl7:"11,display=File Control Id"`
	ReferenceFileControlID      ST      `hl7:"12,display=Reference File Control Id"`
	FileSendingNetworkAddress   *HD     `hl7:"13,display=File Sending Network Address"`
	FileReceivingNetworkAddress *HD     `hl7:"14,display=File Receiving Network Address"`
}

// Financial Transaction
//
// The FT1 segment contains the detail data necessary to post charges, payments, adjustments, etc., to patient accounting
// records.
type FT1 struct {
	HL7                                        HL7Name `hl7:",name=FT1,type=s"`
	SetID                                      SI      `hl7:"1,seq,len=4,display=Set Id - Ft1"`
	TransactionID                              ST      `hl7:"2,len=12,display=Transaction Id"`
	TransactionBatchID                         ST      `hl7:"3,len=10,display=Transaction Batch Id"`
	TransactionDate                            DR      `hl7:"4,required,display=Transaction Date"`
	TransactionPostingDate                     DTM     `hl7:"5,format=YMDHM,display=Transaction Posting Date"`
	TransactionType                            CWE     `hl7:"6,required,table=0017,display=Transaction Type"`
	TransactionCode                            CWE     `hl7:"7,required,table=0132,display=Transaction Code"`
	TransactionDescription                     ST      `hl7:"8,display=Transaction Description"`
	TransactionDescriptionAlt                  ST      `hl7:"9,display=Transaction Description - Alt"`
	TransactionQuantity                        NM      `hl7:"10,display=Transaction Quantity"`
	TransactionAmountExtended                  *CP     `hl7:"11,display=Transaction Amount - Extended"`
	TransactionAmountUnit                      *CP     `hl7:"12,display=Transaction Amount - Unit"`
	DepartmentCode                             *CWE    `hl7:"13,table=0049,display=Department Code"`
	HealthPlanID                               *CWE    `hl7:"14,table=0072,display=Health Plan Id"`
	InsuranceAmount                            *CP     `hl7:"15,display=Insurance Amount"`
	AssignedPatientLocation                    *PL     `hl7:"16,display=Assigned Patient Location"`
	FeeSchedule                                *CWE    `hl7:"17,table=0024,display=Fee Schedule"`
	PatientType                                *CWE    `hl7:"18,table=0018,display=Patient Type"`
	DiagnosisCode                              []CWE   `hl7:"19,table=0051,display=Diagnosis Code - Ft1"`
	PerformedByCode                            []XCN   `hl7:"20,table=0084,display=Performed By Code"`
	OrderedByCode                              []XCN   `hl7:"21,display=Ordered By Code"`
	UnitCost                                   *CP     `hl7:"22,display=Unit Cost"`
	FillerOrderNumber                          *EI     `hl7:"23,display=Filler Order Number"`
	EnteredByCode                              []XCN   `hl7:"24,display=Entered By Code"`
	ProcedureCode                              *CNE    `hl7:"25,table=0088,display=Procedure Code"`
	ProcedureCodeModifier                      []CNE   `hl7:"26,table=0340,display=Procedure Code Modifier"`
	AdvancedBeneficiaryNoticeCode              *CWE    `hl7:"27,table=0339,display=Advanced Beneficiary Notice Code"`
	MedicallyNecessaryDuplicateProcedureReason *CWE    `hl7:"28,table=0476,display=Medically Necessary Duplicate Procedure Reason"`
	NdcCode                                    *CWE    `hl7:"29,table=0549,display=Ndc Code"`
	PaymentReferenceID                         *CX     `hl7:"30,display=Payment Reference Id"`
	TransactionReferenceKey                    []SI    `hl7:"31,len=4,display=Transaction Reference Key"`
	PerformingFacility                         []XON   `hl7:"32,display=Performing Facility"`
	OrderingFacility                           *XON    `hl7:"33,display=Ordering Facility"`
	ItemNumber                                 *CWE    `hl7:"34,display=Item Number"`
	ModelNumber                                ST      `hl7:"35,display=Model Number"`
	SpecialProcessingCode                      []CWE   `hl7:"36,display=Special Processing Code"`
	ClinicCode                                 *CWE    `hl7:"37,display=Clinic Code"`
	ReferralNumber                             *CX     `hl7:"38,display=Referral Number"`
	AuthorizationNumber                        *CX     `hl7:"39,display=Authorization Number"`
	ServiceProviderTaxonomyCode                *CWE    `hl7:"40,display=Service Provider Taxonomy Code"`
	RevenueCode                                *CWE    `hl7:"41,table=0456,display=Revenue Code"`
	PrescriptionNumber                         ST      `hl7:"42,display=Prescription Number"`
	NdcQtyAndUom                               *CQ     `hl7:"43,display=Ndc Qty And Uom"`
}

// File Trailer
//
// The FTS segment defines the end of a file.
type FTS struct {
	HL7                HL7Name `hl7:",name=FTS,type=s"`
	FileBatchCount     NM      `hl7:"1,display=File Batch Count"`
	FileTrailerComment ST      `hl7:"2,display=File Trailer Comment"`
}

// Goal Detail
//
// The goal detail segment contains the data necessary to add, update, correct, and delete the goals for an individual.
type GOL struct {
	HL7                         HL7Name `hl7:",name=GOL,type=s"`
	ActionCode                  ID      `hl7:"1,required,len=2,table=0287,display=Action Code"`
	ActionDateTime              DTM     `hl7:"2,required,format=YMDHM,display=Action Date/Time"`
	GoalID                      CWE     `hl7:"3,required,display=Goal Id"`
	GoalInstanceID              EI      `hl7:"4,required,display=Goal Instance Id"`
	EpisodeOfCareID             *EI     `hl7:"5,display=Episode Of Care Id"`
	GoalListPriority            NM      `hl7:"6,display=Goal List Priority"`
	GoalEstablishedDateTime     DTM     `hl7:"7,format=YMDHM,display=Goal Established Date/Time"`
	ExpectedGoalAchieveDateTime DTM     `hl7:"8,format=YMDHM,display=Expected Goal Achieve Date/Time"`
	GoalClassification          *CWE    `hl7:"9,display=Goal Classification"`
	GoalManagementDiscipline    *CWE    `hl7:"10,display=Goal Management Discipline"`
	CurrentGoalReviewStatus     *CWE    `hl7:"11,display=Current Goal Review Status"`
	CurrentGoalReviewDateTime   DTM     `hl7:"12,format=YMDHM,display=Current Goal Review Date/Time"`
	NextGoalReviewDateTime      DTM     `hl7:"13,format=YMDHM,display=Next Goal Review Date/Time"`
	PreviousGoalReviewDateTime  DTM     `hl7:"14,format=YMDHM,display=Previous Goal Review Date/Time"`
	GoalReviewInterval          ST      `hl7:"15,display=Goal Review Interval"`
	GoalEvaluation              *CWE    `hl7:"16,display=Goal Evaluation"`
	GoalEvaluationComment       []ST    `hl7:"17,display=Goal Evaluation Comment"`
	GoalLifeCycleStatus         *CWE    `hl7:"18,display=Goal Life Cycle Status"`
	GoalLifeCycleStatusDateTime DTM     `hl7:"19,format=YMDHM,display=Goal Life Cycle Status Date/Time"`
	GoalTargetType              []CWE   `hl7:"20,display=Goal Target Type"`
	GoalTargetName              []XPN   `hl7:"21,display=Goal Target Name"`
	MoodCode                    *CNE    `hl7:"22,conditional,table=0725,display=Mood Code"`
}

// Grouping/reimbursement - Visit
//
// These fields are used in grouping and reimbursement for CMS APCs. Please refer to the "Outpatient Prospective Payment
// System Final Rule" ("OPPS Final Rule") issued by CMS.
//
// The GP1 segment is specific to the US and may not be implemented in non-US systems.
type GP1 struct {
	HL7                         HL7Name `hl7:",name=GP1,type=s"`
	TypeOfBillCode              CWE     `hl7:"1,required,table=0455,display=Type Of Bill Code"`
	RevenueCode                 []CWE   `hl7:"2,table=0456,display=Revenue Code"`
	OverallClaimDispositionCode *CWE    `hl7:"3,table=0457,display=Overall Claim Disposition Code"`
	OceEditsPerVisitCode        []CWE   `hl7:"4,table=0458,display=Oce Edits Per Visit Code"`
	OutlierCost                 *CP     `hl7:"5,display=Outlier Cost"`
}

// Grouping/reimbursement - Procedure Line Item
//
// This segment is used for items that pertain to each HCPC/CPT line item.
//
// The GP2 segment is specific to the US and may not be implemented in non-US systems
type GP2 struct {
	HL7                                 HL7Name `hl7:",name=GP2,type=s"`
	RevenueCode                         *CWE    `hl7:"1,table=0456,display=Revenue Code"`
	NumberOfServiceUnits                NM      `hl7:"2,display=Number Of Service Units"`
	Charge                              *CP     `hl7:"3,display=Charge"`
	ReimbursementActionCode             *CWE    `hl7:"4,table=0459,display=Reimbursement Action Code"`
	DenialOrRejectionCode               *CWE    `hl7:"5,table=0460,display=Denial Or Rejection Code"`
	OceEditCode                         []CWE   `hl7:"6,table=0458,display=Oce Edit Code"`
	AmbulatoryPaymentClassificationCode *CWE    `hl7:"7,table=0466,display=Ambulatory Payment Classification Code"`
	ModifierEditCode                    []CWE   `hl7:"8,table=0467,display=Modifier Edit Code"`
	PaymentAdjustmentCode               *CWE    `hl7:"9,table=0468,display=Payment Adjustment Code"`
	PackagingStatusCode                 *CWE    `hl7:"10,table=0469,display=Packaging Status Code"`
	ExpectedCmsPaymentAmount            *CP     `hl7:"11,display=Expected Cms Payment Amount"`
	ReimbursementTypeCode               *CWE    `hl7:"12,table=0470,display=Reimbursement Type Code"`
	CoPayAmount                         *CP     `hl7:"13,display=Co-pay Amount"`
	PayRatePerServiceUnit               NM      `hl7:"14,display=Pay Rate Per Service Unit"`
}

// Guarantor
//
// The GT1 segment contains guarantor (e.g., the person or the organization with financial responsibility for payment of
// a patient account) data for patient and insurance billing applications.
type GT1 struct {
	HL7                                HL7Name `hl7:",name=GT1,type=s"`
	SetID                              SI      `hl7:"1,seq,required,len=4,display=Set Id - Gt1"`
	GuarantorNumber                    []CX    `hl7:"2,display=Guarantor Number"`
	GuarantorName                      []XPN   `hl7:"3,required,display=Guarantor Name"`
	GuarantorSpouseName                []XPN   `hl7:"4,display=Guarantor Spouse Name"`
	GuarantorAddress                   []XAD   `hl7:"5,display=Guarantor Address"`
	GuarantorPhNumHome                 []XTN   `hl7:"6,display=Guarantor Ph Num - Home"`
	GuarantorPhNumBusiness             []XTN   `hl7:"7,display=Guarantor Ph Num - Business"`
	GuarantorDateTimeOfBirth           DTM     `hl7:"8,format=YMDHM,display=Guarantor Date/Time Of Birth"`
	GuarantorAdministrativeSex         *CWE    `hl7:"9,table=0001,display=Guarantor Administrative Sex"`
	GuarantorType                      *CWE    `hl7:"10,table=0068,display=Guarantor Type"`
	GuarantorRelationship              *CWE    `hl7:"11,table=0063,display=Guarantor Relationship"`
	GuarantorSsn                       ST      `hl7:"12,display=Guarantor Ssn"`
	GuarantorDateBegin                 DT      `hl7:"13,format=YMD,display=Guarantor Date - Begin"`
	GuarantorDateEnd                   DT      `hl7:"14,format=YMD,display=Guarantor Date - End"`
	GuarantorPriority                  NM      `hl7:"15,len=2,display=Guarantor Priority"`
	GuarantorEmployerName              []XPN   `hl7:"16,display=Guarantor Employer Name"`
	GuarantorEmployerAddress           []XAD   `hl7:"17,display=Guarantor Employer Address"`
	GuarantorEmployerPhoneNumber       []XTN   `hl7:"18,display=Guarantor Employer Phone Number"`
	GuarantorEmployeeIDNumber          []CX    `hl7:"19,display=Guarantor Employee Id Number"`
	GuarantorEmploymentStatus          *CWE    `hl7:"20,table=0066,display=Guarantor Employment Status"`
	GuarantorOrganizationName          []XON   `hl7:"21,display=Guarantor Organization Name"`
	GuarantorBillingHoldFlag           ID      `hl7:"22,len=1,table=0136,display=Guarantor Billing Hold Flag"`
	GuarantorCreditRatingCode          *CWE    `hl7:"23,table=0341,display=Guarantor Credit Rating Code"`
	GuarantorDeathDateAndTime          DTM     `hl7:"24,format=YMDHM,display=Guarantor Death Date And Time"`
	GuarantorDeathFlag                 ID      `hl7:"25,len=1,table=0136,display=Guarantor Death Flag"`
	GuarantorChargeAdjustmentCode      *CWE    `hl7:"26,table=0218,display=Guarantor Charge Adjustment Code"`
	GuarantorHouseholdAnnualIncome     *CP     `hl7:"27,display=Guarantor Household Annual Income"`
	GuarantorHouseholdSize             NM      `hl7:"28,display=Guarantor Household Size"`
	GuarantorEmployerIDNumber          []CX    `hl7:"29,display=Guarantor Employer Id Number"`
	GuarantorMaritalStatusCode         *CWE    `hl7:"30,table=0002,display=Guarantor Marital Status Code"`
	GuarantorHireEffectiveDate         DT      `hl7:"31,format=YMD,display=Guarantor Hire Effective Date"`
	EmploymentStopDate                 DT      `hl7:"32,format=YMD,display=Employment Stop Date"`
	LivingDependency                   *CWE    `hl7:"33,table=0223,display=Living Dependency"`
	AmbulatoryStatus                   []CWE   `hl7:"34,table=0009,display=Ambulatory Status"`
	Citizenship                        []CWE   `hl7:"35,table=0171,display=Citizenship"`
	PrimaryLanguage                    *CWE    `hl7:"36,table=0296,display=Primary Language"`
	LivingArrangement                  *CWE    `hl7:"37,table=0220,display=Living Arrangement"`
	PublicityCode                      *CWE    `hl7:"38,table=0215,display=Publicity Code"`
	ProtectionIndicator                ID      `hl7:"39,len=1,table=0136,display=Protection Indicator"`
	StudentIndicator                   *CWE    `hl7:"40,table=0231,display=Student Indicator"`
	Religion                           *CWE    `hl7:"41,table=0006,display=Religion"`
	MothersMaidenName                  []XPN   `hl7:"42,display=Mother's Maiden Name"`
	Nationality                        *CWE    `hl7:"43,table=0212,display=Nationality"`
	EthnicGroup                        []CWE   `hl7:"44,table=0189,display=Ethnic Group"`
	ContactPersonsName                 []XPN   `hl7:"45,display=Contact Person's Name"`
	ContactPersonsTelephoneNumber      []XTN   `hl7:"46,display=Contact Person's Telephone Number"`
	ContactReason                      *CWE    `hl7:"47,table=0222,display=Contact Reason"`
	ContactRelationship                *CWE    `hl7:"48,table=0063,display=Contact Relationship"`
	JobTitle                           ST      `hl7:"49,display=Job Title"`
	JobCodeClass                       *JCC    `hl7:"50,display=Job Code/Class"`
	GuarantorEmployersOrganizationName []XON   `hl7:"51,display=Guarantor Employer's Organization Name"`
	Handicap                           *CWE    `hl7:"52,table=0295,display=Handicap"`
	JobStatus                          *CWE    `hl7:"53,table=0311,display=Job Status"`
	GuarantorFinancialClass            *FC     `hl7:"54,display=Guarantor Financial Class"`
	GuarantorRace                      []CWE   `hl7:"55,table=0005,display=Guarantor Race"`
	GuarantorBirthPlace                ST      `hl7:"56,display=Guarantor Birth Place"`
	VipIndicator                       *CWE    `hl7:"57,table=0099,display=Vip Indicator"`
}

// Any Hl7 Segment
type Hxx struct {
	HL7   HL7Name `hl7:",name=Hxx,type=s"`
	Value ST      `hl7:"1,display=Hxx.1"`
}

// Patient Adverse Reaction Information
//
// The IAM segment contains person/patient adverse reaction information of various types. Most of this information will
// be derived from user-defined tables. Each IAM segment describes a single person/patient adverse reaction. This segment
// is used in lieu of the AL1 - Patient Allergy Information Segment to support action code/unique identifier mode update definition
// of repeating segments as defined in 2.10.4.2 in chapter 2, section 2.4.10, "Protocol for interpreting repeating segments
// or segment groups in an update Message." The AL1 segment is used to support Snapshot mode update definition as defined in
// 2.10.4.1.
type IAM struct {
	HL7                                  HL7Name `hl7:",name=IAM,type=s"`
	SetID                                SI      `hl7:"1,seq,required,len=4,display=Set Id - Iam"`
	AllergenTypeCode                     *CWE    `hl7:"2,table=0127,display=Allergen Type Code"`
	AllergenCodeMnemonicDescription      CWE     `hl7:"3,required,display=Allergen Code/Mnemonic/Description"`
	AllergySeverityCode                  *CWE    `hl7:"4,table=0128,display=Allergy Severity Code"`
	AllergyReactionCode                  []ST    `hl7:"5,display=Allergy Reaction Code"`
	AllergyActionCode                    CNE     `hl7:"6,required,table=0206,display=Allergy Action Code"`
	AllergyUniqueIdentifier              *EI     `hl7:"7,conditional,display=Allergy Unique Identifier"`
	ActionReason                         ST      `hl7:"8,display=Action Reason"`
	SensitivityToCausativeAgentCode      *CWE    `hl7:"9,table=0436,display=Sensitivity To Causative Agent Code"`
	AllergenGroupCodeMnemonicDescription *CWE    `hl7:"10,display=Allergen Group Code/Mnemonic/Description"`
	OnsetDate                            DT      `hl7:"11,format=YMD,display=Onset Date"`
	OnsetDateText                        ST      `hl7:"12,display=Onset Date Text"`
	ReportedDateTime                     DTM     `hl7:"13,format=YMDHM,display=Reported Date/Time"`
	ReportedBy                           *XPN    `hl7:"14,display=Reported By"`
	RelationshipToPatientCode            *CWE    `hl7:"15,table=0063,display=Relationship To Patient Code"`
	AlertDeviceCode                      *CWE    `hl7:"16,table=0437,display=Alert Device Code"`
	AllergyClinicalStatusCode            *CWE    `hl7:"17,table=0438,display=Allergy Clinical Status Code"`
	StatusedByPerson                     *XCN    `hl7:"18,display=Statused By Person"`
	StatusedByOrganization               *XON    `hl7:"19,display=Statused By Organization"`
	StatusedAtDateTime                   DTM     `hl7:"20,format=YMDHM,display=Statused At Date/Time"`
	InactivatedByPerson                  *XCN    `hl7:"21,display=Inactivated By Person"`
	InactivatedDateTime                  DTM     `hl7:"22,format=YMDHM,display=Inactivated Date/Time"`
	InitiallyRecordedByPerson            *XCN    `hl7:"23,display=Initially Recorded By Person"`
	InitiallyRecordedDateTime            DTM     `hl7:"24,format=YMDHM,display=Initially Recorded Date/Time"`
	ModifiedByPerson                     *XCN    `hl7:"25,display=Modified By Person"`
	ModifiedDateTime                     DTM     `hl7:"26,format=YMDHM,display=Modified Date/Time"`
	ClinicianIdentifiedCode              *CWE    `hl7:"27,display=Clinician Identified Code"`
	InitiallyRecordedByOrganization      *XON    `hl7:"28,display=Initially Recorded By Organization"`
	ModifiedByOrganization               *XON    `hl7:"29,display=Modified By Organization"`
	InactivatedByOrganization            *XON    `hl7:"30,display=Inactivated By Organization"`
}

// Allergy Reaction
//
// The IAR segment is used to transmit a single reaction and information associated with this single reaction occurrence
// for a particular patient allergy (IAM – patient adverse reaction).
type IAR struct {
	HL7                             HL7Name `hl7:",name=IAR,type=s"`
	AllergyReactionCode             CWE     `hl7:"1,required,display=Allergy Reaction Code"`
	AllergySeverityCode             CWE     `hl7:"2,required,table=0128,display=Allergy Severity Code"`
	SensitivityToCausativeAgentCode *CWE    `hl7:"3,table=0436,display=Sensitivity To Causative Agent Code"`
	Management                      ST      `hl7:"4,display=Management"`
}

// Inventory Item Master
//
// The Inventory Item Master segment (IIM) contains information about the stock of product that can be used to fulfill an ordered
// test/service. All of the fields in this segment describe the test/service and other basic attributes pertaining to Service
// Item defined within an Other Observation/Service Item master file. This segment is related to centrally stocked or supply
// management concerns.
type IIM struct {
	HL7                           HL7Name `hl7:",name=IIM,type=s"`
	PrimaryKeyValue               CWE     `hl7:"1,required,display=Primary Key Value - Iim"`
	ServiceItemCode               CWE     `hl7:"2,required,display=Service Item Code"`
	InventoryLotNumber            ST      `hl7:"3,display=Inventory Lot Number"`
	InventoryExpirationDate       DTM     `hl7:"4,format=YMDHM,display=Inventory Expiration Date"`
	InventoryManufacturerName     *CWE    `hl7:"5,display=Inventory Manufacturer Name"`
	InventoryLocation             *CWE    `hl7:"6,display=Inventory Location"`
	InventoryReceivedDate         DTM     `hl7:"7,format=YMDHM,display=Inventory Received Date"`
	InventoryReceivedQuantity     NM      `hl7:"8,display=Inventory Received Quantity"`
	InventoryReceivedQuantityUnit *CWE    `hl7:"9,table=0818,display=Inventory Received Quantity Unit"`
	InventoryReceivedItemCost     *MO     `hl7:"10,display=Inventory Received Item Cost"`
	InventoryOnHandDate           DTM     `hl7:"11,format=YMDHM,display=Inventory On Hand Date"`
	InventoryOnHandQuantity       NM      `hl7:"12,display=Inventory On Hand Quantity"`
	InventoryOnHandQuantityUnit   *CWE    `hl7:"13,table=0818,display=Inventory On Hand Quantity Unit"`
	ProcedureCode                 *CNE    `hl7:"14,table=0088,display=Procedure Code"`
	ProcedureCodeModifier         []CNE   `hl7:"15,table=0340,display=Procedure Code Modifier"`
}

// Material Lot
//
// The Material Lot segment (ILT) contains material information specific to a lot within an inventory location associated
// with the item in the IVT segment.  This segment is similar to the IIM segment used with the limited inventory item master message.
//
//
// Note that on-hand quantities do NOT refer to a continuously updated quantity.  The expectation is for periodic physical
// inventory.
type ILT struct {
	HL7                           HL7Name `hl7:",name=ILT,type=s"`
	SetID                         SI      `hl7:"1,seq,required,len=4,display=Set Id - Ilt"`
	InventoryLotNumber            ST      `hl7:"2,required,display=Inventory Lot Number"`
	InventoryExpirationDate       DTM     `hl7:"3,format=YMDHM,display=Inventory Expiration Date"`
	InventoryReceivedDate         DTM     `hl7:"4,format=YMDHM,display=Inventory Received Date"`
	InventoryReceivedQuantity     NM      `hl7:"5,display=Inventory Received Quantity"`
	InventoryReceivedQuantityUnit *CWE    `hl7:"6,table=0818,display=Inventory Received Quantity Unit"`
	InventoryReceivedItemCost     *MO     `hl7:"7,display=Inventory Received Item Cost"`
	InventoryOnHandDate           DTM     `hl7:"8,format=YMDHM,display=Inventory On Hand Date"`
	InventoryOnHandQuantity       NM      `hl7:"9,display=Inventory On Hand Quantity"`
	InventoryOnHandQuantityUnit   *CWE    `hl7:"10,table=0818,display=Inventory On Hand Quantity Unit"`
}

// Insurance
//
// The IN1 segment contains insurance policy coverage information necessary to produce properly pro-rated and patient
// and insurance bills.
type IN1 struct {
	HL7                           HL7Name `hl7:",name=IN1,type=s"`
	SetID                         SI      `hl7:"1,seq,required,len=4,display=Set Id - In1"`
	HealthPlanID                  CWE     `hl7:"2,required,table=0072,display=Health Plan Id"`
	InsuranceCompanyID            []CX    `hl7:"3,required,display=Insurance Company Id"`
	InsuranceCompanyName          []XON   `hl7:"4,display=Insurance Company Name"`
	InsuranceCompanyAddress       []XAD   `hl7:"5,display=Insurance Company Address"`
	InsuranceCoContactPerson      []XPN   `hl7:"6,display=Insurance Co Contact Person"`
	InsuranceCoPhoneNumber        []XTN   `hl7:"7,display=Insurance Co Phone Number"`
	GroupNumber                   ST      `hl7:"8,display=Group Number"`
	GroupName                     []XON   `hl7:"9,display=Group Name"`
	InsuredsGroupEmpID            []CX    `hl7:"10,display=Insured's Group Emp Id"`
	InsuredsGroupEmpName          []XON   `hl7:"11,display=Insured's Group Emp Name"`
	PlanEffectiveDate             DT      `hl7:"12,format=YMD,display=Plan Effective Date"`
	PlanExpirationDate            DT      `hl7:"13,format=YMD,display=Plan Expiration Date"`
	AuthorizationInformation      *AUI    `hl7:"14,display=Authorization Information"`
	PlanType                      *CWE    `hl7:"15,table=0086,display=Plan Type"`
	NameOfInsured                 []XPN   `hl7:"16,display=Name Of Insured"`
	InsuredsRelationshipToPatient *CWE    `hl7:"17,table=0063,display=Insured's Relationship To Patient"`
	InsuredsDateOfBirth           DTM     `hl7:"18,format=YMDHM,display=Insured's Date Of Birth"`
	InsuredsAddress               []XAD   `hl7:"19,display=Insured's Address"`
	AssignmentOfBenefits          *CWE    `hl7:"20,table=0135,display=Assignment Of Benefits"`
	CoordinationOfBenefits        *CWE    `hl7:"21,table=0173,display=Coordination Of Benefits"`
	CoordOfBenPriority            ST      `hl7:"22,display=Coord Of Ben. Priority"`
	NoticeOfAdmissionFlag         ID      `hl7:"23,len=1,table=0136,display=Notice Of Admission Flag"`
	NoticeOfAdmissionDate         DT      `hl7:"24,format=YMD,display=Notice Of Admission Date"`
	ReportOfEligibilityFlag       ID      `hl7:"25,len=1,table=0136,display=Report Of Eligibility Flag"`
	ReportOfEligibilityDate       DT      `hl7:"26,format=YMD,display=Report Of Eligibility Date"`
	ReleaseInformationCode        *CWE    `hl7:"27,table=0093,display=Release Information Code"`
	PreAdmitCertPac               ST      `hl7:"28,display=Pre-admit Cert (pac)"`
	VerificationDateTime          DTM     `hl7:"29,format=YMDHM,display=Verification Date/Time"`
	VerificationBy                []XCN   `hl7:"30,display=Verification By"`
	TypeOfAgreementCode           *CWE    `hl7:"31,table=0098,display=Type Of Agreement Code"`
	BillingStatus                 *CWE    `hl7:"32,table=0022,display=Billing Status"`
	LifetimeReserveDays           NM      `hl7:"33,display=Lifetime Reserve Days"`
	DelayBeforeLRDay              NM      `hl7:"34,display=Delay Before L.r. Day"`
	CompanyPlanCode               *CWE    `hl7:"35,table=0042,display=Company Plan Code"`
	PolicyNumber                  ST      `hl7:"36,display=Policy Number"`
	PolicyDeductible              *CP     `hl7:"37,display=Policy Deductible"`
	PolicyLimitAmount             ST      `hl7:"38,display=Policy Limit - Amount"`
	PolicyLimitDays               NM      `hl7:"39,display=Policy Limit - Days"`
	RoomRateSemiPrivate           ST      `hl7:"40,display=Room Rate - Semi-private"`
	RoomRatePrivate               ST      `hl7:"41,display=Room Rate - Private"`
	InsuredsEmploymentStatus      *CWE    `hl7:"42,table=0066,display=Insured's Employment Status"`
	InsuredsAdministrativeSex     *CWE    `hl7:"43,table=0001,display=Insured's Administrative Sex"`
	InsuredsEmployersAddress      []XAD   `hl7:"44,display=Insured's Employer's Address"`
	VerificationStatus            ST      `hl7:"45,display=Verification Status"`
	PriorInsurancePlanID          *CWE    `hl7:"46,table=0072,display=Prior Insurance Plan Id"`
	CoverageType                  *CWE    `hl7:"47,table=0309,display=Coverage Type"`
	Handicap                      *CWE    `hl7:"48,table=0295,display=Handicap"`
	InsuredsIDNumber              []CX    `hl7:"49,display=Insured's Id Number"`
	SignatureCode                 *CWE    `hl7:"50,table=0535,display=Signature Code"`
	SignatureCodeDate             DT      `hl7:"51,format=YMD,display=Signature Code Date"`
	InsuredsBirthPlace            ST      `hl7:"52,display=Insured's Birth Place"`
	VipIndicator                  *CWE    `hl7:"53,table=0099,display=Vip Indicator"`
	ExternalHealthPlanIdentifiers []CX    `hl7:"54,display=External Health Plan Identifiers"`
	InsuranceActionCode           ID      `hl7:"55,len=1,table=0206,display=Insurance Action Code"`
}

// Insurance Additional Information
//
// The IN2 segment contains additional insurance policy coverage and benefit information necessary for proper billing
// and reimbursement. Fields used by this segment are defined by CMS or other regulatory agencies.
type IN2 struct {
	HL7                                  HL7Name `hl7:",name=IN2,type=s"`
	InsuredsEmployeeID                   []CX    `hl7:"1,display=Insured's Employee Id"`
	InsuredsSocialSecurityNumber         ST      `hl7:"2,display=Insured's Social Security Number"`
	InsuredsEmployersNameAndID           []XCN   `hl7:"3,display=Insured's Employer's Name And Id"`
	EmployerInformationData              *CWE    `hl7:"4,table=0139,display=Employer Information Data"`
	MailClaimParty                       []CWE   `hl7:"5,table=0137,display=Mail Claim Party"`
	MedicareHealthInsCardNumber          ST      `hl7:"6,display=Medicare Health Ins Card Number"`
	MedicaidCaseName                     []XPN   `hl7:"7,display=Medicaid Case Name"`
	MedicaidCaseNumber                   ST      `hl7:"8,display=Medicaid Case Number"`
	MilitarySponsorName                  []XPN   `hl7:"9,display=Military Sponsor Name"`
	MilitaryIDNumber                     ST      `hl7:"10,display=Military Id Number"`
	DependentOfMilitaryRecipient         *CWE    `hl7:"11,table=0342,display=Dependent Of Military Recipient"`
	MilitaryOrganization                 ST      `hl7:"12,display=Military Organization"`
	MilitaryStation                      ST      `hl7:"13,display=Military Station"`
	MilitaryService                      *CWE    `hl7:"14,table=0140,display=Military Service"`
	MilitaryRankGrade                    *CWE    `hl7:"15,table=0141,display=Military Rank/Grade"`
	MilitaryStatus                       *CWE    `hl7:"16,table=0142,display=Military Status"`
	MilitaryRetireDate                   DT      `hl7:"17,format=YMD,display=Military Retire Date"`
	MilitaryNonAvailCertOnFile           ID      `hl7:"18,len=1,table=0136,display=Military Non-avail Cert On File"`
	BabyCoverage                         ID      `hl7:"19,len=1,table=0136,display=Baby Coverage"`
	CombineBabyBill                      ID      `hl7:"20,len=1,table=0136,display=Combine Baby Bill"`
	BloodDeductible                      ST      `hl7:"21,display=Blood Deductible"`
	SpecialCoverageApprovalName          []XPN   `hl7:"22,display=Special Coverage Approval Name"`
	SpecialCoverageApprovalTitle         ST      `hl7:"23,display=Special Coverage Approval Title"`
	NonCoveredInsuranceCode              []CWE   `hl7:"24,table=0143,display=Non-covered Insurance Code"`
	PayorID                              []CX    `hl7:"25,display=Payor Id"`
	PayorSubscriberID                    []CX    `hl7:"26,display=Payor Subscriber Id"`
	EligibilitySource                    *CWE    `hl7:"27,table=0144,display=Eligibility Source"`
	RoomCoverageTypeAmount               []RMC   `hl7:"28,display=Room Coverage Type/Amount"`
	PolicyTypeAmount                     []PTA   `hl7:"29,display=Policy Type/Amount"`
	DailyDeductible                      *DDI    `hl7:"30,display=Daily Deductible"`
	LivingDependency                     *CWE    `hl7:"31,table=0223,display=Living Dependency"`
	AmbulatoryStatus                     []CWE   `hl7:"32,table=0009,display=Ambulatory Status"`
	Citizenship                          []CWE   `hl7:"33,table=0171,display=Citizenship"`
	PrimaryLanguage                      *CWE    `hl7:"34,table=0296,display=Primary Language"`
	LivingArrangement                    *CWE    `hl7:"35,table=0220,display=Living Arrangement"`
	PublicityCode                        *CWE    `hl7:"36,table=0215,display=Publicity Code"`
	ProtectionIndicator                  ID      `hl7:"37,len=1,table=0136,display=Protection Indicator"`
	StudentIndicator                     *CWE    `hl7:"38,table=0231,display=Student Indicator"`
	Religion                             *CWE    `hl7:"39,table=0006,display=Religion"`
	MothersMaidenName                    []XPN   `hl7:"40,display=Mother's Maiden Name"`
	Nationality                          *CWE    `hl7:"41,table=0212,display=Nationality"`
	EthnicGroup                          []CWE   `hl7:"42,table=0189,display=Ethnic Group"`
	MaritalStatus                        []CWE   `hl7:"43,table=0002,display=Marital Status"`
	InsuredsEmploymentStartDate          DT      `hl7:"44,format=YMD,display=Insured's Employment Start Date"`
	EmploymentStopDate                   DT      `hl7:"45,format=YMD,display=Employment Stop Date"`
	JobTitle                             ST      `hl7:"46,display=Job Title"`
	JobCodeClass                         *JCC    `hl7:"47,display=Job Code/Class"`
	JobStatus                            *CWE    `hl7:"48,table=0311,display=Job Status"`
	EmployerContactPersonName            []XPN   `hl7:"49,display=Employer Contact Person Name"`
	EmployerContactPersonPhoneNumber     []XTN   `hl7:"50,display=Employer Contact Person Phone Number"`
	EmployerContactReason                *CWE    `hl7:"51,table=0222,display=Employer Contact Reason"`
	InsuredsContactPersonsName           []XPN   `hl7:"52,display=Insured's Contact Person's Name"`
	InsuredsContactPersonPhoneNumber     []XTN   `hl7:"53,display=Insured's Contact Person Phone Number"`
	InsuredsContactPersonReason          []CWE   `hl7:"54,table=0222,display=Insured's Contact Person Reason"`
	RelationshipToThePatientStartDate    DT      `hl7:"55,format=YMD,display=Relationship To The Patient Start Date"`
	RelationshipToThePatientStopDate     []DT    `hl7:"56,format=YMD,display=Relationship To The Patient Stop Date"`
	InsuranceCoContactReason             *CWE    `hl7:"57,table=0232,display=Insurance Co Contact Reason"`
	InsuranceCoContactPhoneNumber        []XTN   `hl7:"58,display=Insurance Co Contact Phone Number"`
	PolicyScope                          *CWE    `hl7:"59,table=0312,display=Policy Scope"`
	PolicySource                         *CWE    `hl7:"60,table=0313,display=Policy Source"`
	PatientMemberNumber                  *CX     `hl7:"61,display=Patient Member Number"`
	GuarantorsRelationshipToInsured      *CWE    `hl7:"62,table=0063,display=Guarantor's Relationship To Insured"`
	InsuredsPhoneNumberHome              []XTN   `hl7:"63,display=Insured's Phone Number - Home"`
	InsuredsEmployerPhoneNumber          []XTN   `hl7:"64,display=Insured's Employer Phone Number"`
	MilitaryHandicappedProgram           *CWE    `hl7:"65,table=0343,display=Military Handicapped Program"`
	SuspendFlag                          ID      `hl7:"66,len=1,table=0136,display=Suspend Flag"`
	CopayLimitFlag                       ID      `hl7:"67,len=1,table=0136,display=Copay Limit Flag"`
	StoplossLimitFlag                    ID      `hl7:"68,len=1,table=0136,display=Stoploss Limit Flag"`
	InsuredOrganizationNameAndID         []XON   `hl7:"69,display=Insured Organization Name And Id"`
	InsuredEmployerOrganizationNameAndID []XON   `hl7:"70,display=Insured Employer Organization Name And Id"`
	Race                                 []CWE   `hl7:"71,table=0005,display=Race"`
	PatientsRelationshipToInsured        *CWE    `hl7:"72,table=0344,display=Patient's Relationship To Insured"`
}

// Insurance Additional Information, Certification
//
// The IN3 segment contains additional insurance information for certifying the need for patient care. Fields used by this
// segment are defined by CMS, or other regulatory agencies.
type IN3 struct {
	HL7                                HL7Name `hl7:",name=IN3,type=s"`
	SetID                              SI      `hl7:"1,seq,required,len=4,display=Set Id - In3"`
	CertificationNumber                *CX     `hl7:"2,display=Certification Number"`
	CertifiedBy                        []XCN   `hl7:"3,display=Certified By"`
	CertificationRequired              ID      `hl7:"4,len=1,table=0136,display=Certification Required"`
	Penalty                            *MOP    `hl7:"5,display=Penalty"`
	CertificationDateTime              DTM     `hl7:"6,format=YMDHM,display=Certification Date/Time"`
	CertificationModifyDateTime        DTM     `hl7:"7,format=YMDHM,display=Certification Modify Date/Time"`
	Operator                           []XCN   `hl7:"8,display=Operator"`
	CertificationBeginDate             DT      `hl7:"9,format=YMD,display=Certification Begin Date"`
	CertificationEndDate               DT      `hl7:"10,format=YMD,display=Certification End Date"`
	Days                               *DTN    `hl7:"11,display=Days"`
	NonConcurCodeDescription           *CWE    `hl7:"12,table=0233,display=Non-concur Code/Description"`
	NonConcurEffectiveDateTime         DTM     `hl7:"13,format=YMDHM,display=Non-concur Effective Date/Time"`
	PhysicianReviewer                  []XCN   `hl7:"14,table=0010,display=Physician Reviewer"`
	CertificationContact               ST      `hl7:"15,display=Certification Contact"`
	CertificationContactPhoneNumber    []XTN   `hl7:"16,display=Certification Contact Phone Number"`
	AppealReason                       *CWE    `hl7:"17,table=0345,display=Appeal Reason"`
	CertificationAgency                *CWE    `hl7:"18,table=0346,display=Certification Agency"`
	CertificationAgencyPhoneNumber     []XTN   `hl7:"19,display=Certification Agency Phone Number"`
	PreCertificationRequirement        []ICD   `hl7:"20,display=Pre-certification Requirement"`
	CaseManager                        ST      `hl7:"21,display=Case Manager"`
	SecondOpinionDate                  DT      `hl7:"22,format=YMD,display=Second Opinion Date"`
	SecondOpinionStatus                *CWE    `hl7:"23,table=0151,display=Second Opinion Status"`
	SecondOpinionDocumentationReceived []CWE   `hl7:"24,table=0152,display=Second Opinion Documentation Received"`
	SecondOpinionPhysician             []XCN   `hl7:"25,table=0010,display=Second Opinion Physician"`
	CertificationType                  *CWE    `hl7:"26,table=0921,display=Certification Type"`
	CertificationCategory              *CWE    `hl7:"27,table=0922,display=Certification Category"`
}

// Inventory Detail
//
// The inventory detail segment is the data necessary to track the inventory of substances (e.g. reagent, tips, waste) on
// equipment.
type INV struct {
	HL7                          HL7Name `hl7:",name=INV,type=s"`
	SubstanceIdentifier          CWE     `hl7:"1,required,table=0451,display=Substance Identifier"`
	SubstanceStatus              []CWE   `hl7:"2,required,table=0383,display=Substance Status"`
	SubstanceType                *CWE    `hl7:"3,table=0384,display=Substance Type"`
	InventoryContainerIdentifier *CWE    `hl7:"4,table=9999,display=Inventory Container Identifier"`
	ContainerCarrierIdentifier   *CWE    `hl7:"5,table=9999,display=Container Carrier Identifier"`
	PositionOnCarrier            *CWE    `hl7:"6,table=9999,display=Position On Carrier"`
	InitialQuantity              NM      `hl7:"7,display=Initial Quantity"`
	CurrentQuantity              NM      `hl7:"8,display=Current Quantity"`
	AvailableQuantity            NM      `hl7:"9,display=Available Quantity"`
	ConsumptionQuantity          NM      `hl7:"10,display=Consumption Quantity"`
	QuantityUnits                *CWE    `hl7:"11,table=9999,display=Quantity Units"`
	ExpirationDateTime           DTM     `hl7:"12,format=YMDHM,display=Expiration Date/Time"`
	FirstUsedDateTime            DTM     `hl7:"13,format=YMDHM,display=First Used Date/Time"`
	OnBoardStabilityDuration     ST      `hl7:"14,display=On Board Stability Duration"`
	TestFluidIdentifierS         []CWE   `hl7:"15,table=9999,display=Test/Fluid Identifier(s)"`
	ManufacturerLotNumber        ST      `hl7:"16,display=Manufacturer Lot Number"`
	ManufacturerIdentifier       *CWE    `hl7:"17,table=0385,display=Manufacturer Identifier"`
	SupplierIdentifier           *CWE    `hl7:"18,table=0386,display=Supplier Identifier"`
	OnBoardStabilityTime         *CQ     `hl7:"19,display=On Board Stability Time"`
	TargetValue                  *CQ     `hl7:"20,display=Target Value"`
}

// Imaging Procedure Control Segment
//
// The IPC segment contains information about tasks that need to be performed in order to fulfill the request for imaging service.
// The information includes location, type and instance identification of equipment (acquisition modality) and stages
// (procedure steps).
//
// Note: References, field names and definitions in this section were developed in collaboration with DICOM with the goal
// of keeping HL7 transmission of imaging procedure control information consistent with the DICOM Standard, available
// at http://medical.nema.org.
type IPC struct {
	HL7                            HL7Name `hl7:",name=IPC,type=s"`
	AccessionIdentifier            EI      `hl7:"1,required,display=Accession Identifier"`
	RequestedProcedureID           EI      `hl7:"2,required,display=Requested Procedure Id"`
	StudyInstanceUid               EI      `hl7:"3,required,display=Study Instance Uid"`
	ScheduledProcedureStepID       EI      `hl7:"4,required,display=Scheduled Procedure Step Id"`
	Modality                       *CWE    `hl7:"5,table=9999,display=Modality"`
	ProtocolCode                   []CWE   `hl7:"6,table=9999,display=Protocol Code"`
	ScheduledStationName           *EI     `hl7:"7,display=Scheduled Station Name"`
	ScheduledProcedureStepLocation []CWE   `hl7:"8,table=9999,display=Scheduled Procedure Step Location"`
	ScheduledStationAeTitle        ST      `hl7:"9,display=Scheduled Station Ae Title"`
}

// Invoice Processing Results
//
// The Invoice Processing Results (IPR) segment provides summary information about an adjudicated Product/Service Group
// or Product/Service Line Item.
type IPR struct {
	HL7                              HL7Name `hl7:",name=IPR,type=s"`
	Identifier                       EI      `hl7:"1,required,display=Ipr Identifier"`
	ProviderCrossReferenceIdentifier EI      `hl7:"2,required,display=Provider Cross Reference Identifier"`
	PayerCrossReferenceIdentifier    EI      `hl7:"3,required,display=Payer Cross Reference Identifier"`
	Status                           CWE     `hl7:"4,required,table=0571,display=Ipr Status"`
	DateTime                         DTM     `hl7:"5,required,format=YMDHM,display=Ipr Date/Time"`
	AdjudicatedPaidAmount            *CP     `hl7:"6,display=Adjudicated/Paid Amount"`
	ExpectedPaymentDateTime          DTM     `hl7:"7,format=YMDHM,display=Expected Payment Date/Time"`
	Checksum                         ST      `hl7:"8,required,display=Ipr Checksum"`
}

// Interaction Status Detail
//
// The interaction detail segment contains information about the status of specific interaction (e.g., processing — see
// section Glossary) on the specific equipment.
type ISD struct {
	HL7                        HL7Name `hl7:",name=ISD,type=s"`
	ReferenceInteractionNumber NM      `hl7:"1,required,display=Reference Interaction Number"`
	InteractionTypeIdentifier  *CWE    `hl7:"2,table=0368,display=Interaction Type Identifier"`
	InteractionActiveState     CWE     `hl7:"3,required,table=0387,display=Interaction Active State"`
}

// Material Item
//
// The Material Item segment (ITM) contains information about inventory supply items (stocked or non-stocked).
type ITM struct {
	HL7                                                HL7Name `hl7:",name=ITM,type=s"`
	ItemIdentifier                                     EI      `hl7:"1,required,display=Item Identifier"`
	ItemDescription                                    ST      `hl7:"2,display=Item Description"`
	ItemStatus                                         *CWE    `hl7:"3,table=0776,display=Item Status"`
	ItemType                                           *CWE    `hl7:"4,table=0778,display=Item Type"`
	ItemCategory                                       *CWE    `hl7:"5,display=Item Category"`
	SubjectToExpirationIndicator                       *CNE    `hl7:"6,table=0532,display=Subject To Expiration Indicator"`
	ManufacturerIdentifier                             *EI     `hl7:"7,display=Manufacturer Identifier"`
	ManufacturerName                                   ST      `hl7:"8,display=Manufacturer Name"`
	ManufacturerCatalogNumber                          ST      `hl7:"9,display=Manufacturer Catalog Number"`
	ManufacturerLabelerIdentificationCode              *CWE    `hl7:"10,display=Manufacturer Labeler Identification Code"`
	PatientChargeableIndicator                         *CNE    `hl7:"11,table=0532,display=Patient Chargeable Indicator"`
	TransactionCode                                    *CWE    `hl7:"12,table=0132,display=Transaction Code"`
	TransactionAmountUnit                              *CP     `hl7:"13,display=Transaction Amount - Unit"`
	StockedItemIndicator                               *CNE    `hl7:"14,table=0532,display=Stocked Item Indicator"`
	SupplyRiskCodes                                    *CWE    `hl7:"15,table=0871,display=Supply Risk Codes"`
	ApprovingRegulatoryAgency                          []XON   `hl7:"16,table=0790,display=Approving Regulatory Agency"`
	LatexIndicator                                     *CNE    `hl7:"17,table=0532,display=Latex Indicator"`
	RulingAct                                          []CWE   `hl7:"18,table=0793,display=Ruling Act"`
	ItemNaturalAccountCode                             *CWE    `hl7:"19,table=0320,display=Item Natural Account Code"`
	ApprovedToBuyQuantity                              NM      `hl7:"20,display=Approved To Buy Quantity"`
	ApprovedToBuyPrice                                 *MO     `hl7:"21,display=Approved To Buy Price"`
	TaxableItemIndicator                               *CNE    `hl7:"22,table=0532,display=Taxable Item Indicator"`
	FreightChargeIndicator                             *CNE    `hl7:"23,table=0532,display=Freight Charge Indicator"`
	ItemSetIndicator                                   *CNE    `hl7:"24,table=0532,display=Item Set Indicator"`
	ItemSetIdentifier                                  *EI     `hl7:"25,display=Item Set Identifier"`
	TrackDepartmentUsageIndicator                      *CNE    `hl7:"26,table=0532,display=Track Department Usage Indicator"`
	ProcedureCode                                      *CNE    `hl7:"27,table=0088,display=Procedure Code"`
	ProcedureCodeModifier                              []CNE   `hl7:"28,table=0340,display=Procedure Code Modifier"`
	SpecialHandlingCode                                *CWE    `hl7:"29,table=0376,display=Special Handling Code"`
	HazardousIndicator                                 *CNE    `hl7:"30,table=0532,display=Hazardous Indicator"`
	SterileIndicator                                   *CNE    `hl7:"31,table=0532,display=Sterile Indicator"`
	MaterialDataSafetySheetNumber                      *EI     `hl7:"32,display=Material Data Safety Sheet Number"`
	UnitedNationsStandardProductsAndServicesCodeUNSPSC *CWE    `hl7:"33,table=0396,display=United Nations Standard Products and Services Code (UNSPSC)"`
}

// Invoice Segment
//
// The Invoice segment is used for HealthCare Services Invoices and contains header style information for an invoice including
// invoice numbers, Provider Organization and Payer Organization identification.
type IVC struct {
	HL7                                    HL7Name `hl7:",name=IVC,type=s"`
	ProviderInvoiceNumber                  EI      `hl7:"1,required,display=Provider Invoice Number"`
	PayerInvoiceNumber                     *EI     `hl7:"2,display=Payer Invoice Number"`
	ContractAgreementNumber                *EI     `hl7:"3,display=Contract/Agreement Number"`
	InvoiceControl                         CWE     `hl7:"4,required,table=0553,display=Invoice Control"`
	InvoiceReason                          CWE     `hl7:"5,required,table=0554,display=Invoice Reason"`
	InvoiceType                            CWE     `hl7:"6,required,table=0555,display=Invoice Type"`
	InvoiceDateTime                        DTM     `hl7:"7,required,format=YMDHM,display=Invoice Date/Time"`
	InvoiceAmount                          CP      `hl7:"8,required,display=Invoice Amount"`
	PaymentTerms                           ST      `hl7:"9,display=Payment Terms"`
	ProviderOrganization                   XON     `hl7:"10,required,display=Provider Organization"`
	PayerOrganization                      XON     `hl7:"11,required,display=Payer Organization"`
	Attention                              *XCN    `hl7:"12,display=Attention"`
	LastInvoiceIndicator                   ID      `hl7:"13,len=1,table=0136,display=Last Invoice Indicator"`
	InvoiceBookingPeriod                   DTM     `hl7:"14,format=YMDHM,display=Invoice Booking Period"`
	Origin                                 ST      `hl7:"15,display=Origin"`
	InvoiceFixedAmount                     *CP     `hl7:"16,display=Invoice Fixed Amount"`
	SpecialCosts                           *CP     `hl7:"17,display=Special Costs"`
	AmountForDoctorsTreatment              *CP     `hl7:"18,display=Amount For Doctors Treatment"`
	ResponsiblePhysician                   *XCN    `hl7:"19,display=Responsible Physician"`
	CostCenter                             *CX     `hl7:"20,display=Cost Center"`
	InvoicePrepaidAmount                   *CP     `hl7:"21,display=Invoice Prepaid Amount"`
	TotalInvoiceAmountWithoutPrepaidAmount *CP     `hl7:"22,display=Total Invoice Amount Without Prepaid Amount"`
	TotalAmountOfVat                       *CP     `hl7:"23,conditional,display=Total-amount Of Vat"`
	VatRatesApplied                        []NM    `hl7:"24,len=5,display=Vat-rates Applied"`
	BenefitGroup                           CWE     `hl7:"25,required,table=0556,display=Benefit Group"`
	ProviderTaxID                          ST      `hl7:"26,display=Provider Tax Id"`
	PayerTaxID                             ST      `hl7:"27,display=Payer Tax Id"`
	ProviderTaxStatus                      *CWE    `hl7:"28,table=0572,display=Provider Tax Status"`
	PayerTaxStatus                         *CWE    `hl7:"29,table=0572,display=Payer Tax Status"`
	SalesTaxID                             ST      `hl7:"30,display=Sales Tax Id"`
}

// Material Location
//
// The Material Location segment (IVT) contains information specific to an inventory location for the inventory supply
// item in the Material Item (ITM) segment.
type IVT struct {
	HL7                               HL7Name `hl7:",name=IVT,type=s"`
	SetID                             SI      `hl7:"1,seq,required,len=4,display=Set Id - Ivt"`
	InventoryLocationIdentifier       EI      `hl7:"2,required,display=Inventory Location Identifier"`
	InventoryLocationName             ST      `hl7:"3,display=Inventory Location Name"`
	SourceLocationIdentifier          *EI     `hl7:"4,display=Source Location Identifier"`
	SourceLocationName                ST      `hl7:"5,display=Source Location Name"`
	ItemStatus                        *CWE    `hl7:"6,table=0625,display=Item Status"`
	BinLocationIdentifier             []EI    `hl7:"7,display=Bin Location Identifier"`
	OrderPackaging                    *CWE    `hl7:"8,table=0818,display=Order Packaging"`
	IssuePackaging                    *CWE    `hl7:"9,display=Issue Packaging"`
	DefaultInventoryAssetAccount      *EI     `hl7:"10,display=Default Inventory Asset Account"`
	PatientChargeableIndicator        *CNE    `hl7:"11,table=0532,display=Patient Chargeable Indicator"`
	TransactionCode                   *CWE    `hl7:"12,table=0132,display=Transaction Code"`
	TransactionAmountUnit             *CP     `hl7:"13,display=Transaction Amount - Unit"`
	ItemImportanceCode                *CWE    `hl7:"14,table=0634,display=Item Importance Code"`
	StockedItemIndicator              *CNE    `hl7:"15,table=0532,display=Stocked Item Indicator"`
	ConsignmentItemIndicator          *CNE    `hl7:"16,table=0532,display=Consignment Item Indicator"`
	ReusableItemIndicator             *CNE    `hl7:"17,table=0532,display=Reusable Item Indicator"`
	ReusableCost                      *CP     `hl7:"18,display=Reusable Cost"`
	SubstituteItemIdentifier          []EI    `hl7:"19,display=Substitute Item Identifier"`
	LatexFreeSubstituteItemIdentifier *EI     `hl7:"20,display=Latex-free Substitute Item Identifier"`
	RecommendedReorderTheory          *CWE    `hl7:"21,table=0642,display=Recommended Reorder Theory"`
	RecommendedSafetyStockDays        NM      `hl7:"22,display=Recommended Safety Stock Days"`
	RecommendedMaximumDaysInventory   NM      `hl7:"23,display=Recommended Maximum Days Inventory"`
	RecommendedOrderPoint             NM      `hl7:"24,display=Recommended Order Point"`
	RecommendedOrderAmount            NM      `hl7:"25,display=Recommended Order Amount"`
	OperatingRoomParLevelIndicator    *CNE    `hl7:"26,table=0532,display=Operating Room Par Level Indicator"`
}

// Language Detail
//
// The LAN segment adds detailed language information to the staff member identified by the STF segment.  An LAN segment may
// optionally follow an STF segment.  An LAN segment must always have been preceded by a corresponding STF segment.
type LAN struct {
	HL7                     HL7Name `hl7:",name=LAN,type=s"`
	SetID                   SI      `hl7:"1,seq,required,len=4,display=Set Id - Lan"`
	LanguageCode            CWE     `hl7:"2,required,table=0296,display=Language Code"`
	LanguageAbilityCode     []CWE   `hl7:"3,table=0403,display=Language Ability Code"`
	LanguageProficiencyCode *CWE    `hl7:"4,table=0404,display=Language Proficiency Code"`
}

// Location Charge Code
//
// The optional LCC segment identifies how a patient location room can be billed by a certain department.  A department can
// use different charge codes for the same room or bed, so there can be multiple LCC segments following an LDP segment.
type LCC struct {
	HL7                HL7Name `hl7:",name=LCC,type=s"`
	PrimaryKeyValue    PL      `hl7:"1,required,display=Primary Key Value - Lcc"`
	LocationDepartment CWE     `hl7:"2,required,table=0264,display=Location Department"`
	AccommodationType  []CWE   `hl7:"3,table=0129,display=Accommodation Type"`
	ChargeCode         []CWE   `hl7:"4,required,table=0132,display=Charge Code"`
}

// Location Characteristic
//
// The LCH segment is used to identify location characteristics which determine which patients will be assigned to the room
// or bed.  It contains the location characteristics of the room or bed identified in the preceding LOC segment. There should
// be one LCH segment for each attribute.
//
// When the LCH segment appears immediately following the LOC segment, it communicates characteristics which are the same
// across multiple departments that may use the same room.  When the LCH segment appears immediately following the LDP segment,
// it communicates characteristics which differ for different departments that may use the same room.  For example, the following
// characteristics are more likely to vary by which department is using the room: teaching, gender, staffed, set up, overflow,
// whereas the other characteristics are likely to remain the same.
type LCH struct {
	HL7                         HL7Name `hl7:",name=LCH,type=s"`
	PrimaryKeyValue             PL      `hl7:"1,required,display=Primary Key Value - Lch"`
	SegmentActionCode           ID      `hl7:"2,len=1,table=0206,display=Segment Action Code"`
	SegmentUniqueKey            *EI     `hl7:"3,display=Segment Unique Key"`
	LocationCharacteristicID    CWE     `hl7:"4,required,table=0324,display=Location Characteristic Id"`
	LocationCharacteristicValue CWE     `hl7:"5,required,table=0136,display=Location Characteristic Value - Lch"`
}

// Location Department
//
// The LDP segment identifies how a patient location room is being used by a certain department.  Multiple departments can
// use the same patient location, so there can be multiple LDP segments following an LOC segment.  There must be at least one
// LDP segment for each LOC segment.  This is not intended to include any current occupant information.
type LDP struct {
	HL7                 HL7Name `hl7:",name=LDP,type=s"`
	PrimaryKeyValue     PL      `hl7:"1,required,display=Primary Key Value - Ldp"`
	LocationDepartment  CWE     `hl7:"2,required,table=0264,display=Location Department"`
	LocationService     []CWE   `hl7:"3,table=0069,display=Location Service"`
	SpecialtyType       []CWE   `hl7:"4,table=0265,display=Specialty Type"`
	ValidPatientClasses []CWE   `hl7:"5,table=0004,display=Valid Patient Classes"`
	ActiveInactiveFlag  ID      `hl7:"6,len=1,table=0183,display=Active/Inactive Flag"`
	ActivationDate      DTM     `hl7:"7,format=YMDHM,display=Activation Date - Ldp"`
	InactivationDate    DTM     `hl7:"8,format=YMDHM,display=Inactivation Date - Ldp"`
	InactivatedReason   ST      `hl7:"9,display=Inactivated Reason"`
	VisitingHours       []VH    `hl7:"10,display=Visiting Hours"`
	ContactPhone        *XTN    `hl7:"11,display=Contact Phone"`
	LocationCostCenter  *CWE    `hl7:"12,table=0462,display=Location Cost Center"`
}

// Location Identification
//
// The LOC segment can identify any patient location referenced by information systems.  This segment gives physical set
// up information about the location.  This is not intended to include any current occupant or current use information.  There
// should be one LOC segment for each patient location.  If desired, there can also be one LOC segment for each nursing unit and
// room.
type LOC struct {
	HL7                 HL7Name `hl7:",name=LOC,type=s"`
	PrimaryKeyValue     PL      `hl7:"1,required,display=Primary Key Value - Loc"`
	LocationDescription ST      `hl7:"2,display=Location Description"`
	LocationType        []CWE   `hl7:"3,required,table=0260,display=Location Type - Loc"`
	OrganizationName    []XON   `hl7:"4,display=Organization Name - Loc"`
	LocationAddress     []XAD   `hl7:"5,display=Location Address"`
	LocationPhone       []XTN   `hl7:"6,display=Location Phone"`
	LicenseNumber       []CWE   `hl7:"7,table=0461,display=License Number"`
	LocationEquipment   []CWE   `hl7:"8,table=0261,display=Location Equipment"`
	LocationServiceCode *CWE    `hl7:"9,table=0442,display=Location Service Code"`
}

// Location Relationship
//
// The LRL segment is used to identify one location's relationship to another location, the nearest lab, pharmacy, etc.
type LRL struct {
	HL7                                     HL7Name `hl7:",name=LRL,type=s"`
	PrimaryKeyValue                         PL      `hl7:"1,required,display=Primary Key Value - Lrl"`
	SegmentActionCode                       ID      `hl7:"2,len=1,table=0206,display=Segment Action Code"`
	SegmentUniqueKey                        *EI     `hl7:"3,display=Segment Unique Key"`
	LocationRelationshipID                  CWE     `hl7:"4,required,table=0325,display=Location Relationship Id"`
	OrganizationalLocationRelationshipValue []XON   `hl7:"5,conditional,display=Organizational Location Relationship Value"`
	PatientLocationRelationshipValue        *PL     `hl7:"6,conditional,display=Patient Location Relationship Value"`
}

// Master File Acknowledgment
type MFA struct {
	HL7                       HL7Name  `hl7:",name=MFA,type=s"`
	RecordLevelEventCode      ID       `hl7:"1,required,len=3,table=0180,display=Record-level Event Code"`
	MfnControlID              ST       `hl7:"2,conditional,display=Mfn Control Id"`
	EventCompletionDateTime   DTM      `hl7:"3,format=YMDHM,display=Event Completion Date/Time"`
	MfnRecordLevelErrorReturn CWE      `hl7:"4,required,table=0181,display=Mfn Record Level Error Return"`
	PrimaryKeyValue           []varies `hl7:"5,required,display=Primary Key Value - Mfa"`
	PrimaryKeyValueType       []ID     `hl7:"6,required,len=3,table=0355,display=Primary Key Value Type - Mfa"`
}

// Master File Entry
type MFE struct {
	HL7                  HL7Name  `hl7:",name=MFE,type=s"`
	RecordLevelEventCode ID       `hl7:"1,required,len=3,table=0180,display=Record-level Event Code"`
	MfnControlID         ST       `hl7:"2,conditional,display=Mfn Control Id"`
	EffectiveDateTime    DTM      `hl7:"3,format=YMDHM,display=Effective Date/Time"`
	PrimaryKeyValue      []varies `hl7:"4,required,display=Primary Key Value - Mfe"`
	PrimaryKeyValueType  []ID     `hl7:"5,required,len=3,table=0355,display=Primary Key Value Type"`
	EnteredDateTime      DTM      `hl7:"6,format=YMDHM,display=Entered Date/Time"`
	EnteredBy            *XCN     `hl7:"7,display=Entered By"`
}

// Master File Identification
type MFI struct {
	HL7                             HL7Name `hl7:",name=MFI,type=s"`
	MasterFileIdentifier            CWE     `hl7:"1,required,table=0175,display=Master File Identifier"`
	MasterFileApplicationIdentifier []HD    `hl7:"2,table=0361,display=Master File Application Identifier"`
	FileLevelEventCode              ID      `hl7:"3,required,len=3,table=0178,display=File-level Event Code"`
	EnteredDateTime                 DTM     `hl7:"4,format=YMDHM,display=Entered Date/Time"`
	EffectiveDateTime               DTM     `hl7:"5,format=YMDHM,display=Effective Date/Time"`
	ResponseLevelCode               ID      `hl7:"6,required,len=2,table=0179,display=Response Level Code"`
}

// Merge Patient Information
//
// The MRG segment provides receiving applications with information necessary to initiate the merging of patient data as
// well as groups of records. It is intended that this segment be used throughout the Standard to allow the merging of registration,
// accounting, and clinical records within specific applications.
//
// The assigning authority, the fourth component of the patient identifiers, is an HD data type that is uniquely associated
// with the assigning authority that originally assigned the number. A given institution, or group of intercommunicating
// institutions, should establish a list of assigning authorities that may be potential assignors of patient identification
// (and other important identification) numbers. The list will be one of the institution's master dictionary lists. Since
// third parties (other than the assignors of patient identification numbers) may send or receive HL7 messages containing
// patient identification numbers, the assigning authority in the patient identification numbers may not be the same as
// those of the sending and receiving systems identified in the MSH. The assigning authority must be unique across applications
// at a given site. This field is required in HL7 implementations that have more than a single Patient Administration application
// assigning such numbers.
type MRG struct {
	HL7                        HL7Name `hl7:",name=MRG,type=s"`
	PriorPatientIdentifierList []CX    `hl7:"1,required,display=Prior Patient Identifier List"`
	PriorAlternatePatientID    ST      `hl7:"2,display=Prior Alternate Patient Id"`
	PriorPatientAccountNumber  *CX     `hl7:"3,display=Prior Patient Account Number"`
	PriorPatientID             ST      `hl7:"4,display=Prior Patient Id"`
	PriorVisitNumber           *CX     `hl7:"5,display=Prior Visit Number"`
	PriorAlternateVisitID      *CX     `hl7:"6,display=Prior Alternate Visit Id"`
	PriorPatientName           []XPN   `hl7:"7,display=Prior Patient Name"`
}

// Message Acknowledgment
//
// The MSA segment contains information sent while acknowledging another message.
type MSA struct {
	HL7                       HL7Name `hl7:",name=MSA,type=s"`
	AcknowledgmentCode        ID      `hl7:"1,required,len=2,table=0008,display=Acknowledgment Code"`
	MessageControlID          ST      `hl7:"2,required,len=199,display=Message Control Id"`
	TextMessage               ST      `hl7:"3,display=Text Message"`
	ExpectedSequenceNumber    NM      `hl7:"4,display=Expected Sequence Number"`
	DelayedAcknowledgmentType ST      `hl7:"5,display=Delayed Acknowledgment Type"`
	ErrorCondition            ST      `hl7:"6,display=Error Condition"`
	MessageWaitingNumber      NM      `hl7:"7,display=Message Waiting Number"`
	MessageWaitingPriority    ID      `hl7:"8,len=1,table=0520,display=Message Waiting Priority"`
}

// Message Header
//
// The MSH segment defines the intent, source, destination, and some specifics of the syntax of a message.
type MSH struct {
	HL7                                 HL7Name `hl7:",name=MSH,type=s"`
	FieldSeparator                      ST      `hl7:"1,noescape,fieldsep,omit,required,len=1,display=Field Separator"`
	EncodingCharacters                  ST      `hl7:"2,noescape,fieldchars,required,len=5,display=Encoding Characters"`
	SendingApplication                  *HD     `hl7:"3,table=0361,display=Sending Application"`
	SendingFacility                     *HD     `hl7:"4,table=0362,display=Sending Facility"`
	ReceivingApplication                *HD     `hl7:"5,table=0361,display=Receiving Application"`
	ReceivingFacility                   *HD     `hl7:"6,table=0362,display=Receiving Facility"`
	DateTimeOfMessage                   DTM     `hl7:"7,required,format=YMDHM,display=Date/Time Of Message"`
	Security                            ST      `hl7:"8,display=Security"`
	MessageType                         MSG     `hl7:"9,required,display=Message Type"`
	MessageControlID                    ST      `hl7:"10,required,len=199,display=Message Control Id"`
	ProcessingID                        PT      `hl7:"11,required,display=Processing Id"`
	VersionID                           VID     `hl7:"12,required,display=Version Id"`
	SequenceNumber                      NM      `hl7:"13,display=Sequence Number"`
	ContinuationPointer                 ST      `hl7:"14,display=Continuation Pointer"`
	AcceptAcknowledgmentType            ID      `hl7:"15,len=2,table=0155,display=Accept Acknowledgment Type"`
	ApplicationAcknowledgmentType       ID      `hl7:"16,len=2,table=0155,display=Application Acknowledgment Type"`
	CountryCode                         ID      `hl7:"17,len=3,table=0399,display=Country Code"`
	CharacterSet                        []ID    `hl7:"18,len=15,table=0211,display=Character Set"`
	PrincipalLanguageOfMessage          *CWE    `hl7:"19,display=Principal Language Of Message"`
	AlternateCharacterSetHandlingScheme ID      `hl7:"20,len=13,table=0356,display=Alternate Character Set Handling Scheme"`
	MessageProfileIdentifier            []EI    `hl7:"21,display=Message Profile Identifier"`
	SendingResponsibleOrganization      *XON    `hl7:"22,display=Sending Responsible Organization"`
	ReceivingResponsibleOrganization    *XON    `hl7:"23,display=Receiving Responsible Organization"`
	SendingNetworkAddress               *HD     `hl7:"24,display=Sending Network Address"`
	ReceivingNetworkAddress             *HD     `hl7:"25,display=Receiving Network Address"`
}

// MessageStructureID returns the code for the message structure.
// Implements the interface for decoders.
func (s MSH) MessageStructureID() string {
	return s.MessageType.MessageStructureID()
}

// System Clock
//
// The NCK segment is used to allow the various applications on the network to synchronize their system clocks (system date
// and time).
//
// Usage Notes: If this message is to be used to automatically reset/correct system clocks, it is recommended that the system
// or administrative personnel initiating the NMQ with the NCK segment have the authority to correct the clock (system date
// and time) for the other systems on the network.  This is important in order to avoid the obvious confusion of multiple systems
// attempting to resynchronize each other's clocks.
//
// If this message is used only to gather information on the various systems' clocks, it is still important for an administrative
// procedure to be worked out to avoid conflicts when resetting clocks.
type NCK struct {
	HL7            HL7Name `hl7:",name=NCK,type=s"`
	SystemDateTime DTM     `hl7:"1,required,len=24,format=YMDHM,display=System Date/Time"`
}

// Notification Detail
//
// The equipment notification detail segment is the data necessary to maintain an adequate audit trail as well as notifications
// of events, (e.g., alarms that have occurred on a particular piece of equipment.
type NDS struct {
	HL7                         HL7Name `hl7:",name=NDS,type=s"`
	NotificationReferenceNumber NM      `hl7:"1,required,display=Notification Reference Number"`
	NotificationDateTime        DTM     `hl7:"2,required,format=YMDHM,display=Notification Date/Time"`
	NotificationAlertSeverity   CWE     `hl7:"3,required,table=0367,display=Notification Alert Severity"`
	NotificationCode            CWE     `hl7:"4,required,table=9999,display=Notification Code"`
}

// Next Of Kin / Associated Parties
//
// The NK1 segment contains information about the patient's other related parties. Any associated parties may be identified.
// Utilizing NK1-1 - set ID, multiple NK1 segments can be sent to patient accounts.
//
// If a person or organization fulfills multiple contact roles, for example, a person is an emergency contact and a next of
// kin, it is recommended to send a NK1 segment for each contact role (field 7).
type NK1 struct {
	HL7                                        HL7Name `hl7:",name=NK1,type=s"`
	SetID                                      SI      `hl7:"1,seq,required,len=4,display=Set Id - Nk1"`
	Name                                       []XPN   `hl7:"2,display=Name"`
	Relationship                               *CWE    `hl7:"3,table=0063,display=Relationship"`
	Address                                    []XAD   `hl7:"4,display=Address"`
	PhoneNumber                                []XTN   `hl7:"5,display=Phone Number"`
	BusinessPhoneNumber                        []XTN   `hl7:"6,display=Business Phone Number"`
	ContactRole                                *CWE    `hl7:"7,table=0131,display=Contact Role"`
	StartDate                                  DT      `hl7:"8,format=YMD,display=Start Date"`
	EndDate                                    DT      `hl7:"9,format=YMD,display=End Date"`
	NextOfKinAssociatedPartiesJobTitle         ST      `hl7:"10,display=Next Of Kin / Associated Parties Job Title"`
	NextOfKinAssociatedPartiesJobCodeClass     *JCC    `hl7:"11,display=Next Of Kin / Associated Parties Job Code/Class"`
	NextOfKinAssociatedPartiesEmployeeNumber   *CX     `hl7:"12,display=Next Of Kin / Associated Parties Employee Number"`
	OrganizationName                           []XON   `hl7:"13,display=Organization Name - Nk1"`
	MaritalStatus                              *CWE    `hl7:"14,table=0002,display=Marital Status"`
	AdministrativeSex                          *CWE    `hl7:"15,table=0001,display=Administrative Sex"`
	DateTimeOfBirth                            DTM     `hl7:"16,format=YMDHM,display=Date/Time Of Birth"`
	LivingDependency                           []CWE   `hl7:"17,table=0223,display=Living Dependency"`
	AmbulatoryStatus                           []CWE   `hl7:"18,table=0009,display=Ambulatory Status"`
	Citizenship                                []CWE   `hl7:"19,table=0171,display=Citizenship"`
	PrimaryLanguage                            *CWE    `hl7:"20,table=0296,display=Primary Language"`
	LivingArrangement                          *CWE    `hl7:"21,table=0220,display=Living Arrangement"`
	PublicityCode                              *CWE    `hl7:"22,table=0215,display=Publicity Code"`
	ProtectionIndicator                        ID      `hl7:"23,len=1,table=0136,display=Protection Indicator"`
	StudentIndicator                           *CWE    `hl7:"24,table=0231,display=Student Indicator"`
	Religion                                   *CWE    `hl7:"25,table=0006,display=Religion"`
	MothersMaidenName                          []XPN   `hl7:"26,display=Mother's Maiden Name"`
	Nationality                                *CWE    `hl7:"27,table=0212,display=Nationality"`
	EthnicGroup                                []CWE   `hl7:"28,table=0189,display=Ethnic Group"`
	ContactReason                              []CWE   `hl7:"29,table=0222,display=Contact Reason"`
	ContactPersonsName                         []XPN   `hl7:"30,display=Contact Person's Name"`
	ContactPersonsTelephoneNumber              []XTN   `hl7:"31,display=Contact Person's Telephone Number"`
	ContactPersonsAddress                      []XAD   `hl7:"32,display=Contact Person's Address"`
	NextOfKinAssociatedPartysIdentifiers       []CX    `hl7:"33,display=Next Of Kin/Associated Party's Identifiers"`
	JobStatus                                  *CWE    `hl7:"34,table=0311,display=Job Status"`
	Race                                       []CWE   `hl7:"35,table=0005,display=Race"`
	Handicap                                   *CWE    `hl7:"36,table=0295,display=Handicap"`
	ContactPersonSocialSecurityNumber          ST      `hl7:"37,display=Contact Person Social Security Number"`
	NextOfKinBirthPlace                        ST      `hl7:"38,display=Next Of Kin Birth Place"`
	VipIndicator                               *CWE    `hl7:"39,table=0099,display=Vip Indicator"`
	NextOfKinTelecommunicationInformation      *XTN    `hl7:"40,display=Next Of Kin Telecommunication Information"`
	ContactPersonsTelecommunicationInformation *XTN    `hl7:"41,display=Contact Person's Telecommunication Information"`
}

// Bed Status Update
//
// The NPU segment allows the updating of census (bed status) data without sending patient-specific data. An example might
// include changing the status of a bed from "housekeeping" to "unoccupied."
type NPU struct {
	HL7         HL7Name `hl7:",name=NPU,type=s"`
	BedLocation PL      `hl7:"1,required,display=Bed Location"`
	BedStatus   *CWE    `hl7:"2,table=0116,display=Bed Status"`
}

// Application Status Change
//
// The NSC segment is used to inform (NMR query response) or announce (NMD unsolicited update) the start up, shut down, and/or
// migration (to a different CPU or file server/file system) of a particular application.
//
// Usage Notes: Fields 2-9.  These are not applicable ("n/a") when the type of change being requested or reported is start-up
// or shut-down.  If the change is of type "M", at least one of fields 2-5 must be different from its corresponding field in range
// 6-9.
//
// Fields 4-5, 8-9.  See definitions for the MSH, message header segment, in Chapter 2, "Control Section," for fields 3-4,
// for system and facility.  "Application" is available for interfacing with lower level protocols.  "Facility" is entirely
// site-defined.
//
// Fields 2-3, 6-7: entirely site-defined.
type NSC struct {
	HL7                   HL7Name `hl7:",name=NSC,type=s"`
	ApplicationChangeType CWE     `hl7:"1,required,table=0409,display=Application Change Type"`
	CurrentCPU            ST      `hl7:"2,display=Current Cpu"`
	CurrentFileserver     ST      `hl7:"3,display=Current Fileserver"`
	CurrentApplication    *HD     `hl7:"4,table=0361,display=Current Application"`
	CurrentFacility       *HD     `hl7:"5,table=0362,display=Current Facility"`
	NewCPU                ST      `hl7:"6,display=New Cpu"`
	NewFileserver         ST      `hl7:"7,display=New Fileserver"`
	NewApplication        *HD     `hl7:"8,table=0361,display=New Application"`
	NewFacility           *HD     `hl7:"9,table=0362,display=New Facility"`
}

// Application Control Level Statistics
//
// The NST segment allows application control-level statistical information to be passed between the various systems on
// the network.  Some fields in this segment refer to portions of lower level protocols; they contain information that can
// be used by application management applications monitoring the state of various network links.
//
// Usage Notes: Fields 2-15.  These are all marked optional since the statistics kept on a particular link and negotiated between
// the two systems in question will vary.  Not all values will apply to each system.  Some values are concerned with the type of
// port, and some values pertain to the lower level protocol.
type NST struct {
	HL7                           HL7Name `hl7:",name=NST,type=s"`
	StatisticsAvailable           ID      `hl7:"1,required,len=1,table=0136,display=Statistics Available"`
	SourceIdentifier              ST      `hl7:"2,display=Source Identifier"`
	SourceType                    ID      `hl7:"3,table=0332,display=Source Type"`
	StatisticsStart               DTM     `hl7:"4,format=YMDHM,display=Statistics Start"`
	StatisticsEnd                 DTM     `hl7:"5,format=YMDHM,display=Statistics End"`
	ReceiveCharacterCount         NM      `hl7:"6,display=Receive Character Count"`
	SendCharacterCount            NM      `hl7:"7,display=Send Character Count"`
	MessagesReceived              NM      `hl7:"8,display=Messages Received"`
	MessagesSent                  NM      `hl7:"9,display=Messages Sent"`
	ChecksumErrorsReceived        NM      `hl7:"10,display=Checksum Errors Received"`
	LengthErrorsReceived          NM      `hl7:"11,display=Length Errors Received"`
	OtherErrorsReceived           NM      `hl7:"12,display=Other Errors Received"`
	ConnectTimeouts               NM      `hl7:"13,display=Connect Timeouts"`
	ReceiveTimeouts               NM      `hl7:"14,display=Receive Timeouts"`
	ApplicationControlLevelErrors NM      `hl7:"15,display=Application Control-level Errors"`
}

// Notes And Comments
//
// The NTE segment is defined here for inclusion in messages defined in other chapters. It is commonly used for sending notes
// and comments.
//
// The technical committees define the meaning of the NTE segments within the context of the messages in their chapters. For
// each NTE, the description in the message attribute table should include an indication of the segment associated with the
// NTE, for example "Notes and Comments for the PID".
type NTE struct {
	HL7                HL7Name `hl7:",name=NTE,type=s"`
	SetID              SI      `hl7:"1,seq,display=Set Id - Nte"`
	SourceOfComment    ID      `hl7:"2,len=1,table=0105,display=Source Of Comment"`
	Comment            []FT    `hl7:"3,display=Comment"`
	CommentType        *CWE    `hl7:"4,table=0364,display=Comment Type"`
	EnteredBy          *XCN    `hl7:"5,display=Entered By"`
	EnteredDateTime    DTM     `hl7:"6,format=YMDHM,display=Entered Date/Time"`
	EffectiveStartDate DTM     `hl7:"7,format=YMDHM,display=Effective Start Date"`
	ExpirationDate     DTM     `hl7:"8,format=YMDHM,display=Expiration Date"`
}

// Observation Request
//
// The Observation Request (OBR) segment is used to transmit information specific to an order for a diagnostic study or observation,
// physical exam, or assessment.
//
// The Observation Request segment defines the attributes of a particular request for diagnostic services (e.g., laboratory,
// EKG) or clinical observations (e.g., vital signs or physical exam). When a placer requests a given set of observations,
// always include an order segment. For lab tests, the information in the order segment usually applies to a single specimen.
// However, there is not a one-to-one relationship between specimen and tests ordered. Different test batteries will usually
// require their own order segments even when they can be performed on a single specimen. In this case, the specimen information
// must be duplicated in each of the order segments that employ that specimen. For other diagnostic studies, e.g., chest X-ray,
// a separate order segment will usually be generated for each diagnostic study.
//
// Though multiple observation batteries can be ordered on a single order segment, the observation filler shall generate
// a separate order segment for each battery that it processes independently, e.g., electrolyte, CBC, vital signs. When
// reporting the observations, the filling service shall copy the appropriate order (specimen) information from the original
// order segment into each of the new order segments so that a separate "order" segment is returned to the placer as a "header"
// for each separate battery of observations.
//
// In the event that an ordered battery of observations cannot be performed, e.g., because of hemolysis on a blood sample,
// an order segment will be returned to the placer with OBR-25-result status equal to X (to indicate that the study was not performed).
// In this case, no observation segments will be transmitted.
//
// When observations are successfully completed, the message returned to the placer will include the order segment (OBR)
// followed by observation (OBX) segments for each distinct observation generated by the order (see Chapter 7). The number
// of such observation segments will depend upon the number of individual measurements performed in the process.
//
// OBX segments can be sent by the placer along with an order to provide the filling service with clinical data needed to interpret
// the results. (See Chapter 7 for OBX details.)
//
// The daggered (+) items in this segment are created by the filler, not the placer. They are valued by the filler as needed when
// the OBR segment is returned as part of a report.
//
// The starred (*) fields are only relevant when an observation is associated with a specimen. These are completed by the placer
// when the placer obtains the specimen. They are completed by the filler when the filler obtains the specimen.
//
// OBR-7-observation date/time and OBR-8-observation end date/time (flagged with #) are the physiologically relevant
// times. In the case of an observation on a specimen, they represent the start and end of the specimen collection. In the case
// of an observation obtained directly from a subject (e.g., BP, Chest X-ray), they represent the start and end time of the
// observation.
//
// In the reporting of clinical data, the OBR serves as the report header. It identifies the observation set represented by
// the following atomic observations. It includes the relevant ordering information when that applies. It contains many
// of the attributes that usually apply to all of the included observations.
//
// When a set of observations is ordered, the order message contains an OBR segment. However, observations can be collected
// and reported without an antecedent order. When observations are reported, the report message also includes one or more
// OBR segments. So, the OBR segment is like a turn-around document. Some fields in the OBR segment apply only to the ordering
// message and some to the reporting message. To those familiar with healthcare procedures, these should be obvious from
// their names (e.g., transcriptionist or principal result interpreter could only apply to the reporting phase). However,
// we have also flagged them in the OBR HL7 Attribute Table to indicate whether placer, filler, or both may send data in a given
// field.
type OBR struct {
	HL7                                        HL7Name `hl7:",name=OBR,type=s"`
	SetID                                      SI      `hl7:"1,seq,len=4,display=Set Id - Obr"`
	PlacerOrderNumber                          *EI     `hl7:"2,conditional,display=Placer Order Number"`
	FillerOrderNumber                          *EI     `hl7:"3,conditional,display=Filler Order Number"`
	UniversalServiceIdentifier                 CWE     `hl7:"4,required,display=Universal Service Identifier"`
	Priority                                   ST      `hl7:"5,display=Priority"`
	RequestedDateTime                          ST      `hl7:"6,display=Requested Date/Time"`
	ObservationDateTime                        DTM     `hl7:"7,conditional,format=YMDHM,display=Observation Date/Time #"`
	ObservationEndDateTime                     DTM     `hl7:"8,format=YMDHM,display=Observation End Date/Time #"`
	CollectionVolume                           *CQ     `hl7:"9,display=Collection Volume *"`
	CollectorIdentifier                        []XCN   `hl7:"10,display=Collector Identifier *"`
	SpecimenActionCode                         ID      `hl7:"11,len=1,table=0065,display=Specimen Action Code *"`
	DangerCode                                 *CWE    `hl7:"12,table=9999,display=Danger Code"`
	RelevantClinicalInformation                []CWE   `hl7:"13,table=0916,display=Relevant Clinical Information"`
	SpecimenReceivedDateTime                   ST      `hl7:"14,display=Specimen Received Date/Time"`
	SpecimenSource                             ST      `hl7:"15,display=Specimen Source"`
	OrderingProvider                           []XCN   `hl7:"16,display=Ordering Provider"`
	OrderCallbackPhoneNumber                   []XTN   `hl7:"17,max=2,display=Order Callback Phone Number"`
	PlacerField1                               ST      `hl7:"18,display=Placer Field 1"`
	PlacerField2                               ST      `hl7:"19,display=Placer Field 2"`
	FillerField1                               ST      `hl7:"20,display=Filler Field 1 +"`
	FillerField2                               ST      `hl7:"21,display=Filler Field 2 +"`
	ResultsRptStatusChngDateTime               DTM     `hl7:"22,conditional,format=YMDHM,display=Results Rpt/Status Chng - Date/Time +"`
	ChargeToPractice                           *MOC    `hl7:"23,display=Charge To Practice +"`
	DiagnosticServSectID                       ID      `hl7:"24,len=3,table=0074,display=Diagnostic Serv Sect Id"`
	ResultStatus                               ID      `hl7:"25,conditional,len=1,table=0123,display=Result Status +"`
	ParentResult                               *PRL    `hl7:"26,display=Parent Result +"`
	QuantityTiming                             []ST    `hl7:"27,display=Quantity/Timing"`
	ResultCopiesTo                             []XCN   `hl7:"28,display=Result Copies To"`
	Parent                                     *EIP    `hl7:"29,display=Parent"`
	TransportationMode                         ID      `hl7:"30,len=4,table=0124,display=Transportation Mode"`
	ReasonForStudy                             []CWE   `hl7:"31,table=9999,display=Reason For Study"`
	PrincipalResultInterpreter                 NDL     `hl7:"32,display=Principal Result Interpreter +"`
	AssistantResultInterpreter                 []NDL   `hl7:"33,display=Assistant Result Interpreter +"`
	Technician                                 []NDL   `hl7:"34,display=Technician +"`
	Transcriptionist                           []NDL   `hl7:"35,display=Transcriptionist +"`
	ScheduledDateTime                          DTM     `hl7:"36,format=YMDHM,display=Scheduled Date/Time +"`
	NumberOfSampleContainers                   NM      `hl7:"37,display=Number Of Sample Containers *"`
	TransportLogisticsOfCollectedSample        []CWE   `hl7:"38,table=9999,display=Transport Logistics Of Collected Sample *"`
	CollectorsComment                          []CWE   `hl7:"39,table=9999,display=Collector's Comment *"`
	TransportArrangementResponsibility         *CWE    `hl7:"40,table=9999,display=Transport Arrangement Responsibility"`
	TransportArranged                          ID      `hl7:"41,len=1,table=0224,display=Transport Arranged"`
	EscortRequired                             ID      `hl7:"42,len=1,table=0225,display=Escort Required"`
	PlannedPatientTransportComment             []CWE   `hl7:"43,table=9999,display=Planned Patient Transport Comment"`
	ProcedureCode                              *CNE    `hl7:"44,table=0088,display=Procedure Code"`
	ProcedureCodeModifier                      []CNE   `hl7:"45,table=0340,display=Procedure Code Modifier"`
	PlacerSupplementalServiceInformation       []CWE   `hl7:"46,table=0411,display=Placer Supplemental Service Information"`
	FillerSupplementalServiceInformation       []CWE   `hl7:"47,table=0411,display=Filler Supplemental Service Information"`
	MedicallyNecessaryDuplicateProcedureReason *CWE    `hl7:"48,conditional,table=0476,display=Medically Necessary Duplicate Procedure Reason"`
	ResultHandling                             *CWE    `hl7:"49,table=0507,display=Result Handling"`
	ParentUniversalServiceIdentifier           CWE     `hl7:"50,display=Parent Universal Service Identifier"`
	ObservationGroupID                         *EI     `hl7:"51,display=Observation Group Id"`
	ParentObservationGroupID                   *EI     `hl7:"52,display=Parent Observation Group Id"`
	AlternatePlacerOrderNumber                 []CX    `hl7:"53,display=Alternate Placer Order Number"`
	ParentOrder                                *EIP    `hl7:"54,display=Parent Order"`
}

// Observation/result
//
// The OBX segment is used to transmit a single observation or observation fragment. It represents the smallest indivisible
// unit of a report. The OBX segment can also contain encapsulated data, e.g., a CDA document or a DICOM image.
//
// Its principal mission is to carry information about observations in report messages. But the OBX can also be part of an observation
// order (see Chapter 4, section 4.4, "General Trigger Events & Message Definitions"). In this case, the OBX carries clinical
// information needed by the filler to interpret the observation the filler makes. For example, an OBX is needed to report
// the inspired oxygen on an order for a blood oxygen to a blood gas lab, or to report the menstrual phase information which should
// be included on an order for a pap smear to a cytology lab. Appendix 7A includes codes for identifying many of pieces of information
// needed by observation producing services to properly interpret a test result. OBX is also found in other HL7 messages that
// need to include patient clinical information.
//
// When using the OBX for the TIM category, OBX-2 Value Type should be valued to DTM. Consequently, OBX-5 Observation Value
// should have a length of 26 given the format of the DTM data type. Note the expectations on which fields are required as well
// as the fields that should not be valued.
//
// When using the OBX for the CHN category, OBX-2 Value Type should be valued to CD. Consequently, OBX-5 Observation Value
// could have a length of up to 65536 given the format of the CD data type. Note the expectations on which fields are required
// as well as the fields that should not be valued.
//
// When using the OBX for the WAV category, OBX-2 can be valued as either NA or MA. The length of OBX-5 Observation Value depends
// on the data type chosen. NA is a repeating data type, and the length will depend on the number of repeats. Note the expectations
// on which fields are required as well as the fields that should not be valued.
//
// When using the OBX for the ANO category, OBX-2 Value Type should be valued to CWE. Consequently, OBX-5 Observation Value
// could have a length of up the 65536 given the format of the data types. Note the expectations on which fields are required
// as well as the fields that should not be valued.
type OBX struct {
	HL7                                   HL7Name  `hl7:",name=OBX,type=s"`
	SetID                                 SI       `hl7:"1,seq,len=4,display=Set Id - Obx"`
	ValueType                             ID       `hl7:"2,conditional,len=3,table=0125,display=Value Type"`
	ObservationIdentifier                 CWE      `hl7:"3,required,table=9999,display=Observation Identifier"`
	ObservationSubID                      ST       `hl7:"4,conditional,display=Observation Sub-id"`
	ObservationValue                      []varies `hl7:"5,conditional,display=Observation Value"`
	Units                                 *CWE     `hl7:"6,table=9999,display=Units"`
	ReferencesRange                       ST       `hl7:"7,display=References Range"`
	InterpretationCodes                   []CWE    `hl7:"8,display=Interpretation Codes"`
	Probability                           NM       `hl7:"9,display=Probability"`
	NatureOfAbnormalTest                  []ID     `hl7:"10,len=2,table=0080,display=Nature Of Abnormal Test"`
	ObservationResultStatus               ID       `hl7:"11,required,len=1,table=0085,display=Observation Result Status"`
	EffectiveDateOfReferenceRange         DTM      `hl7:"12,format=YMDHM,display=Effective Date Of Reference Range"`
	UserDefinedAccessChecks               ST       `hl7:"13,display=User Defined Access Checks"`
	DateTimeOfTheObservation              DTM      `hl7:"14,format=YMDHM,display=Date/Time Of The Observation"`
	ProducersID                           CWE      `hl7:"15,table=9999,display=Producer's Id"`
	ResponsibleObserver                   []XCN    `hl7:"16,display=Responsible Observer"`
	ObservationMethod                     []CWE    `hl7:"17,table=9999,display=Observation Method"`
	EquipmentInstanceIdentifier           []EI     `hl7:"18,display=Equipment Instance Identifier"`
	DateTimeOfTheAnalysis                 DTM      `hl7:"19,format=YMDHM,display=Date/Time Of The Analysis"`
	ObservationSite                       []CWE    `hl7:"20,table=0163,display=Observation Site"`
	ObservationInstanceIdentifier         *EI      `hl7:"21,display=Observation Instance Identifier"`
	MoodCode                              *CNE     `hl7:"22,conditional,table=0725,display=Mood Code"`
	PerformingOrganizationName            XON      `hl7:"23,display=Performing Organization Name"`
	PerformingOrganizationAddress         XAD      `hl7:"24,display=Performing Organization Address"`
	PerformingOrganizationMedicalDirector XCN      `hl7:"25,display=Performing Organization Medical Director"`
	PatientResultsReleaseCategory         ID       `hl7:"26,len=10,table=0909,display=Patient Results Release Category"`
	RootCause                             *CWE     `hl7:"27,table=0914,display=Root Cause"`
	LocalProcessControl                   []CWE    `hl7:"28,table=0915,display=Local Process Control"`
}

// Dietary Orders, Supplements, And Preferences
//
// The ORC sequence items of interest to ODS are ORC-1-order control, ORC-2-placer order number, ORC-3-filler order number,
// ORC-7-quantity/timing, ORC-9-date/time of transaction, ORC-10-entered by, and ORC-11-verified by. For ORC-1-order
// control, the values may be New (NW), Cancel (CA), Discontinue Order Request (DC), Change (XO), Hold Order Request (HD),
// and Release Previous Hold (RL). The HD and RL codes could stop service for a specified length of time. ORC-7-quantity/timing
// should be used to specify whether an order is continuous or for one service period only. It is also useful for supplements
// which are part of a diet but only delivered, say, every day at night.
//
// Example:
// |1^QPM^^20010415|.
type ODS struct {
	HL7                            HL7Name `hl7:",name=ODS,type=s"`
	Type                           ID      `hl7:"1,required,len=1,table=0159,display=Type"`
	ServicePeriod                  []CWE   `hl7:"2,max=10,display=Service Period"`
	DietSupplementOrPreferenceCode []CWE   `hl7:"3,required,max=20,display=Diet- Supplement- Or Preference Code"`
	TextInstruction                []ST    `hl7:"4,max=2,display=Text Instruction"`
}

// Diet Tray Instructions
//
// This segment addresses tray instructions. These are independent of diet codes, supplements, and preferences and therefore
// get separate order numbers.
type ODT struct {
	HL7             HL7Name `hl7:",name=ODT,type=s"`
	TrayType        CWE     `hl7:"1,required,table=0160,display=Tray Type"`
	ServicePeriod   []CWE   `hl7:"2,max=10,display=Service Period"`
	TextInstruction ST      `hl7:"3,display=Text Instruction"`
}

// General Segment
//
// The OM1 segment contains the attributes that apply to the definition of most observations.  This segment also contains
// the field attributes that specify what additional segments might also be defined for this observation.
type OM1 struct {
	HL7                                                    HL7Name `hl7:",name=OM1,type=s"`
	SequenceNumberTestObservationMasterFile                NM      `hl7:"1,required,display=Sequence Number - Test/Observation Master File"`
	ProducersServiceTestObservationID                      CWE     `hl7:"2,required,table=9999,display=Producer's Service/Test/Observation Id"`
	PermittedDataTypes                                     []ID    `hl7:"3,len=3,table=0125,display=Permitted Data Types"`
	SpecimenRequired                                       ID      `hl7:"4,required,len=1,table=0136,display=Specimen Required"`
	ProducerID                                             CWE     `hl7:"5,required,table=9999,display=Producer Id"`
	ObservationDescription                                 TX      `hl7:"6,display=Observation Description"`
	OtherServiceTestObservationIdsForTheObservation        *CWE    `hl7:"7,table=9999,display=Other Service/Test/Observation Ids For The Observation"`
	OtherNames                                             []ST    `hl7:"8,required,display=Other Names"`
	PreferredReportNameForTheObservation                   ST      `hl7:"9,display=Preferred Report Name For The Observation"`
	PreferredShortNameOrMnemonicForTheObservation          ST      `hl7:"10,len=8,display=Preferred Short Name Or Mnemonic For The Observation"`
	PreferredLongNameForTheObservation                     ST      `hl7:"11,display=Preferred Long Name For The Observation"`
	Orderability                                           ID      `hl7:"12,len=1,table=0136,display=Orderability"`
	IdentityOfInstrumentUsedToPerformThisStudy             []CWE   `hl7:"13,table=9999,display=Identity Of Instrument Used To Perform This Study"`
	CodedRepresentationOfMethod                            []CWE   `hl7:"14,table=9999,display=Coded Representation Of Method"`
	PortableDeviceIndicator                                ID      `hl7:"15,len=1,table=0136,display=Portable Device Indicator"`
	ObservationProducingDepartmentSection                  []CWE   `hl7:"16,table=9999,display=Observation Producing Department/Section"`
	TelephoneNumberOfSection                               *XTN    `hl7:"17,display=Telephone Number Of Section"`
	NatureOfServiceTestObservation                         CWE     `hl7:"18,required,len=1,table=0174,display=Nature Of Service/Test/Observation"`
	ReportSubheader                                        *CWE    `hl7:"19,table=9999,display=Report Subheader"`
	ReportDisplayOrder                                     ST      `hl7:"20,display=Report Display Order"`
	DateTimeStampForAnyChangeInDefinitionForTheObservation DTM     `hl7:"21,format=YMDHM,display=Date/Time Stamp For Any Change In Definition For The Observation"`
	EffectiveDateTimeOfChange                              DTM     `hl7:"22,format=YMDHM,display=Effective Date/Time Of Change"`
	TypicalTurnAroundTime                                  NM      `hl7:"23,display=Typical Turn-around Time"`
	ProcessingTime                                         NM      `hl7:"24,display=Processing Time"`
	ProcessingPriority                                     []ID    `hl7:"25,len=1,table=0168,display=Processing Priority"`
	ReportingPriority                                      ID      `hl7:"26,len=1,table=0169,display=Reporting Priority"`
	OutsideSiteSWhereObservationMayBePerformed             []CWE   `hl7:"27,table=9999,display=Outside Site(s) Where Observation May Be Performed"`
	AddressOfOutsideSiteS                                  []XAD   `hl7:"28,display=Address Of Outside Site(s)"`
	PhoneNumberOfOutsideSite                               *XTN    `hl7:"29,display=Phone Number Of Outside Site"`
	ConfidentialityCode                                    *CWE    `hl7:"30,table=0177,display=Confidentiality Code"`
	ObservationsRequiredToInterpretThisObservation         *CWE    `hl7:"31,table=9999,display=Observations Required To Interpret This Observation"`
	InterpretationOfObservations                           TX      `hl7:"32,display=Interpretation Of Observations"`
	ContraindicationsToObservations                        *CWE    `hl7:"33,table=9999,display=Contraindications To Observations"`
	ReflexTestsObservations                                []CWE   `hl7:"34,table=9999,display=Reflex Tests/Observations"`
	RulesThatTriggerReflexTesting                          TX      `hl7:"35,display=Rules That Trigger Reflex Testing"`
	FixedCannedMessage                                     *CWE    `hl7:"36,table=9999,display=Fixed Canned Message"`
	PatientPreparation                                     TX      `hl7:"37,display=Patient Preparation"`
	ProcedureMedication                                    *CWE    `hl7:"38,table=9999,display=Procedure Medication"`
	FactorsThatMayAffectTheObservation                     TX      `hl7:"39,display=Factors That May Affect The Observation"`
	ServiceTestObservationPerformanceSchedule              []ST    `hl7:"40,display=Service/Test/Observation Performance Schedule"`
	DescriptionOfTestMethods                               TX      `hl7:"41,display=Description Of Test Methods"`
	KindOfQuantityObserved                                 *CWE    `hl7:"42,table=0254,display=Kind Of Quantity Observed"`
	PointVersusInterval                                    *CWE    `hl7:"43,table=0255,display=Point Versus Interval"`
	ChallengeInformation                                   TX      `hl7:"44,display=Challenge Information"`
	RelationshipModifier                                   *CWE    `hl7:"45,table=0258,display=Relationship Modifier"`
	TargetAnatomicSiteOfTest                               *CWE    `hl7:"46,table=9999,display=Target Anatomic Site Of Test"`
	ModalityOfImagingMeasurement                           *CWE    `hl7:"47,table=0910,display=Modality Of Imaging Measurement"`
	ExclusiveTest                                          ID      `hl7:"48,table=0919,display=Exclusive Test"`
	DiagnosticServSectID                                   ID      `hl7:"49,table=0074,display=Diagnostic Serv Sect ID"`
	TaxonomicClassificationCode                            *CWE    `hl7:"50,table=0446,display=Taxonomic Classification Code"`
	OtherNames2                                            []ST    `hl7:"51,display=Other Names"`
}

// Numeric Observation
//
// This segment contains the attributes of observations with continuous values (including those with data types of numeric,
// date, or time stamp).  It can be applied to observation batteries of type A and C (see OM1-18 - Nature of Service/Test/Observation).
type OM2 struct {
	HL7                                                     HL7Name `hl7:",name=OM2,type=s"`
	SequenceNumberTestObservationMasterFile                 NM      `hl7:"1,display=Sequence Number - Test/Observation Master File"`
	UnitsOfMeasure                                          *CWE    `hl7:"2,table=9999,display=Units Of Measure"`
	RangeOfDecimalPrecision                                 []NM    `hl7:"3,display=Range Of Decimal Precision"`
	CorrespondingSiUnitsOfMeasure                           *CWE    `hl7:"4,table=9999,display=Corresponding Si Units Of Measure"`
	SiConversionFactor                                      TX      `hl7:"5,display=Si Conversion Factor"`
	ReferenceNormalRangeForOrdinalAndContinuousObservations []RFR   `hl7:"6,display=Reference (normal) Range For Ordinal And Continuous Observations"`
	CriticalRangeForOrdinalAndContinuousObservations        []RFR   `hl7:"7,display=Critical Range For Ordinal And Continuous Observations"`
	AbsoluteRangeForOrdinalAndContinuousObservations        *RFR    `hl7:"8,display=Absolute Range For Ordinal And Continuous Observations"`
	DeltaCheckCriteria                                      []DLT   `hl7:"9,display=Delta Check Criteria"`
	MinimumMeaningfulIncrements                             NM      `hl7:"10,display=Minimum Meaningful Increments"`
}

// Categorical Service/test/observation
//
// This segment applies to free text and other non-numeric data types.
type OM3 struct {
	HL7                                         HL7Name `hl7:",name=OM3,type=s"`
	SequenceNumberTestObservationMasterFile     NM      `hl7:"1,display=Sequence Number - Test/Observation Master File"`
	PreferredCodingSystem                       *CWE    `hl7:"2,table=9999,display=Preferred Coding System"`
	ValidCodedAnswers                           []CWE   `hl7:"3,table=9999,display=Valid Coded 'answers'"`
	NormalTextCodesForCategoricalObservations   []CWE   `hl7:"4,table=9999,display=Normal Text/Codes For Categorical Observations"`
	AbnormalTextCodesForCategoricalObservations []CWE   `hl7:"5,table=9999,display=Abnormal Text/Codes For Categorical Observations"`
	CriticalTextCodesForCategoricalObservations []CWE   `hl7:"6,table=9999,display=Critical Text/Codes For Categorical Observations"`
	ValueType                                   ID      `hl7:"7,len=3,table=0125,display=Value Type"`
}

// Observations That Require Specimens
//
// This segment applies to observations/batteries that require a specimen for their performance.  When an observation or
// battery requires multiple specimens for their performance (e.g., creatinine clearance requires a 24-hour urine specimen
// and a serum specimen), multiple segments may be included, one for each specimen type.
//
// OM4 is a repeating segment.  It allows multiple specimens per Order Code and accommodates for multiple alternate specimen
// for each preferred specimen.  In some cases an Order Code can require multiple specimens.  In many cases there are preferred
// specimens and for each preferred it is possible to have one or more alternative specimens.  The alternative specimen will
// carry in OM4-17 the Sequence Number – Test/Observation Master File (OM4-1) of the preferred specimen.
type OM4 struct {
	HL7                                     HL7Name `hl7:",name=OM4,type=s"`
	SequenceNumberTestObservationMasterFile NM      `hl7:"1,display=Sequence Number - Test/Observation Master File"`
	DerivedSpecimen                         ID      `hl7:"2,len=1,table=0170,display=Derived Specimen"`
	ContainerDescription                    TX      `hl7:"3,len=60,display=Container Description"`
	ContainerVolume                         NM      `hl7:"4,display=Container Volume"`
	ContainerUnits                          *CWE    `hl7:"5,table=9999,display=Container Units"`
	Specimen                                *CWE    `hl7:"6,table=9999,display=Specimen"`
	Additive                                *CWE    `hl7:"7,table=0371,display=Additive"`
	Preparation                             TX      `hl7:"8,display=Preparation"`
	SpecialHandlingRequirements             TX      `hl7:"9,display=Special Handling Requirements"`
	NormalCollectionVolume                  *CQ     `hl7:"10,display=Normal Collection Volume"`
	MinimumCollectionVolume                 *CQ     `hl7:"11,display=Minimum Collection Volume"`
	SpecimenRequirements                    TX      `hl7:"12,display=Specimen Requirements"`
	SpecimenPriorities                      []ID    `hl7:"13,len=1,table=0027,display=Specimen Priorities"`
	SpecimenRetentionTime                   *CQ     `hl7:"14,display=Specimen Retention Time"`
	SpecimenHandlingCode                    []CWE   `hl7:"15,table=0376,display=Specimen Handling Code"`
	SpecimenPreference                      ID      `hl7:"16,table=0920,display=Specimen Preference"`
	PreferredSpecimenAttribtureSequenceID   NM      `hl7:"17,display=Preferred Specimen/Attribture Sequence ID"`
	TaxonomicClassificationCode             []CWE   `hl7:"18,display=Taxonomic Classification Code"`
}

// Observation Batteries (sets)
//
// This segment contains the information about batteries and supersets (a nature code of F, P or S, as described in OM1-18 -
// Nature of Service/Test/Observation).
type OM5 struct {
	HL7                                                HL7Name `hl7:",name=OM5,type=s"`
	SequenceNumberTestObservationMasterFile            NM      `hl7:"1,display=Sequence Number - Test/Observation Master File"`
	TestObservationsIncludedWithinAnOrderedTestBattery []CWE   `hl7:"2,table=9999,display=Test/Observations Included Within An Ordered Test Battery"`
	ObservationIDSuffixes                              ST      `hl7:"3,display=Observation Id Suffixes"`
}

// Observations That Are Calculated From Other Observations
//
// This segment contains the information about quantities that are derived from one or more other quantities or direct observations
// by mathematical or logical means.
type OM6 struct {
	HL7                                     HL7Name `hl7:",name=OM6,type=s"`
	SequenceNumberTestObservationMasterFile NM      `hl7:"1,display=Sequence Number - Test/Observation Master File"`
	DerivationRule                          TX      `hl7:"2,display=Derivation Rule"`
}

// Additional Basic Attributes
//
// The OM7 segment contains additional basic attributes that apply to the definition of most observations/services
type OM7 struct {
	HL7                                     HL7Name `hl7:",name=OM7,type=s"`
	SequenceNumberTestObservationMasterFile NM      `hl7:"1,required,display=Sequence Number - Test/Observation Master File"`
	UniversalServiceIdentifier              CWE     `hl7:"2,required,display=Universal Service Identifier"`
	CategoryIdentifier                      []CWE   `hl7:"3,table=0412,display=Category Identifier"`
	CategoryDescription                     TX      `hl7:"4,display=Category Description"`
	CategorySynonym                         []ST    `hl7:"5,display=Category Synonym"`
	EffectiveTestServiceStartDateTime       DTM     `hl7:"6,format=YMDHM,display=Effective Test/Service Start Date/Time"`
	EffectiveTestServiceEndDateTime         DTM     `hl7:"7,format=YMDHM,display=Effective Test/Service End Date/Time"`
	TestServiceDefaultDurationQuantity      NM      `hl7:"8,display=Test/Service Default Duration Quantity"`
	TestServiceDefaultDurationUnits         *CWE    `hl7:"9,table=9999,display=Test/Service Default Duration Units"`
	TestServiceDefaultFrequency             *CWE    `hl7:"10,display=Test/Service Default Frequency"`
	ConsentIndicator                        ID      `hl7:"11,len=1,table=0136,display=Consent Indicator"`
	ConsentIdentifier                       *CWE    `hl7:"12,table=0413,display=Consent Identifier"`
	ConsentEffectiveStartDateTime           DTM     `hl7:"13,format=YMDHM,display=Consent Effective Start Date/Time"`
	ConsentEffectiveEndDateTime             DTM     `hl7:"14,format=YMDHM,display=Consent Effective End Date/Time"`
	ConsentIntervalQuantity                 NM      `hl7:"15,display=Consent Interval Quantity"`
	ConsentIntervalUnits                    *CWE    `hl7:"16,conditional,table=0414,display=Consent Interval Units"`
	ConsentWaitingPeriodQuantity            NM      `hl7:"17,display=Consent Waiting Period Quantity"`
	ConsentWaitingPeriodUnits               *CWE    `hl7:"18,conditional,table=0414,display=Consent Waiting Period Units"`
	EffectiveDateTimeOfChange               DTM     `hl7:"19,format=YMDHM,display=Effective Date/Time Of Change"`
	EnteredBy                               *XCN    `hl7:"20,display=Entered By"`
	OrderableAtLocation                     []PL    `hl7:"21,display=Orderable-at Location"`
	FormularyStatus                         *CWE    `hl7:"22,table=0473,display=Formulary Status"`
	SpecialOrderIndicator                   ID      `hl7:"23,len=1,table=0136,display=Special Order Indicator"`
	PrimaryKeyValueCdm                      []CWE   `hl7:"24,table=0132,display=Primary Key Value - Cdm"`
}

// Common Order
//
// The Common Order segment (ORC) is used to transmit fields that are common to all orders (all types of services that are requested).
//
// There is some overlap between fields of the ORC and those in the order detail segments. These are described in the succeeding
// sections.
//
// ORC use notes
// a) placer order groups
// The Standard supports a mechanism to collect several orders together in a group. Most often this is used to represent an
// "ordering session" for a single patient.
// An order group is a list of orders (ORCs) associated with an ORC-4-placer group number. A group is established when the placer
// supplies a placer group number with the original order. The order group consists of all the ORCs and order detail segments
// that have the same placer group number. Orders can be removed from the group using cancel, or added using the replacement
// or parent-child mechanisms. New orders cannot otherwise be added to the group.
//
// b) duplicate fields
// The ORC is intended to uniformly define the fields that are common to all orders (i.e., requested services). Some ORC fields
// are duplicated in some order detail segments (e.g., OBR, RXO). For example, ORC-2-placer order number has the same meaning
// and purpose as OBR-2-placer order number field. This promotes upward compatibility with past versions and ASTM.
// The rule for using these fields is that the value must appear in the order detail segment if it does not appear in the ORC. However,
// it is recommended to transmit the field value in both places to avoid confusion.
//
// c) parent/child – cancel, hold, discontinue
// During transmission of a request to cancel, hold, or discontinue a parent order, the request is intended to apply recursively
// to the parent order and all associated child orders.
// For example:
// 1) An EKG application receives an order for three EKGs on successive mornings.
// 2) The EKG application creates three child orders, one for each requested EKG.
// 3) The first daily EKG has already been performed when a request is received to cancel the original parent order. (The parent
// is beyond the point of cancellation.)
// 4) The remaining, unperformed, children are canceled as a result of the request.
type ORC struct {
	HL7                                     HL7Name `hl7:",name=ORC,type=s"`
	OrderControl                            ID      `hl7:"1,required,len=2,table=0119,display=Order Control"`
	PlacerOrderNumber                       *EI     `hl7:"2,conditional,display=Placer Order Number"`
	FillerOrderNumber                       *EI     `hl7:"3,conditional,display=Filler Order Number"`
	PlacerGroupNumber                       *EI     `hl7:"4,display=Placer Group Number"`
	OrderStatus                             ID      `hl7:"5,len=2,table=0038,display=Order Status"`
	ResponseFlag                            ID      `hl7:"6,len=1,table=0121,display=Response Flag"`
	QuantityTiming                          []ST    `hl7:"7,display=Quantity/Timing"`
	Parent                                  *EIP    `hl7:"8,display=Parent"`
	DateTimeOfTransaction                   DTM     `hl7:"9,format=YMDHM,display=Date/Time Of Transaction"`
	EnteredBy                               []XCN   `hl7:"10,display=Entered By"`
	VerifiedBy                              []XCN   `hl7:"11,display=Verified By"`
	OrderingProvider                        []XCN   `hl7:"12,display=Ordering Provider"`
	EnterersLocation                        *PL     `hl7:"13,display=Enterer's Location"`
	CallBackPhoneNumber                     []XTN   `hl7:"14,max=2,display=Call Back Phone Number"`
	OrderEffectiveDateTime                  DTM     `hl7:"15,format=YMDHM,display=Order Effective Date/Time"`
	OrderControlCodeReason                  *CWE    `hl7:"16,table=9999,display=Order Control Code Reason"`
	EnteringOrganization                    CWE     `hl7:"17,table=9999,display=Entering Organization"`
	EnteringDevice                          CWE     `hl7:"18,table=9999,display=Entering Device"`
	ActionBy                                []XCN   `hl7:"19,display=Action By"`
	AdvancedBeneficiaryNoticeCode           *CWE    `hl7:"20,table=0339,display=Advanced Beneficiary Notice Code"`
	OrderingFacilityName                    []XON   `hl7:"21,display=Ordering Facility Name"`
	OrderingFacilityAddress                 []XAD   `hl7:"22,display=Ordering Facility Address"`
	OrderingFacilityPhoneNumber             []XTN   `hl7:"23,display=Ordering Facility Phone Number"`
	OrderingProviderAddress                 []XAD   `hl7:"24,display=Ordering Provider Address"`
	OrderStatusModifier                     *CWE    `hl7:"25,table=9999,display=Order Status Modifier"`
	AdvancedBeneficiaryNoticeOverrideReason *CWE    `hl7:"26,conditional,table=0552,display=Advanced Beneficiary Notice Override Reason"`
	FillersExpectedAvailabilityDateTime     DTM     `hl7:"27,format=YMDHM,display=Filler's Expected Availability Date/Time"`
	ConfidentialityCode                     *CWE    `hl7:"28,table=0177,display=Confidentiality Code"`
	OrderType                               *CWE    `hl7:"29,table=0482,display=Order Type"`
	EntererAuthorizationMode                *CNE    `hl7:"30,table=0483,display=Enterer Authorization Mode"`
	ParentUniversalServiceIdentifier        CWE     `hl7:"31,display=Parent Universal Service Identifier"`
	AdvancedBeneficiaryNoticeDate           DT      `hl7:"32,format=YMD,display=Advanced Beneficiary Notice Date"`
	AlternatePlacerOrderNumber              []CX    `hl7:"33,display=Alternate Placer Order Number"`
	OrderWorkflowProfile                    []EI    `hl7:"34,table=0934,display=Order Workflow Profile"`
}

// Practitioner Organization Unit
//
// The ORG segment relates a practitioner to an organization unit and adds detailed information regarding the practitioner's
// practicing specialty in that organization unit.  An ORG segment may optionally follow an STF segment.  An ORG segment must
// always have been preceded by a corresponding STF segment.  If no organization unit is specified, this segment is used to
// relate practitioners with their practicing specialties, including effective and end dates.  When it is not necessary
// to record organization unit or dates associated with the practicing specialty, this data is recorded in PRA-3-Practitioner
// Category.
type ORG struct {
	HL7                                        HL7Name `hl7:",name=ORG,type=s"`
	SetID                                      SI      `hl7:"1,seq,required,len=4,display=Set Id - Org"`
	OrganizationUnitCode                       *CWE    `hl7:"2,table=0405,display=Organization Unit Code"`
	OrganizationUnitTypeCode                   *CWE    `hl7:"3,table=0474,display=Organization Unit Type Code"`
	PrimaryUnitIndicator                       ID      `hl7:"4,len=1,table=0136,display=Primary Org Unit Indicator"`
	PractitionerUnitIdentifier                 *CX     `hl7:"5,display=Practitioner Org Unit Identifier"`
	HealthCareProviderTypeCode                 *CWE    `hl7:"6,table=0452,display=Health Care Provider Type Code"`
	HealthCareProviderClassificationCode       *CWE    `hl7:"7,table=0453,display=Health Care Provider Classification Code"`
	HealthCareProviderAreaOfSpecializationCode *CWE    `hl7:"8,table=0454,display=Health Care Provider Area Of Specialization Code"`
	EffectiveDateRange                         *DR     `hl7:"9,display=Effective Date Range"`
	EmploymentStatusCode                       *CWE    `hl7:"10,table=0066,display=Employment Status Code"`
	BoardApprovalIndicator                     ID      `hl7:"11,len=1,table=0136,display=Board Approval Indicator"`
	PrimaryCarePhysicianIndicator              ID      `hl7:"12,len=1,table=0136,display=Primary Care Physician Indicator"`
	CostCenterCode                             []CWE   `hl7:"13,table=0539,display=Cost Center Code"`
}

// Override Segment
//
// This segment allows a sender to override specific receiving application's business rules to allow for processing of a
// message that would normally be rejected or ignored.
//
// In many instances, business rules will be set as guidelines relative to patient care. In some instances it is in the patient's
// better interest to circumvent these guidelines. In other cases, business rules may exist to support normal process flow,
// but which may be bypassed or ignored under certain special circumstances. This segment is linked to the proposed ERR segment
// changes in that the first attempt to process a transaction that violates a business rule may result in an error that must
// be overridden. The ERR provides a mechanism to identify errors that may be overridden, as well as the allowed override codes.
//
// Use case #1: A patient has received a prescription with a duration of 30 days and receives the full amount at their pharmacy.
// While at home the patient accidentally spills the container and spoils a significant proportion of the prescription.
// The patient returns to their pharmacy and explains the situation to the pharmacy technician. The technician consults
// with their supervising pharmacist. Knowing the patient, thepharmacist decides to override the business rule stating
// that the dispensed amount for a prescription may not exceed the prescribed amount. In recording the decision, the pharmacy
// technician specifies that the Override Type is a "Compassionate Refill" and that the Override Code, or reason for the override,
// is "Spoilage". The technician also provides Override Comments to provide an explanation of the situation for future reference.
// While recording the decision, the technician's user ID is automatically stored in an Override Recorded By field. The pharmacist's
// ID is stored in the Override Responsible Provider field.
//
// Use case #2:A hospital wishes to submit an invoice to an insurer who is providing secondary coverage. The invoice is being
// submitted over a week after the service was performed, which is outside the insurer's normal accept time window. The insurer
// would normally reject the invoice. However, the submitter includes an Override Type of "late submission" as well as an
// Override Code indicating that the invoice is late due to delays with the primary payor. The secondary insurer examines
// the override reason and accepts the invoice.
//
// Usage Note: The override segment should be included in messages adjacent to the segment(s) containing the information
// that would trigger the business rule(s) that needs to be overridden. The segment should be optional (you shouldn't always
// need to override business rules), and should be allowed to repeat in circumstances where there may be more than one business
// rule overridden at the same time. Committees may wish to provide suggested values for override types or codes for use with
// the OVR segment in different messages.
type OVR struct {
	HL7                      HL7Name `hl7:",name=OVR,type=s"`
	BusinessRuleOverrideType *CWE    `hl7:"1,table=0518,display=Business Rule Override Type"`
	BusinessRuleOverrideCode *CWE    `hl7:"2,table=0521,display=Business Rule Override Code"`
	OverrideComments         TX      `hl7:"3,display=Override Comments"`
	OverrideEnteredBy        *XCN    `hl7:"4,display=Override Entered By"`
	OverrideAuthorizedBy     *XCN    `hl7:"5,display=Override Authorized By"`
}

// Shipment Package
//
// The intent of this segment is to describe the information associated with the shipping package specimens are sent in.
type PAC struct {
	HL7                     HL7Name `hl7:",name=PAC,type=s"`
	SetID                   SI      `hl7:"1,seq,required,len=4,display=Set Id - Pac"`
	PackageID               *EI     `hl7:"2,conditional,display=Package Id"`
	ParentPackageID         *EI     `hl7:"3,display=Parent Package Id"`
	PositionInParentPackage *NA     `hl7:"4,display=Position In Parent Package"`
	PackageType             CWE     `hl7:"5,required,table=0908,display=Package Type"`
	PackageCondition        []CWE   `hl7:"6,table=0544,display=Package Condition"`
	PackageHandlingCode     []CWE   `hl7:"7,table=0376,display=Package Handling Code"`
	PackageRiskCode         []CWE   `hl7:"8,table=0489,display=Package Risk Code"`
}

// Patient Charge Cost Center Exceptions
//
// The Patient Charge Cost Center Exception segment identifies the Patient Price associated with Cost Center and Patient
// Charge Identifier combinations that should be used in an instance that the item is billed to a patient.  The grouping of Cost
// Center accounts, Patient Charge Identifier, and Patient Price is unique.
type PCE struct {
	HL7                     HL7Name `hl7:",name=PCE,type=s"`
	SetID                   SI      `hl7:"1,seq,required,len=4,display=Set Id - Pce"`
	CostCenterAccountNumber *CX     `hl7:"2,table=0319,display=Cost Center Account Number"`
	TransactionCode         *CWE    `hl7:"3,table=0132,display=Transaction Code"`
	TransactionAmountUnit   *CP     `hl7:"4,display=Transaction Amount - Unit"`
}

// Possible Causal Relationship
//
// The PCR segment is used to communicate a potential or suspected relationship between a product (drug or device) or test
// and an event with detrimental effect on a patient. This segment identifies a potential causal relationship between the
// product identified in this segment and the event identified in the PEO segment.
//
// More than one PCR segment can be included in the message if more than one product is possibly causally related to the event.
type PCR struct {
	HL7                               HL7Name `hl7:",name=PCR,type=s"`
	ImplicatedProduct                 CWE     `hl7:"1,required,table=9999,display=Implicated Product"`
	GenericProduct                    IS      `hl7:"2,table=0249,display=Generic Product"`
	ProductClass                      *CWE    `hl7:"3,table=9999,display=Product Class"`
	TotalDurationOfTherapy            *CQ     `hl7:"4,display=Total Duration Of Therapy"`
	ProductManufactureDate            DTM     `hl7:"5,format=YMDHM,display=Product Manufacture Date"`
	ProductExpirationDate             DTM     `hl7:"6,format=YMDHM,display=Product Expiration Date"`
	ProductImplantationDate           DTM     `hl7:"7,format=YMDHM,display=Product Implantation Date"`
	ProductExplantationDate           DTM     `hl7:"8,format=YMDHM,display=Product Explantation Date"`
	SingleUseDevice                   *CWE    `hl7:"9,table=0244,display=Single Use Device"`
	IndicationForProductUse           *CWE    `hl7:"10,table=9999,display=Indication For Product Use"`
	ProductProblem                    *CWE    `hl7:"11,table=0245,display=Product Problem"`
	ProductSerialLotNumber            []ST    `hl7:"12,max=3,display=Product Serial/Lot Number"`
	ProductAvailableForInspection     *CWE    `hl7:"13,table=0246,display=Product Available For Inspection"`
	ProductEvaluationPerformed        *CWE    `hl7:"14,table=9999,display=Product Evaluation Performed"`
	ProductEvaluationStatus           *CWE    `hl7:"15,table=0247,display=Product Evaluation Status"`
	ProductEvaluationResults          *CWE    `hl7:"16,table=9999,display=Product Evaluation Results"`
	EvaluatedProductSource            ID      `hl7:"17,len=1,table=0248,display=Evaluated Product Source"`
	DateProductReturnedToManufacturer DTM     `hl7:"18,format=YMDHM,display=Date Product Returned To Manufacturer"`
	DeviceOperatorQualifications      ID      `hl7:"19,len=1,table=0242,display=Device Operator Qualifications"`
	RelatednessAssessment             ID      `hl7:"20,len=1,table=0250,display=Relatedness Assessment"`
	ActionTakenInResponseToTheEvent   []ID    `hl7:"21,max=6,len=2,table=0251,display=Action Taken In Response To The Event"`
	EventCausalityObservations        []ID    `hl7:"22,max=6,len=2,table=0252,display=Event Causality Observations"`
	IndirectExposureMechanism         []ID    `hl7:"23,max=3,len=1,table=0253,display=Indirect Exposure Mechanism"`
}

// Patient Additional Demographic
//
// The patient additional demographic segment contains demographic information that is likely to change about the patient.
type PD1 struct {
	HL7                                     HL7Name `hl7:",name=PD1,type=s"`
	LivingDependency                        []CWE   `hl7:"1,table=0223,display=Living Dependency"`
	LivingArrangement                       *CWE    `hl7:"2,table=0220,display=Living Arrangement"`
	PatientPrimaryFacility                  []XON   `hl7:"3,display=Patient Primary Facility"`
	PatientPrimaryCareProviderNameIDNo      ST      `hl7:"4,display=Patient Primary Care Provider Name & Id No."`
	StudentIndicator                        *CWE    `hl7:"5,table=0231,display=Student Indicator"`
	Handicap                                *CWE    `hl7:"6,table=0295,display=Handicap"`
	LivingWillCode                          *CWE    `hl7:"7,table=0315,display=Living Will Code"`
	OrganDonorCode                          *CWE    `hl7:"8,table=0316,display=Organ Donor Code"`
	SeparateBill                            ID      `hl7:"9,len=1,table=0136,display=Separate Bill"`
	DuplicatePatient                        []CX    `hl7:"10,display=Duplicate Patient"`
	PublicityCode                           *CWE    `hl7:"11,table=0215,display=Publicity Code"`
	ProtectionIndicator                     ID      `hl7:"12,len=1,table=0136,display=Protection Indicator"`
	ProtectionIndicatorEffectiveDate        DT      `hl7:"13,format=YMD,display=Protection Indicator Effective Date"`
	PlaceOfWorship                          []XON   `hl7:"14,display=Place Of Worship"`
	AdvanceDirectiveCode                    []CWE   `hl7:"15,conditional,table=0435,display=Advance Directive Code"`
	ImmunizationRegistryStatus              *CWE    `hl7:"16,table=0441,display=Immunization Registry Status"`
	ImmunizationRegistryStatusEffectiveDate DT      `hl7:"17,format=YMD,display=Immunization Registry Status Effective Date"`
	PublicityCodeEffectiveDate              DT      `hl7:"18,format=YMD,display=Publicity Code Effective Date"`
	MilitaryBranch                          *CWE    `hl7:"19,table=0140,display=Military Branch"`
	MilitaryRankGrade                       *CWE    `hl7:"20,table=0141,display=Military Rank/Grade"`
	MilitaryStatus                          *CWE    `hl7:"21,table=0142,display=Military Status"`
	AdvanceDirectiveLastVerifiedDate        DT      `hl7:"22,format=YMD,display=Advance Directive Last Verified Date"`
}

// Patient Death And Autopsy
//
// This segment carries information on a patient's death and possible autopsy.
type PDA struct {
	HL7                            HL7Name `hl7:",name=PDA,type=s"`
	DeathCauseCode                 []CWE   `hl7:"1,display=Death Cause Code"`
	DeathLocation                  *PL     `hl7:"2,display=Death Location"`
	DeathCertifiedIndicator        ID      `hl7:"3,len=1,table=0136,display=Death Certified Indicator"`
	DeathCertificateSignedDateTime DTM     `hl7:"4,format=YMDHM,display=Death Certificate Signed Date/Time"`
	DeathCertifiedBy               *XCN    `hl7:"5,display=Death Certified By"`
	AutopsyIndicator               ID      `hl7:"6,len=1,table=0136,display=Autopsy Indicator"`
	AutopsyStartAndEndDateTime     *DR     `hl7:"7,display=Autopsy Start And End Date/Time"`
	AutopsyPerformedBy             *XCN    `hl7:"8,display=Autopsy Performed By"`
	CoronerIndicator               ID      `hl7:"9,len=1,table=0136,display=Coroner Indicator"`
}

// Product Experience Observation
//
// Details related to a particular clinical experience or event are embodied in the PEO segment. This segment can be used to
// characterize an event which might be attributed to a product to which the patient was exposed. Products with a possible
// causal relationship to the observed experience are described in the following PCR (possible causal relationship) segments.
// The message format was designed to be robust and includes many optional elements which may not be required for a particular
// regulatory purpose but allow a complete representation of the drug experience if needed.
//
// A PEX message can contain multiple PEO segments if the patient experienced more than one event but must contain at least
// one PEO segment.
type PEO struct {
	HL7                                   HL7Name `hl7:",name=PEO,type=s"`
	EventIdentifiersUsed                  []CWE   `hl7:"1,table=9999,display=Event Identifiers Used"`
	EventSymptomDiagnosisCode             []CWE   `hl7:"2,table=9999,display=Event Symptom/Diagnosis Code"`
	EventOnsetDateTime                    DTM     `hl7:"3,required,format=YMDHM,display=Event Onset Date/Time"`
	EventExacerbationDateTime             DTM     `hl7:"4,format=YMDHM,display=Event Exacerbation Date/Time"`
	EventImprovedDateTime                 DTM     `hl7:"5,format=YMDHM,display=Event Improved Date/Time"`
	EventEndedDataTime                    DTM     `hl7:"6,format=YMDHM,display=Event Ended Data/Time"`
	EventLocationOccurredAddress          []XAD   `hl7:"7,display=Event Location Occurred Address"`
	EventQualification                    []ID    `hl7:"8,len=1,table=0237,display=Event Qualification"`
	EventSerious                          ID      `hl7:"9,len=1,table=0238,display=Event Serious"`
	EventExpected                         ID      `hl7:"10,len=1,table=0239,display=Event Expected"`
	EventOutcome                          []ID    `hl7:"11,len=1,table=0240,display=Event Outcome"`
	PatientOutcome                        ID      `hl7:"12,len=1,table=0241,display=Patient Outcome"`
	EventDescriptionFromOthers            []FT    `hl7:"13,display=Event Description From Others"`
	EventDescriptionFromOriginalReporter  []FT    `hl7:"14,display=Event Description From Original Reporter"`
	EventDescriptionFromPatient           []FT    `hl7:"15,display=Event Description From Patient"`
	EventDescriptionFromPractitioner      []FT    `hl7:"16,display=Event Description From Practitioner"`
	EventDescriptionFromAutopsy           []FT    `hl7:"17,display=Event Description From Autopsy"`
	CauseOfDeath                          []CWE   `hl7:"18,table=9999,display=Cause Of Death"`
	PrimaryObserverName                   []XPN   `hl7:"19,display=Primary Observer Name"`
	PrimaryObserverAddress                []XAD   `hl7:"20,display=Primary Observer Address"`
	PrimaryObserverTelephone              []XTN   `hl7:"21,display=Primary Observer Telephone"`
	PrimaryObserversQualification         ID      `hl7:"22,len=1,table=0242,display=Primary Observer's Qualification"`
	ConfirmationProvidedBy                ID      `hl7:"23,len=1,table=0242,display=Confirmation Provided By"`
	PrimaryObserverAwareDateTime          DTM     `hl7:"24,format=YMDHM,display=Primary Observer Aware Date/Time"`
	PrimaryObserversIdentityMayBeDivulged ID      `hl7:"25,len=2,table=0243,display=Primary Observer's Identity May Be Divulged"`
}

// Product Experience Sender
type PES struct {
	HL7                    HL7Name `hl7:",name=PES,type=s"`
	SenderOrganizationName []XON   `hl7:"1,display=Sender Organization Name"`
	SenderIndividualName   []XCN   `hl7:"2,display=Sender Individual Name"`
	SenderAddress          []XAD   `hl7:"3,display=Sender Address"`
	SenderTelephone        []XTN   `hl7:"4,display=Sender Telephone"`
	SenderEventIdentifier  *EI     `hl7:"5,display=Sender Event Identifier"`
	SenderSequenceNumber   NM      `hl7:"6,display=Sender Sequence Number"`
	SenderEventDescription []FT    `hl7:"7,display=Sender Event Description"`
	SenderComment          FT      `hl7:"8,display=Sender Comment"`
	SenderAwareDateTime    DTM     `hl7:"9,format=YMDHM,display=Sender Aware Date/Time"`
	EventReportDate        DTM     `hl7:"10,required,format=YMDHM,display=Event Report Date"`
	EventReportTimingType  []ID    `hl7:"11,max=2,len=3,table=0234,display=Event Report Timing/Type"`
	EventReportSource      ID      `hl7:"12,len=1,table=0235,display=Event Report Source"`
	EventReportedTo        []ID    `hl7:"13,len=1,table=0236,display=Event Reported To"`
}

// Patient Identification
//
// The PID segment is used by all applications as the primary means of communicating patient identification information.
// This segment contains permanent patient identifying and demographic information that, for the most part, is not likely
// to change frequently.
//
// It should be noted that from V2.4 onwards the demographics of animals can also be sent in the PID segment (see PID-35 to PID-38).
//
// The assigning authority, the fourth component of the patient identifiers, is a HD data type that is uniquely associated
// with the assigning authority that originally assigned the number.  A given institution, or group of intercommunicating
// institutions, should establish a list of assigning authorities that may be potential assignors of patient identification
// (and other important identification) numbers.  The list will be one of the institution's master dictionary lists.  Since
// third parties (other than the assignors of patient identification numbers) may send or receive HL7 messages containing
// patient identification numbers, the assigning authority in the patient identification numbers may not be the same as
// the sending and receiving systems identified in the MSH.  The assigning authority must be unique across applications at
// a given site.  This field is required in HL7 implementations that have more than a single Patient Administration application
// assigning such numbers. The assigning authority and identifier type codes are strongly recommended for all CX data types.
//
// With HL7 V2.3, the nomenclature for the fourth component of the patient identifiers was changed from "assigning facility
// ID" to "assigning authority".  While the identifier may be unique to a given healthcare facility (for example, a medical
// record assigned by facility A in Hospital XYZ), the identifier might also be assigned at a system level (for example a corporate
// person index or enterprise number spanning multiple facilities) or by a government entity, for example a nationally assigned
// unique individual identifier.  While a facility is usually an assigning authority, not all assigning authorities are
// facilities.  Therefore, the fourth component is referred to as an assigning authority, but retains backward compatibility
// using the construct of the HD data type (see the note in chapter 2).  Additionally, CX data types support the use of assigning
// facility (HD) as the sixth component.
type PID struct {
	HL7                                 HL7Name `hl7:",name=PID,type=s"`
	SetID                               SI      `hl7:"1,seq,len=4,display=Set Id - Pid"`
	PatientID                           ST      `hl7:"2,display=Patient Id"`
	PatientIdentifierList               []CX    `hl7:"3,required,display=Patient Identifier List"`
	AlternatePatientID                  ST      `hl7:"4,display=Alternate Patient Id - Pid"`
	PatientName                         []XPN   `hl7:"5,required,display=Patient Name"`
	MothersMaidenName                   []XPN   `hl7:"6,display=Mother's Maiden Name"`
	DateTimeOfBirth                     DTM     `hl7:"7,format=YMDHM,display=Date/Time Of Birth"`
	AdministrativeSex                   *CWE    `hl7:"8,table=0001,display=Administrative Sex"`
	PatientAlias                        ST      `hl7:"9,display=Patient Alias"`
	Race                                []CWE   `hl7:"10,table=0005,display=Race"`
	PatientAddress                      []XAD   `hl7:"11,display=Patient Address"`
	CountyCode                          ST      `hl7:"12,display=County Code"`
	PhoneNumberHome                     []XTN   `hl7:"13,display=Phone Number - Home"`
	PhoneNumberBusiness                 []XTN   `hl7:"14,display=Phone Number - Business"`
	PrimaryLanguage                     *CWE    `hl7:"15,table=0296,display=Primary Language"`
	MaritalStatus                       *CWE    `hl7:"16,table=0002,display=Marital Status"`
	Religion                            *CWE    `hl7:"17,table=0006,display=Religion"`
	PatientAccountNumber                *CX     `hl7:"18,display=Patient Account Number"`
	SsnNumberPatient                    ST      `hl7:"19,display=Ssn Number - Patient"`
	DriversLicenseNumberPatient         ST      `hl7:"20,display=Driver's License Number - Patient"`
	MothersIdentifier                   []CX    `hl7:"21,display=Mother's Identifier"`
	EthnicGroup                         []CWE   `hl7:"22,table=0189,display=Ethnic Group"`
	BirthPlace                          ST      `hl7:"23,display=Birth Place"`
	MultipleBirthIndicator              ID      `hl7:"24,len=1,table=0136,display=Multiple Birth Indicator"`
	BirthOrder                          NM      `hl7:"25,display=Birth Order"`
	Citizenship                         []CWE   `hl7:"26,table=0171,display=Citizenship"`
	VeteransMilitaryStatus              *CWE    `hl7:"27,table=0172,display=Veterans Military Status"`
	Nationality                         ST      `hl7:"28,display=Nationality"`
	PatientDeathDateAndTime             DTM     `hl7:"29,format=YMDHM,display=Patient Death Date And Time"`
	PatientDeathIndicator               ID      `hl7:"30,len=1,table=0136,display=Patient Death Indicator"`
	IdentityUnknownIndicator            ID      `hl7:"31,len=1,table=0136,display=Identity Unknown Indicator"`
	IdentityReliabilityCode             []CWE   `hl7:"32,table=0445,display=Identity Reliability Code"`
	LastUpdateDateTime                  DTM     `hl7:"33,format=YMDHM,display=Last Update Date/Time"`
	LastUpdateFacility                  *HD     `hl7:"34,display=Last Update Facility"`
	TaxonomicClassificationCode         *CWE    `hl7:"35,conditional,table=0446,display=Taxonomic Classification Code"`
	BreedCode                           *CWE    `hl7:"36,conditional,table=0447,display=Breed Code"`
	Strain                              ST      `hl7:"37,display=Strain"`
	ProductionClassCode                 []CWE   `hl7:"38,max=2,table=0429,display=Production Class Code"`
	TribalCitizenship                   []CWE   `hl7:"39,table=0171,display=Tribal Citizenship"`
	PatientTelecommunicationInformation []XTN   `hl7:"40,display=Patient Telecommunication Information"`
}

// Item Packaging
//
// This segment contains the type of packaging available for the inventory supply item to be ordered and/or issued to a department
// or other supply location for a specified Purchasing Vendor.   It would be recommended to send this segment in descending
// unit of measure order corresponding with the ascending Set ID.
type PKG struct {
	HL7                                HL7Name `hl7:",name=PKG,type=s"`
	SetID                              SI      `hl7:"1,seq,required,len=4,display=Set Id - Pkg"`
	PackagingUnits                     *CWE    `hl7:"2,table=0818,display=Packaging Units"`
	DefaultOrderUnitOfMeasureIndicator *CNE    `hl7:"3,table=0532,display=Default Order Unit Of Measure Indicator"`
	PackageQuantity                    NM      `hl7:"4,display=Package Quantity"`
	Price                              *CP     `hl7:"5,display=Price"`
	FutureItemPrice                    *CP     `hl7:"6,display=Future Item Price"`
	FutureItemPriceEffectiveDate       DTM     `hl7:"7,format=YMDHM,display=Future Item Price Effective Date"`
	GlobalTradeItemNumber              *CWE    `hl7:"8,display=Global Trade Item Number"`
}

// Payment Information
//
// This segment contains information that describes a payment made by a Payer organization.
type PMT struct {
	HL7                                 HL7Name `hl7:",name=PMT,type=s"`
	PaymentRemittanceAdviceNumber       EI      `hl7:"1,required,display=Payment/Remittance Advice Number"`
	PaymentRemittanceEffectiveDateTime  DTM     `hl7:"2,required,format=YMDHM,display=Payment/Remittance Effective Date/Time"`
	PaymentRemittanceExpirationDateTime DTM     `hl7:"3,required,format=YMDHM,display=Payment/Remittance Expiration Date/Time"`
	PaymentMethod                       CWE     `hl7:"4,required,table=0570,display=Payment Method"`
	PaymentRemittanceDateTime           DTM     `hl7:"5,required,format=YMDHM,display=Payment/Remittance Date/Time"`
	PaymentRemittanceAmount             CP      `hl7:"6,required,display=Payment/Remittance Amount"`
	CheckNumber                         *EI     `hl7:"7,display=Check Number"`
	PayeeBankIdentification             *XON    `hl7:"8,display=Payee Bank Identification"`
	PayeeTransitNumber                  ST      `hl7:"9,display=Payee Transit Number"`
	PayeeBankAccountID                  *CX     `hl7:"10,display=Payee Bank Account Id"`
	PaymentOrganization                 XON     `hl7:"11,required,display=Payment Organization"`
	EsrCodeLine                         ST      `hl7:"12,display=Esr-code-line"`
}

// Procedures
//
// The PR1 segment contains information relative to various types of procedures that can be performed on a patient. The PR1
// segment can be used to send procedure information, for example: Surgical, Nuclear Medicine, X-ray with contrast, etc.
// The PR1 segment is used to send multiple procedures, for example, for medical records encoding or for billing systems.
type PR1 struct {
	HL7                             HL7Name `hl7:",name=PR1,type=s"`
	SetID                           SI      `hl7:"1,seq,required,len=4,display=Set Id - Pr1"`
	ProcedureCodingMethod           ST      `hl7:"2,display=Procedure Coding Method"`
	ProcedureCode                   CNE     `hl7:"3,required,table=0088,display=Procedure Code"`
	ProcedureDescription            ST      `hl7:"4,display=Procedure Description"`
	ProcedureDateTime               DTM     `hl7:"5,required,format=YMDHM,display=Procedure Date/Time"`
	ProcedureFunctionalType         *CWE    `hl7:"6,table=0230,display=Procedure Functional Type"`
	ProcedureMinutes                NM      `hl7:"7,display=Procedure Minutes"`
	Anesthesiologist                ST      `hl7:"8,display=Anesthesiologist"`
	AnesthesiaCode                  *CWE    `hl7:"9,table=0019,display=Anesthesia Code"`
	AnesthesiaMinutes               NM      `hl7:"10,display=Anesthesia Minutes"`
	Surgeon                         ST      `hl7:"11,display=Surgeon"`
	ProcedurePractitioner           ST      `hl7:"12,display=Procedure Practitioner"`
	ConsentCode                     *CWE    `hl7:"13,table=0059,display=Consent Code"`
	ProcedurePriority               NM      `hl7:"14,len=2,table=0418,display=Procedure Priority"`
	AssociatedDiagnosisCode         *CWE    `hl7:"15,table=0051,display=Associated Diagnosis Code"`
	ProcedureCodeModifier           []CNE   `hl7:"16,table=0340,display=Procedure Code Modifier"`
	ProcedureDrgType                *CWE    `hl7:"17,table=0416,display=Procedure Drg Type"`
	TissueTypeCode                  []CWE   `hl7:"18,table=0417,display=Tissue Type Code"`
	ProcedureIdentifier             *EI     `hl7:"19,conditional,display=Procedure Identifier"`
	ProcedureActionCode             ID      `hl7:"20,conditional,len=1,table=0206,display=Procedure Action Code"`
	DrgProcedureDeterminationStatus *CWE    `hl7:"21,table=0761,display=Drg Procedure Determination Status"`
	DrgProcedureRelevance           *CWE    `hl7:"22,table=0763,display=Drg Procedure Relevance"`
	TreatingOrganizationalUnit      []PL    `hl7:"23,display=Treating Organizational Unit"`
	RespiratoryWithinSurgery        ID      `hl7:"24,len=1,table=0136,display=Respiratory Within Surgery"`
	ParentProcedureID               *EI     `hl7:"25,display=Parent Procedure Id"`
}

// Practitioner Detail
//
// The PRA segment adds detailed medical practitioner information to the personnel identified by the STF segment.  A PRA segment
// may optionally follow an STF segment.  A PRA segment must always have been preceded by a corresponding STF segment.  The PRA
// segment may also be used for staff who work in healthcare who are not practitioners but need to be certified, e.g., "medical
// records staff."
type PRA struct {
	HL7                                       HL7Name `hl7:",name=PRA,type=s"`
	PrimaryKeyValue                           *CWE    `hl7:"1,conditional,table=9999,display=Primary Key Value - Pra"`
	PractitionerGroup                         []CWE   `hl7:"2,table=0358,display=Practitioner Group"`
	PractitionerCategory                      []CWE   `hl7:"3,table=0186,display=Practitioner Category"`
	ProviderBilling                           ID      `hl7:"4,len=1,table=0187,display=Provider Billing"`
	Specialty                                 []SPD   `hl7:"5,display=Specialty"`
	PractitionerIDNumbers                     []PLN   `hl7:"6,display=Practitioner Id Numbers"`
	Privileges                                []PIP   `hl7:"7,display=Privileges"`
	DateEnteredPractice                       DT      `hl7:"8,format=YMD,display=Date Entered Practice"`
	Institution                               *CWE    `hl7:"9,table=0537,display=Institution"`
	DateLeftPractice                          DT      `hl7:"10,format=YMD,display=Date Left Practice"`
	GovernmentReimbursementBillingEligibility []CWE   `hl7:"11,table=0401,display=Government Reimbursement Billing Eligibility"`
	SetID                                     SI      `hl7:"12,seq,conditional,len=4,display=Set Id - Pra"`
}

// Problem Details
//
// The problem detail segment contains the data necessary to add, update, correct, and delete the problems of a given individual.
type PRB struct {
	HL7                                               HL7Name `hl7:",name=PRB,type=s"`
	ActionCode                                        ID      `hl7:"1,required,len=2,table=0287,display=Action Code"`
	ActionDateTime                                    DTM     `hl7:"2,required,format=YMDHM,display=Action Date/Time"`
	ProblemID                                         CWE     `hl7:"3,required,display=Problem Id"`
	ProblemInstanceID                                 EI      `hl7:"4,required,display=Problem Instance Id"`
	EpisodeOfCareID                                   *EI     `hl7:"5,display=Episode Of Care Id"`
	ProblemListPriority                               NM      `hl7:"6,display=Problem List Priority"`
	ProblemEstablishedDateTime                        DTM     `hl7:"7,format=YMDHM,display=Problem Established Date/Time"`
	AnticipatedProblemResolutionDateTime              DTM     `hl7:"8,format=YMDHM,display=Anticipated Problem Resolution Date/Time"`
	ActualProblemResolutionDateTime                   DTM     `hl7:"9,format=YMDHM,display=Actual Problem Resolution Date/Time"`
	ProblemClassification                             *CWE    `hl7:"10,display=Problem Classification"`
	ProblemManagementDiscipline                       []CWE   `hl7:"11,display=Problem Management Discipline"`
	ProblemPersistence                                *CWE    `hl7:"12,display=Problem Persistence"`
	ProblemConfirmationStatus                         *CWE    `hl7:"13,display=Problem Confirmation Status"`
	ProblemLifeCycleStatus                            *CWE    `hl7:"14,display=Problem Life Cycle Status"`
	ProblemLifeCycleStatusDateTime                    DTM     `hl7:"15,format=YMDHM,display=Problem Life Cycle Status Date/Time"`
	ProblemDateOfOnset                                DTM     `hl7:"16,format=YMDHM,display=Problem Date Of Onset"`
	ProblemOnsetText                                  ST      `hl7:"17,display=Problem Onset Text"`
	ProblemRanking                                    *CWE    `hl7:"18,display=Problem Ranking"`
	CertaintyOfProblem                                *CWE    `hl7:"19,display=Certainty Of Problem"`
	ProbabilityOfProblem01                            NM      `hl7:"20,display=Probability Of Problem (0-1)"`
	IndividualAwarenessOfProblem                      *CWE    `hl7:"21,display=Individual Awareness Of Problem"`
	ProblemPrognosis                                  *CWE    `hl7:"22,display=Problem Prognosis"`
	IndividualAwarenessOfPrognosis                    *CWE    `hl7:"23,display=Individual Awareness Of Prognosis"`
	FamilySignificantOtherAwarenessOfProblemPrognosis ST      `hl7:"24,display=Family/Significant Other Awareness Of Problem/Prognosis"`
	SecuritySensitivity                               *CWE    `hl7:"25,display=Security/Sensitivity"`
	ProblemSeverity                                   *CWE    `hl7:"26,table=0836,display=Problem Severity"`
	ProblemPerspective                                *CWE    `hl7:"27,table=0838,display=Problem Perspective"`
	MoodCode                                          *CNE    `hl7:"28,conditional,table=0725,display=Mood Code"`
}

// Pricing
//
// The PRC segment contains the pricing information for the preceding CDM segment's chargeable item.  It contains the fields
// which, for the same chargeable item, might vary depending upon facility or department or patient type.  The preceding CDM
// segment contains the fields which, for one chargeable item, remain the same across facilities, departments, and patient
// types.
type PRC struct {
	HL7                 HL7Name `hl7:",name=PRC,type=s"`
	PrimaryKeyValue     CWE     `hl7:"1,required,table=0132,display=Primary Key Value - Prc"`
	FacilityID          []CWE   `hl7:"2,table=0464,display=Facility Id - Prc"`
	Department          []CWE   `hl7:"3,table=0184,display=Department"`
	ValidPatientClasses []CWE   `hl7:"4,table=0004,display=Valid Patient Classes"`
	Price               []CP    `hl7:"5,conditional,display=Price"`
	Formula             []ST    `hl7:"6,display=Formula"`
	MinimumQuantity     NM      `hl7:"7,display=Minimum Quantity"`
	MaximumQuantity     NM      `hl7:"8,display=Maximum Quantity"`
	MinimumPrice        *MO     `hl7:"9,display=Minimum Price"`
	MaximumPrice        *MO     `hl7:"10,display=Maximum Price"`
	EffectiveStartDate  DTM     `hl7:"11,format=YMDHM,display=Effective Start Date"`
	EffectiveEndDate    DTM     `hl7:"12,format=YMDHM,display=Effective End Date"`
	PriceOverrideFlag   *CWE    `hl7:"13,table=0268,display=Price Override Flag"`
	BillingCategory     []CWE   `hl7:"14,table=0293,display=Billing Category"`
	ChargeableFlag      ID      `hl7:"15,len=1,table=0136,display=Chargeable Flag"`
	ActiveInactiveFlag  ID      `hl7:"16,len=1,table=0183,display=Active/Inactive Flag"`
	Cost                *MO     `hl7:"17,display=Cost"`
	ChargeOnIndicator   *CWE    `hl7:"18,table=0269,display=Charge On Indicator"`
}

// Provider Data
//
// This segment will be employed as part of a patient referral message and its related transactions.  The PRD segment contains
// data specifically focused on a referral, and it is inter-enterprise in nature.  The justification for this new segment
// comes from the fact that we are dealing with referrals that are external to the facilities that received them.  Therefore,
// using a segment such as the current PV1 would be inadequate for all the return information that may be required by the receiving
// facility or application.  In addition, the PV1 does not always provide information sufficient to enable the external facility
// to make a complete identification of the referring entity.  The information contained in the PRD segment will include the
// referring provider, the referred to provider, the referred to location or service, and the referring provider clinic
// address.
type PRD struct {
	HL7                                          HL7Name `hl7:",name=PRD,type=s"`
	ProviderRole                                 []CWE   `hl7:"1,required,table=0286,display=Provider Role"`
	ProviderName                                 []XPN   `hl7:"2,display=Provider Name"`
	ProviderAddress                              []XAD   `hl7:"3,display=Provider Address"`
	ProviderLocation                             *PL     `hl7:"4,display=Provider Location"`
	ProviderCommunicationInformation             []XTN   `hl7:"5,display=Provider Communication Information"`
	PreferredMethodOfContact                     *CWE    `hl7:"6,table=0185,display=Preferred Method Of Contact"`
	ProviderIdentifiers                          []PLN   `hl7:"7,display=Provider Identifiers"`
	EffectiveStartDateOfProviderRole             DTM     `hl7:"8,format=YMDHM,display=Effective Start Date Of Provider Role"`
	EffectiveEndDateOfProviderRole               []DTM   `hl7:"9,format=YMDHM,display=Effective End Date Of Provider Role"`
	ProviderOrganizationNameAndIdentifier        *XON    `hl7:"10,display=Provider Organization Name And Identifier"`
	ProviderOrganizationAddress                  []XAD   `hl7:"11,display=Provider Organization Address"`
	ProviderOrganizationLocationInformation      []PL    `hl7:"12,display=Provider Organization Location Information"`
	ProviderOrganizationCommunicationInformation []XTN   `hl7:"13,display=Provider Organization Communication Information"`
	ProviderOrganizationMethodOfContact          *CWE    `hl7:"14,table=0185,display=Provider Organization Method Of Contact"`
}

// Participation Information
//
// The Participation Information segment contains the data necessary to add, update, correct, and delete from the record
// persons, organizations, or locations (participants) participating in the activity being transmitted.
//
// In general, the PRT segment is used to describe a participant playing a particular role within the context of the message.
// In OO, for example, in the results messages the PRT segment may be used to provide the performing provider, whether a person
// or organization. In a specimen shipment message it may be the waypoint location relevant for the shipment.
//
// The positional location of the PRT segment indicates the relationship. When the segment is used following the OBX segment,
// then the participations relate to the relevant participations in the result.
type PRT struct {
	HL7                                   HL7Name `hl7:",name=PRT,type=s"`
	ParticipationInstanceID               *EI     `hl7:"1,conditional,len=4,display=Participation Instance Id"`
	ActionCode                            ID      `hl7:"2,required,len=2,table=0287,display=Action Code"`
	ActionReason                          *CWE    `hl7:"3,display=Action Reason"`
	Participation                         CWE     `hl7:"4,required,table=0912,display=Participation"`
	ParticipationPerson                   []XCN   `hl7:"5,conditional,display=Participation Person"`
	ParticipationPersonProviderType       *CWE    `hl7:"6,conditional,display=Participation Person Provider Type"`
	ParticipantOrganizationUnitType       *CWE    `hl7:"7,conditional,table=0406,display=Participant Organization Unit Type"`
	ParticipationOrganization             []XON   `hl7:"8,conditional,display=Participation Organization"`
	ParticipantLocation                   []PL    `hl7:"9,conditional,display=Participant Location"`
	ParticipationDevice                   []EI    `hl7:"10,conditional,display=Participation Device"`
	ParticipationBeginDateTimeArrivalTime DTM     `hl7:"11,format=YMDHM,display=Participation Begin Date/Time (arrival Time)"`
	ParticipationEndDateTimeDepartureTime DTM     `hl7:"12,format=YMDHM,display=Participation End Date/Time (departure Time)"`
	ParticipationQualitativeDuration      *CWE    `hl7:"13,display=Participation Qualitative Duration"`
	ParticipationAddress                  []XAD   `hl7:"14,conditional,display=Participation Address"`
	ParticipantTelecommunicationAddress   []XTN   `hl7:"15,display=Participant Telecommunication Address"`
}

// Product/service Group
//
// The Product/Service Group segment is used to form a logical grouping of Product/Service Line Items, Patients and Response
// Summaries for a particular Invoice.  For example, a Product/Service Group can be used to group all Product/Service Line
// Items that must be adjudicated as a group in order to be paid.
type PSG struct {
	HL7                               HL7Name `hl7:",name=PSG,type=s"`
	ProviderProductServiceGroupNumber EI      `hl7:"1,required,display=Provider Product/Service Group Number"`
	PayerProductServiceGroupNumber    *EI     `hl7:"2,display=Payer Product/Service Group Number"`
	ProductServiceGroupSequenceNumber SI      `hl7:"3,required,len=4,display=Product/Service Group Sequence Number"`
	AdjudicateAsGroup                 ID      `hl7:"4,required,len=1,table=0136,display=Adjudicate As Group"`
	ProductServiceGroupBilledAmount   CP      `hl7:"5,required,display=Product/Service Group Billed Amount"`
	ProductServiceGroupDescription    ST      `hl7:"6,required,display=Product/Service Group Description"`
}

// Product/service Line Item
//
// The Product/Service Line Item segment is used to identify individual product/service items that typically are aggregated
// into an Invoice.  Each instance of a Product/Service Line Item corresponds to a unique product delivered or service rendered.
type PSL struct {
	HL7                                      HL7Name `hl7:",name=PSL,type=s"`
	ProviderProductServiceLineItemNumber     EI      `hl7:"1,required,display=Provider Product/Service Line Item Number"`
	PayerProductServiceLineItemNumber        *EI     `hl7:"2,display=Payer Product/Service Line Item Number"`
	ProductServiceLineItemSequenceNumber     SI      `hl7:"3,required,len=4,display=Product/Service Line Item Sequence Number"`
	ProviderTrackingID                       *EI     `hl7:"4,display=Provider Tracking Id"`
	PayerTrackingID                          *EI     `hl7:"5,display=Payer Tracking Id"`
	ProductServiceLineItemStatus             CWE     `hl7:"6,required,table=0559,display=Product/Service Line Item Status"`
	ProductServiceCode                       CWE     `hl7:"7,required,table=0879,display=Product/Service Code"`
	ProductServiceCodeModifier               []CWE   `hl7:"8,max=5,table=0880,display=Product/Service Code Modifier"`
	ProductServiceCodeDescription            ST      `hl7:"9,display=Product/Service Code Description"`
	ProductServiceEffectiveDate              DTM     `hl7:"10,conditional,format=YMDHM,display=Product/Service Effective Date"`
	ProductServiceExpirationDate             DTM     `hl7:"11,format=YMDHM,display=Product/Service Expiration Date"`
	ProductServiceQuantity                   *CQ     `hl7:"12,conditional,display=Product/Service Quantity"`
	ProductServiceUnitCost                   *CP     `hl7:"13,conditional,display=Product/Service Unit Cost"`
	NumberOfItemsPerUnit                     NM      `hl7:"14,conditional,display=Number Of Items Per Unit"`
	ProductServiceGrossAmount                *CP     `hl7:"15,conditional,display=Product/Service Gross Amount"`
	ProductServiceBilledAmount               *CP     `hl7:"16,conditional,display=Product/Service Billed Amount"`
	ProductServiceClarificationCodeType      []CWE   `hl7:"17,max=20,table=0561,display=Product/Service Clarification Code Type"`
	ProductServiceClarificationCodeValue     []ST    `hl7:"18,max=20,display=Product/Service Clarification Code Value"`
	HealthDocumentReferenceIdentifier        []EI    `hl7:"19,max=5,display=Health Document Reference Identifier"`
	ProcessingConsiderationCode              []CWE   `hl7:"20,max=20,table=0562,display=Processing Consideration Code"`
	RestrictedDisclosureIndicator            ID      `hl7:"21,required,len=4,table=0532,display=Restricted Disclosure Indicator"`
	RelatedProductServiceCodeIndicator       *CWE    `hl7:"22,table=0879,display=Related Product/Service Code Indicator"`
	ProductServiceAmountForPhysician         *CP     `hl7:"23,display=Product/Service Amount For Physician"`
	ProductServiceCostFactor                 NM      `hl7:"24,display=Product/Service Cost Factor"`
	CostCenter                               *CX     `hl7:"25,display=Cost Center"`
	BillingPeriod                            *DR     `hl7:"26,display=Billing Period"`
	DaysWithoutBilling                       NM      `hl7:"27,display=Days Without Billing"`
	SessionNo                                NM      `hl7:"28,len=4,display=Session-no"`
	ExecutingPhysicianID                     *XCN    `hl7:"29,display=Executing Physician Id"`
	ResponsiblePhysicianID                   *XCN    `hl7:"30,display=Responsible Physician Id"`
	RoleExecutingPhysician                   *CWE    `hl7:"31,table=0881,display=Role Executing Physician"`
	MedicalRoleExecutingPhysician            *CWE    `hl7:"32,table=0882,display=Medical Role Executing Physician"`
	SideOfBody                               *CWE    `hl7:"33,table=0894,display=Side Of Body"`
	NumberOfTpsPp                            NM      `hl7:"34,display=Number Of Tp's Pp"`
	TpValuePp                                *CP     `hl7:"35,display=Tp-value Pp"`
	InternalScalingFactorPp                  NM      `hl7:"36,display=Internal Scaling Factor Pp"`
	ExternalScalingFactorPp                  NM      `hl7:"37,display=External Scaling Factor Pp"`
	AmountPp                                 *CP     `hl7:"38,display=Amount Pp"`
	NumberOfTpsTechnicalPart                 NM      `hl7:"39,display=Number Of Tp's Technical Part"`
	TpValueTechnicalPart                     *CP     `hl7:"40,display=Tp-value Technical Part"`
	InternalScalingFactorTechnicalPart       NM      `hl7:"41,display=Internal Scaling Factor Technical Part"`
	ExternalScalingFactorTechnicalPart       NM      `hl7:"42,display=External Scaling Factor Technical Part"`
	AmountTechnicalPart                      *CP     `hl7:"43,display=Amount Technical Part"`
	TotalAmountProfessionalPartTechnicalPart *CP     `hl7:"44,display=Total Amount Professional Part + Technical Part"`
	VatRate                                  NM      `hl7:"45,display=Vat-rate"`
	MainService                              ID      `hl7:"46,len=20,display=Main-service"`
	Validation                               ID      `hl7:"47,len=1,table=0136,display=Validation"`
	Comment                                  ST      `hl7:"48,display=Comment"`
}

// Product/service Section
//
// The Product/Service Section segment is used to form a logical grouping of Product/Service Group segments, Patients and
// Response Summaries for a particular Invoice.
type PSS struct {
	HL7                                 HL7Name `hl7:",name=PSS,type=s"`
	ProviderProductServiceSectionNumber EI      `hl7:"1,required,display=Provider Product/Service Section Number"`
	PayerProductServiceSectionNumber    *EI     `hl7:"2,display=Payer Product/Service Section Number"`
	ProductServiceSectionSequenceNumber SI      `hl7:"3,required,len=4,display=Product/Service Section Sequence Number"`
	BilledAmount                        CP      `hl7:"4,required,display=Billed Amount"`
	SectionDescriptionOrHeading         ST      `hl7:"5,required,display=Section Description Or Heading"`
}

// Pathway
//
// The pathway segment contains the data necessary to add, update, correct, and delete from the record pathways that are utilized
// to address an individual's health care.
type PTH struct {
	HL7                                  HL7Name `hl7:",name=PTH,type=s"`
	ActionCode                           ID      `hl7:"1,required,len=2,table=0287,display=Action Code"`
	PathwayID                            CWE     `hl7:"2,required,display=Pathway Id"`
	PathwayInstanceID                    EI      `hl7:"3,required,display=Pathway Instance Id"`
	PathwayEstablishedDateTime           DTM     `hl7:"4,required,format=YMDHM,display=Pathway Established Date/Time"`
	PathwayLifeCycleStatus               *CWE    `hl7:"5,display=Pathway Life Cycle Status"`
	ChangePathwayLifeCycleStatusDateTime DTM     `hl7:"6,conditional,format=YMDHM,display=Change Pathway Life Cycle Status Date/Time"`
	MoodCode                             *CNE    `hl7:"7,conditional,table=0725,display=Mood Code"`
}

// Patient Visit
//
// The PV1 segment is used by Registration/Patient Administration applications to communicate information on an account
// or visit-specific basis. The default is to send account level data. To use this segment for visit level data PV1-51 - Visit
// Indicator must be valued to "V". The value of PV-51 affects the level of data being sent on the PV1, PV2, and any other segments
// that are part of the associated PV1 hierarchy (e.g., ROL, DG1, or OBX).
//
// The facility ID, the optional fourth component of each patient location field, is a HD data type that is uniquely associated
// with the healthcare facility containing the location. A given institution, or group of intercommunicating institutions,
// should establish a list of facilities that may be potential assignors of patient locations. The list will be one of the institution's
// master dictionary lists. Since third parties other than the assignors of patient locations may send or receive HL7 messages
// containing patient locations, the facility ID in the patient location may not be the same as that implied by the sending
// and receiving systems identified in the MSH. The facility ID must be unique across facilities at a given site. This field
// is required for HL7 implementations that have more than a single healthcare facility with bed locations, since the same
// <point of care> ^ <room> ^ <bed> combination may exist at more than one facility.
type PV1 struct {
	HL7                       HL7Name `hl7:",name=PV1,type=s"`
	SetID                     SI      `hl7:"1,seq,len=4,display=Set Id - Pv1"`
	PatientClass              CWE     `hl7:"2,required,table=0004,display=Patient Class"`
	AssignedPatientLocation   *PL     `hl7:"3,display=Assigned Patient Location"`
	AdmissionType             *CWE    `hl7:"4,table=0007,display=Admission Type"`
	PreadmitNumber            *CX     `hl7:"5,display=Preadmit Number"`
	PriorPatientLocation      *PL     `hl7:"6,display=Prior Patient Location"`
	AttendingDoctor           []XCN   `hl7:"7,table=0010,display=Attending Doctor"`
	ReferringDoctor           []XCN   `hl7:"8,table=0010,display=Referring Doctor"`
	ConsultingDoctor          []XCN   `hl7:"9,display=Consulting Doctor"`
	HospitalService           *CWE    `hl7:"10,table=0069,display=Hospital Service"`
	TemporaryLocation         *PL     `hl7:"11,display=Temporary Location"`
	PreadmitTestIndicator     *CWE    `hl7:"12,table=0087,display=Preadmit Test Indicator"`
	ReAdmissionIndicator      *CWE    `hl7:"13,table=0092,display=Re-admission Indicator"`
	AdmitSource               *CWE    `hl7:"14,table=0023,display=Admit Source"`
	AmbulatoryStatus          []CWE   `hl7:"15,table=0009,display=Ambulatory Status"`
	VipIndicator              *CWE    `hl7:"16,table=0099,display=Vip Indicator"`
	AdmittingDoctor           []XCN   `hl7:"17,table=0010,display=Admitting Doctor"`
	PatientType               *CWE    `hl7:"18,table=0018,display=Patient Type"`
	VisitNumber               *CX     `hl7:"19,display=Visit Number"`
	FinancialClass            []FC    `hl7:"20,display=Financial Class"`
	ChargePriceIndicator      *CWE    `hl7:"21,table=0032,display=Charge Price Indicator"`
	CourtesyCode              *CWE    `hl7:"22,table=0045,display=Courtesy Code"`
	CreditRating              *CWE    `hl7:"23,table=0046,display=Credit Rating"`
	ContractCode              []CWE   `hl7:"24,table=0044,display=Contract Code"`
	ContractEffectiveDate     []DT    `hl7:"25,format=YMD,display=Contract Effective Date"`
	ContractAmount            []NM    `hl7:"26,display=Contract Amount"`
	ContractPeriod            []NM    `hl7:"27,display=Contract Period"`
	InterestCode              *CWE    `hl7:"28,table=0073,display=Interest Code"`
	TransferToBadDebtCode     *CWE    `hl7:"29,table=0110,display=Transfer To Bad Debt Code"`
	TransferToBadDebtDate     DT      `hl7:"30,format=YMD,display=Transfer To Bad Debt Date"`
	BadDebtAgencyCode         *CWE    `hl7:"31,table=0021,display=Bad Debt Agency Code"`
	BadDebtTransferAmount     NM      `hl7:"32,display=Bad Debt Transfer Amount"`
	BadDebtRecoveryAmount     NM      `hl7:"33,display=Bad Debt Recovery Amount"`
	DeleteAccountIndicator    *CWE    `hl7:"34,table=0111,display=Delete Account Indicator"`
	DeleteAccountDate         DT      `hl7:"35,format=YMD,display=Delete Account Date"`
	DischargeDisposition      *CWE    `hl7:"36,table=0112,display=Discharge Disposition"`
	DischargedToLocation      *DLD    `hl7:"37,display=Discharged To Location"`
	DietType                  *CWE    `hl7:"38,table=0114,display=Diet Type"`
	ServicingFacility         *CWE    `hl7:"39,table=0115,display=Servicing Facility"`
	BedStatus                 ST      `hl7:"40,display=Bed Status"`
	AccountStatus             *CWE    `hl7:"41,table=0117,display=Account Status"`
	PendingLocation           *PL     `hl7:"42,display=Pending Location"`
	PriorTemporaryLocation    *PL     `hl7:"43,display=Prior Temporary Location"`
	AdmitDateTime             DTM     `hl7:"44,format=YMDHM,display=Admit Date/Time"`
	DischargeDateTime         DTM     `hl7:"45,format=YMDHM,display=Discharge Date/Time"`
	CurrentPatientBalance     NM      `hl7:"46,display=Current Patient Balance"`
	TotalCharges              NM      `hl7:"47,display=Total Charges"`
	TotalAdjustments          NM      `hl7:"48,display=Total Adjustments"`
	TotalPayments             NM      `hl7:"49,display=Total Payments"`
	AlternateVisitID          *CX     `hl7:"50,display=Alternate Visit Id"`
	VisitIndicator            *CWE    `hl7:"51,table=0326,display=Visit Indicator"`
	OtherHealthcareProvider   ST      `hl7:"52,display=Other Healthcare Provider"`
	ServiceEpisodeDescription ST      `hl7:"53,display=Service Episode Description"`
	ServiceEpisodeIdentifier  *CX     `hl7:"54,display=Service Episode Identifier"`
}

// Patient Visit - Additional Information
//
// The PV2 segment is a continuation of information contained on the PV1 segment.
type PV2 struct {
	HL7                                 HL7Name `hl7:",name=PV2,type=s"`
	PriorPendingLocation                *PL     `hl7:"1,conditional,display=Prior Pending Location"`
	AccommodationCode                   *CWE    `hl7:"2,table=0129,display=Accommodation Code"`
	AdmitReason                         *CWE    `hl7:"3,display=Admit Reason"`
	TransferReason                      *CWE    `hl7:"4,display=Transfer Reason"`
	PatientValuables                    []ST    `hl7:"5,display=Patient Valuables"`
	PatientValuablesLocation            ST      `hl7:"6,display=Patient Valuables Location"`
	VisitUserCode                       []CWE   `hl7:"7,table=0130,display=Visit User Code"`
	ExpectedAdmitDateTime               DTM     `hl7:"8,format=YMDHM,display=Expected Admit Date/Time"`
	ExpectedDischargeDateTime           DTM     `hl7:"9,format=YMDHM,display=Expected Discharge Date/Time"`
	EstimatedLengthOfInpatientStay      NM      `hl7:"10,display=Estimated Length Of Inpatient Stay"`
	ActualLengthOfInpatientStay         NM      `hl7:"11,display=Actual Length Of Inpatient Stay"`
	VisitDescription                    ST      `hl7:"12,display=Visit Description"`
	ReferralSourceCode                  []XCN   `hl7:"13,display=Referral Source Code"`
	PreviousServiceDate                 DT      `hl7:"14,format=YMD,display=Previous Service Date"`
	EmploymentIllnessRelatedIndicator   ID      `hl7:"15,len=1,table=0136,display=Employment Illness Related Indicator"`
	PurgeStatusCode                     *CWE    `hl7:"16,table=0213,display=Purge Status Code"`
	PurgeStatusDate                     DT      `hl7:"17,format=YMD,display=Purge Status Date"`
	SpecialProgramCode                  *CWE    `hl7:"18,table=0214,display=Special Program Code"`
	RetentionIndicator                  ID      `hl7:"19,len=1,table=0136,display=Retention Indicator"`
	ExpectedNumberOfInsurancePlans      NM      `hl7:"20,display=Expected Number Of Insurance Plans"`
	VisitPublicityCode                  *CWE    `hl7:"21,table=0215,display=Visit Publicity Code"`
	VisitProtectionIndicator            ID      `hl7:"22,len=1,table=0136,display=Visit Protection Indicator"`
	ClinicOrganizationName              []XON   `hl7:"23,display=Clinic Organization Name"`
	PatientStatusCode                   *CWE    `hl7:"24,table=0216,display=Patient Status Code"`
	VisitPriorityCode                   *CWE    `hl7:"25,table=0217,display=Visit Priority Code"`
	PreviousTreatmentDate               DT      `hl7:"26,format=YMD,display=Previous Treatment Date"`
	ExpectedDischargeDisposition        *CWE    `hl7:"27,table=0112,display=Expected Discharge Disposition"`
	SignatureOnFileDate                 DT      `hl7:"28,format=YMD,display=Signature On File Date"`
	FirstSimilarIllnessDate             DT      `hl7:"29,format=YMD,display=First Similar Illness Date"`
	PatientChargeAdjustmentCode         *CWE    `hl7:"30,table=0218,display=Patient Charge Adjustment Code"`
	RecurringServiceCode                *CWE    `hl7:"31,table=0219,display=Recurring Service Code"`
	BillingMediaCode                    ID      `hl7:"32,len=1,table=0136,display=Billing Media Code"`
	ExpectedSurgeryDateAndTime          DTM     `hl7:"33,format=YMDHM,display=Expected Surgery Date And Time"`
	MilitaryPartnershipCode             ID      `hl7:"34,len=1,table=0136,display=Military Partnership Code"`
	MilitaryNonAvailabilityCode         ID      `hl7:"35,len=1,table=0136,display=Military Non-availability Code"`
	NewbornBabyIndicator                ID      `hl7:"36,len=1,table=0136,display=Newborn Baby Indicator"`
	BabyDetainedIndicator               ID      `hl7:"37,len=1,table=0136,display=Baby Detained Indicator"`
	ModeOfArrivalCode                   *CWE    `hl7:"38,table=0430,display=Mode Of Arrival Code"`
	RecreationalDrugUseCode             []CWE   `hl7:"39,table=0431,display=Recreational Drug Use Code"`
	AdmissionLevelOfCareCode            *CWE    `hl7:"40,table=0432,display=Admission Level Of Care Code"`
	PrecautionCode                      []CWE   `hl7:"41,table=0433,display=Precaution Code"`
	PatientConditionCode                *CWE    `hl7:"42,table=0434,display=Patient Condition Code"`
	LivingWillCode                      *CWE    `hl7:"43,table=0315,display=Living Will Code"`
	OrganDonorCode                      *CWE    `hl7:"44,table=0316,display=Organ Donor Code"`
	AdvanceDirectiveCode                []CWE   `hl7:"45,conditional,table=0435,display=Advance Directive Code"`
	PatientStatusEffectiveDate          DT      `hl7:"46,format=YMD,display=Patient Status Effective Date"`
	ExpectedLoaReturnDateTime           DTM     `hl7:"47,conditional,format=YMDHM,display=Expected Loa Return Date/Time"`
	ExpectedPreAdmissionTestingDateTime DTM     `hl7:"48,format=YMDHM,display=Expected Pre-admission Testing Date/Time"`
	NotifyClergyCode                    []CWE   `hl7:"49,table=0534,display=Notify Clergy Code"`
	AdvanceDirectiveLastVerifiedDate    DT      `hl7:"50,format=YMD,display=Advance Directive Last Verified Date"`
}

// Payee Information
//
// This segment is used to define payee information.
type PYE struct {
	HL7                               HL7Name `hl7:",name=PYE,type=s"`
	SetID                             SI      `hl7:"1,seq,required,len=4,display=Set Id - Pye"`
	PayeeType                         CWE     `hl7:"2,required,table=0557,display=Payee Type"`
	PayeeRelationshipToInvoicePatient *CWE    `hl7:"3,conditional,table=0558,display=Payee Relationship To Invoice (patient)"`
	PayeeIdentificationList           *XON    `hl7:"4,conditional,display=Payee Identification List"`
	PayeePersonName                   *XPN    `hl7:"5,conditional,display=Payee Person Name"`
	PayeeAddress                      *XAD    `hl7:"6,conditional,display=Payee Address"`
	PaymentMethod                     *CWE    `hl7:"7,table=0570,display=Payment Method"`
}

// Query Acknowledgment
//
// The QAK segment contains information sent with responses to a query.  The QAK segment may appear as an optional segment placed
// after the (optional) ERR segment in any query response (message) to any original mode query
type QAK struct {
	HL7                 HL7Name `hl7:",name=QAK,type=s"`
	QueryTag            ST      `hl7:"1,conditional,display=Query Tag"`
	QueryResponseStatus ID      `hl7:"2,len=2,table=0208,display=Query Response Status"`
	MessageQueryName    *CWE    `hl7:"3,table=0471,display=Message Query Name"`
	HitCountTotal       NM      `hl7:"4,display=Hit Count Total"`
	ThisPayload         NM      `hl7:"5,display=This Payload"`
	HitsRemaining       NM      `hl7:"6,display=Hits Remaining"`
}

// Query Identification
//
// The QID segment contains the information necessary to uniquely identify a query. Its primary use is in query cancellation
// or subscription cancellation
type QID struct {
	HL7              HL7Name `hl7:",name=QID,type=s"`
	QueryTag         ST      `hl7:"1,required,display=Query Tag"`
	MessageQueryName CWE     `hl7:"2,required,table=0471,display=Message Query Name"`
}

// Query Parameter Definition
//
// The QPD segment defines the parameters of the query
type QPD struct {
	HL7                              HL7Name `hl7:",name=QPD,type=s"`
	MessageQueryName                 CWE     `hl7:"1,required,table=0471,display=Message Query Name"`
	QueryTag                         ST      `hl7:"2,conditional,display=Query Tag"`
	UserParametersInSuccessiveFields varies  `hl7:"3,display=User Parameters (in Successive Fields)"`
}

// Withdrawn
type QRD struct {
	HL7   HL7Name `hl7:",name=QRD,type=s"`
	Value ST      `hl7:"1,display=QRD.1"`
}

// Withdrawn
type QRF struct {
	HL7   HL7Name `hl7:",name=QRF,type=s"`
	Value ST      `hl7:"1,display=QRF.1"`
}

// Query Response Instance
//
// The QRI segment is used to indicate the weight match for a returned record (where the responding system employs a numeric
// algorithm) and/or the match reason code (where the responding system uses rules or other match options).
//
// Examples of the use of this segment appear in Chapter 3, "Patient Administration," section 3.3.57, "Find Candidates and
// Response."
type QRI struct {
	HL7                 HL7Name `hl7:",name=QRI,type=s"`
	CandidateConfidence NM      `hl7:"1,display=Candidate Confidence"`
	MatchReasonCode     []CWE   `hl7:"2,len=2,table=0392,display=Match Reason Code"`
	AlgorithmDescriptor *CWE    `hl7:"3,table=0393,display=Algorithm Descriptor"`
}

// Response Control Parameter
//
// The RCP segment is used to restrict the amount of data that should be returned in response to query.
type RCP struct {
	HL7                      HL7Name `hl7:",name=RCP,type=s"`
	QueryPriority            ID      `hl7:"1,len=1,table=0091,display=Query Priority"`
	QuantityLimitedRequest   *CQ     `hl7:"2,display=Quantity Limited Request"`
	ResponseModality         *CNE    `hl7:"3,table=0394,display=Response Modality"`
	ExecutionAndDeliveryTime DTM     `hl7:"4,conditional,format=YMDHM,display=Execution And Delivery Time"`
	ModifyIndicator          ID      `hl7:"5,len=1,table=0395,display=Modify Indicator"`
	SortByField              []SRT   `hl7:"6,display=Sort-by Field"`
	SegmentGroupInclusion    []ID    `hl7:"7,len=256,table=0391,display=Segment Group Inclusion"`
}

// Table Row Definition
//
// The RDF segment defines the content of the row data segments (RDT) in the tabular response (RTB).
//
// - As an optional segment in a query either a QBP or QBS, this segment can be used to limit the number of columns returned and
// to specify what column positions the fields occupy (where supported, these features can be used to override the defaults
// for the particular query).  If omitted, all fields defined for the query are returned in their default column order.
//
// - As a required segment in a tabular response (RTB) to either a QBP or QBS, this segment defines the contents of the table row
// data (RDT) segments that follows. It is not necessarily an echo back of the segment as it appeared in the query.
type RDF struct {
	HL7                   HL7Name `hl7:",name=RDF,type=s"`
	NumberOfColumnsPerRow NM      `hl7:"1,required,display=Number Of Columns Per Row"`
	ColumnDescription     []RCD   `hl7:"2,required,display=Column Description"`
}

// Table Row Data
//
// The RDT segment contains the row data of the tabular data response message (TBR).
type RDT struct {
	HL7         HL7Name `hl7:",name=RDT,type=s"`
	ColumnValue varies  `hl7:"1,required,display=Column Value"`
}

// Clinical Relationship Segment
//
// The Clinical Relationship segment contains the data necessary to relate two data elements within and/or external to the
// message at run-time. It also includes information about the relationship.
//
// Relationships are constrained to being between explicit segments of messages rather than beween the identities of entities
// they reference. Segments are available within the message but related persistent information may not be.  Because of the
// transient nature of messages applications must manage the associations with entities which persist outside or across
// messages.
// Examples:
// - Problem is a consequence of a diagnosis.
// - Diagnosis is supported by observation.
// - Observation is a manifestation of a diagnosis.
// - Complication is a consequence of a procedure.
type REL struct {
	HL7                                          HL7Name `hl7:",name=REL,type=s"`
	SetID                                        SI      `hl7:"1,seq,conditional,len=4,display=Set Id -rel"`
	RelationshipType                             CWE     `hl7:"2,required,display=Relationship Type"`
	ThisRelationshipInstanceIdentifier           EI      `hl7:"3,required,display=This Relationship Instance Identifier"`
	SourceInformationInstanceIdentifier          EI      `hl7:"4,required,display=Source Information Instance Identifier"`
	TargetInformationInstanceIdentifier          EI      `hl7:"5,required,display=Target Information Instance Identifier"`
	AssertingEntityInstanceID                    *EI     `hl7:"6,display=Asserting Entity Instance Id"`
	AssertingPerson                              *XCN    `hl7:"7,display=Asserting Person"`
	AssertingOrganization                        *XON    `hl7:"8,display=Asserting Organization"`
	AssertorAddress                              *XAD    `hl7:"9,display=Assertor Address"`
	AssertorContact                              *XTN    `hl7:"10,display=Assertor Contact"`
	AssertionDateRange                           *DR     `hl7:"11,display=Assertion Date Range"`
	NegationIndicator                            ID      `hl7:"12,len=1,table=0136,display=Negation Indicator"`
	CertaintyOfRelationship                      *CWE    `hl7:"13,display=Certainty Of Relationship"`
	PriorityNo                                   NM      `hl7:"14,display=Priority No"`
	PrioritySequenceNoPreferenceForConsideration NM      `hl7:"15,display=Priority  Sequence No (rel Preference For Consideration)"`
	SeparabilityIndicator                        ID      `hl7:"16,len=1,table=0136,display=Separability Indicator"`
}

// Referral Information
//
// This segment represents information that may be useful when sending referrals from the referring provider to the referred-to
// provider.
type RF1 struct {
	HL7                                   HL7Name `hl7:",name=RF1,type=s"`
	ReferralStatus                        *CWE    `hl7:"1,table=0283,display=Referral Status"`
	ReferralPriority                      *CWE    `hl7:"2,table=0280,display=Referral Priority"`
	ReferralType                          *CWE    `hl7:"3,table=0281,display=Referral Type"`
	ReferralDisposition                   []CWE   `hl7:"4,table=0282,display=Referral Disposition"`
	ReferralCategory                      *CWE    `hl7:"5,table=0284,display=Referral Category"`
	OriginatingReferralIdentifier         EI      `hl7:"6,required,display=Originating Referral Identifier"`
	EffectiveDate                         DTM     `hl7:"7,format=YMDHM,display=Effective Date"`
	ExpirationDate                        DTM     `hl7:"8,format=YMDHM,display=Expiration Date"`
	ProcessDate                           DTM     `hl7:"9,format=YMDHM,display=Process Date"`
	ReferralReason                        []CWE   `hl7:"10,table=0336,display=Referral Reason"`
	ExternalReferralIdentifier            []EI    `hl7:"11,display=External Referral Identifier"`
	ReferralDocumentationCompletionStatus *CWE    `hl7:"12,table=0865,display=Referral Documentation Completion Status"`
	PlannedTreatmentStopDate              DTM     `hl7:"13,len=24,format=YMDHM,display=Planned Treatment Stop Date"`
	ReferralReasonText                    ST      `hl7:"14,len=60,display=Referral Reason Text"`
	NumberOfAuthorizedTreatmentsUnits     *CQ     `hl7:"15,len=721,display=Number of Authorized Treatments/Units"`
	NumberOfUsedTreatmentsUnits           *CQ     `hl7:"16,len=721,display=Number of Used Treatments/Units"`
	NumberOfScheduleTreatmentsUnits       *CQ     `hl7:"17,len=721,display=Number of Schedule Treatments/Units"`
	RemainingBenefitAmount                *MO     `hl7:"18,len=20,display=Remaining Benefit Amount"`
	AuthorizedProvider                    *XON    `hl7:"19,len=250,display=Authorized Provider"`
	AuthorizedHealthProfessional          *XCN    `hl7:"20,len=250,display=Authorized Health Professional"`
	SourceText                            ST      `hl7:"21,len=60,display=Source Text"`
	SourceDate                            DTM     `hl7:"22,len=24,format=YMDHM,display=Source Date"`
	SourcePhone                           *XTN    `hl7:"23,len=250,display=Source Phone"`
	Comment                               ST      `hl7:"24,len=250,display=Comment"`
	ActionCode                            ID      `hl7:"25,len=1,table=0206,display=Action Code"`
}

// Request For Information
type RFI struct {
	HL7                                   HL7Name `hl7:",name=RFI,type=s"`
	RequestDate                           DTM     `hl7:"1,required,format=YMDHM,display=Request Date"`
	ResponseDueDate                       DTM     `hl7:"2,required,format=YMDHM,display=Response Due Date"`
	PatientConsent                        ID      `hl7:"3,len=1,table=0136,display=Patient Consent"`
	DateAdditionalInformationWasSubmitted DTM     `hl7:"4,format=YMDHM,display=Date Additional Information Was Submitted"`
}

// Resource Group
//
// The RGS segment is used to identify relationships between resources identified for a scheduled event.  This segment can
// be used, on a site specified basis, to identify groups of resources that are used together within a scheduled event, or to
// describe some other relationship between resources.  To specify related groups of resources within a message, begin each
// group with an RGS segment, and then follow that RGS with one or more of the Appointment Information segments (AIG, AIL, AIS,
// or AIP).
//
// If a message does not require any grouping of resources, then specify a single RGS in the message, and follow it with all of
// the Appointment Information segments for the scheduled event.   (At least one RGS segment is required in each message – even
// if no grouping of resources is required – to allow parsers to properly understand the message.)
type RGS struct {
	HL7               HL7Name `hl7:",name=RGS,type=s"`
	SetID             SI      `hl7:"1,seq,required,len=4,display=Set Id - Rgs"`
	SegmentActionCode ID      `hl7:"2,conditional,len=1,table=0206,display=Segment Action Code"`
	ResourceGroupID   *CWE    `hl7:"3,display=Resource Group Id"`
}

// Risk Management Incident
//
// The RMI segment is used to report an occurrence of an incident event pertaining or attaching to a patient encounter.
type RMI struct {
	HL7                        HL7Name `hl7:",name=RMI,type=s"`
	RiskManagementIncidentCode *CWE    `hl7:"1,table=0427,display=Risk Management Incident Code"`
	DateTimeIncident           DTM     `hl7:"2,format=YMDHM,display=Date/Time Incident"`
	IncidentTypeCode           *CWE    `hl7:"3,table=0428,display=Incident Type Code"`
}

// Role
//
// The role segment contains the data necessary to add, update, correct, and delete from the record persons involved, as well
// as their functional involvement with the activity being transmitted.
//
// In general, the ROL segment is used to describe a person playing a particular role within the context of the message.  In PM,
// for example, in the Grant Certificate/Permission message (B07), the ROL segment is used to describe the roles a person
// may perform pertinent to the certificate in the message.
//
// The positional location of the ROL segment in ADT and Finance messages indicates the relationship.  When the segment is
// used following the IN3 segment, and the role-ROL value is PP or FHCP, the PP or FHCP is related to the health plan.  When the
// segment is used following the PID segment, and the role-ROL value is PP or FHCP, the PP or FHCP is related to the person.  When
// the segment is used following the PV2 segment, and the role-ROL value is PCP or FHCP, the PP or FHCP is related to the patient
// visit.
type ROL struct {
	HL7                         HL7Name `hl7:",name=ROL,type=s"`
	RoleInstanceID              *EI     `hl7:"1,conditional,display=Role Instance Id"`
	ActionCode                  ID      `hl7:"2,required,len=2,table=0287,display=Action Code"`
	Role                        CWE     `hl7:"3,required,table=0443,display=Role-rol"`
	RolePerson                  []XCN   `hl7:"4,required,display=Role Person"`
	RoleBeginDateTime           DTM     `hl7:"5,format=YMDHM,display=Role Begin Date/Time"`
	RoleEndDateTime             DTM     `hl7:"6,format=YMDHM,display=Role End Date/Time"`
	RoleDuration                *CWE    `hl7:"7,display=Role Duration"`
	RoleActionReason            *CWE    `hl7:"8,display=Role Action Reason"`
	ProviderType                []CWE   `hl7:"9,display=Provider Type"`
	OrganizationUnitType        *CWE    `hl7:"10,table=0406,display=Organization Unit Type"`
	OfficeHomeAddressBirthplace []XAD   `hl7:"11,display=Office/Home Address/Birthplace"`
	Phone                       []XTN   `hl7:"12,display=Phone"`
	PersonsLocation             *PL     `hl7:"13,display=Person's Location"`
	Organization                *XON    `hl7:"14,display=Organization"`
}

// Requisition Detail-1
//
// RQ1 contains additional detail for each non-stock requisitioned item. This segment definition is paired with a preceding
// RQD segment.
type RQ1 struct {
	HL7                    HL7Name `hl7:",name=RQ1,type=s"`
	AnticipatedPrice       ST      `hl7:"1,display=Anticipated Price"`
	ManufacturerIdentifier *CWE    `hl7:"2,conditional,table=0385,display=Manufacturer Identifier"`
	ManufacturersCatalog   ST      `hl7:"3,conditional,display=Manufacturer's Catalog"`
	VendorID               *CWE    `hl7:"4,conditional,table=9999,display=Vendor Id"`
	VendorCatalog          ST      `hl7:"5,conditional,display=Vendor Catalog"`
	Taxable                ID      `hl7:"6,len=1,table=0136,display=Taxable"`
	SubstituteAllowed      ID      `hl7:"7,len=1,table=0136,display=Substitute Allowed"`
}

// Requisition Detail
//
// RQD contains the detail for each requisitioned item.
type RQD struct {
	HL7                      HL7Name `hl7:",name=RQD,type=s"`
	RequisitionLineNumber    SI      `hl7:"1,len=4,display=Requisition Line Number"`
	ItemCodeInternal         *CWE    `hl7:"2,conditional,table=9999,display=Item Code - Internal"`
	ItemCodeExternal         *CWE    `hl7:"3,conditional,table=9999,display=Item Code - External"`
	HospitalItemCode         *CWE    `hl7:"4,conditional,table=9999,display=Hospital Item Code"`
	RequisitionQuantity      NM      `hl7:"5,display=Requisition Quantity"`
	RequisitionUnitOfMeasure *CWE    `hl7:"6,table=9999,display=Requisition Unit Of Measure"`
	CostCenterAccountNumber  *CX     `hl7:"7,table=0319,display=Cost Center Account Number"`
	ItemNaturalAccountCode   *CWE    `hl7:"8,table=0320,display=Item Natural Account Code"`
	DeliverToID              *CWE    `hl7:"9,table=9999,display=Deliver To Id"`
	DateNeeded               DT      `hl7:"10,format=YMD,display=Date Needed"`
}

// Pharmacy/treatment Administration
//
// The ORC must have the filler order number and the order control code RE. As a site-specific variant, the RXO and associated
// RXCs and/or the RXE (and associated RXCs) may be present if the receiving application needs any of their data. The RXA carries
// the administration data.
type RXA struct {
	HL7                                 HL7Name `hl7:",name=RXA,type=s"`
	GiveSubIDCounter                    NM      `hl7:"1,required,display=Give Sub-id Counter"`
	AdministrationSubIDCounter          NM      `hl7:"2,required,display=Administration Sub-id Counter"`
	DateTimeStartOfAdministration       DTM     `hl7:"3,required,format=YMDHM,display=Date/Time Start Of Administration"`
	DateTimeEndOfAdministration         DTM     `hl7:"4,required,format=YMDHM,display=Date/Time End Of Administration"`
	AdministeredCode                    CWE     `hl7:"5,required,table=0292,display=Administered Code"`
	AdministeredAmount                  NM      `hl7:"6,required,display=Administered Amount"`
	AdministeredUnits                   *CWE    `hl7:"7,conditional,table=9999,display=Administered Units"`
	AdministeredDosageForm              *CWE    `hl7:"8,table=9999,display=Administered Dosage Form"`
	AdministrationNotes                 []CWE   `hl7:"9,table=9999,display=Administration Notes"`
	AdministeringProvider               []XCN   `hl7:"10,display=Administering Provider"`
	AdministeredAtLocation              ST      `hl7:"11,display=Administered-at Location"`
	AdministeredPerTimeUnit             ST      `hl7:"12,conditional,display=Administered Per (time Unit)"`
	AdministeredStrength                NM      `hl7:"13,display=Administered Strength"`
	AdministeredStrengthUnits           *CWE    `hl7:"14,table=9999,display=Administered Strength Units"`
	SubstanceLotNumber                  []ST    `hl7:"15,display=Substance Lot Number"`
	SubstanceExpirationDate             []DTM   `hl7:"16,format=YMDHM,display=Substance Expiration Date"`
	SubstanceManufacturerName           []CWE   `hl7:"17,table=0227,display=Substance Manufacturer Name"`
	SubstanceTreatmentRefusalReason     []CWE   `hl7:"18,table=9999,display=Substance/Treatment Refusal Reason"`
	Indication                          []CWE   `hl7:"19,table=9999,display=Indication"`
	CompletionStatus                    ID      `hl7:"20,len=2,table=0322,display=Completion Status"`
	ActionCode                          ID      `hl7:"21,len=1,table=0206,display=Action Code - Rxa"`
	SystemEntryDateTime                 DTM     `hl7:"22,format=YMDHM,display=System Entry Date/Time"`
	AdministeredDrugStrengthVolume      NM      `hl7:"23,display=Administered Drug Strength Volume"`
	AdministeredDrugStrengthVolumeUnits *CWE    `hl7:"24,table=9999,display=Administered Drug Strength Volume Units"`
	AdministeredBarcodeIdentifier       *CWE    `hl7:"25,table=9999,display=Administered Barcode Identifier"`
	PharmacyOrderType                   ID      `hl7:"26,len=1,table=0480,display=Pharmacy Order Type"`
	AdministerAt                        *PL     `hl7:"27,display=Administer-at"`
	AdministeredAtAddress               *XAD    `hl7:"28,display=Administered-at Address"`
	AdministeredTagIdentifier           []EI    `hl7:"29,display=Administered Tag Identifier"`
}

// Pharmacy/treatment Component Order
//
// If the drug or treatment ordered with the RXO segment is a compound drug OR an IV solution, AND there is not a coded value for
// OBR-4-universal service ID, which specifies the components (base and all additives), then the components (the base and
// additives) are specified by two or more RXC segments. The policy of the pharmacy or treatment application on substitutions
// at the RXC level is identical to that for the RXO level.
type RXC struct {
	HL7                              HL7Name `hl7:",name=RXC,type=s"`
	RxComponentType                  ID      `hl7:"1,required,len=1,table=0166,display=Rx Component Type"`
	ComponentCode                    CWE     `hl7:"2,required,table=9999,display=Component Code"`
	ComponentAmount                  NM      `hl7:"3,required,display=Component Amount"`
	ComponentUnits                   CWE     `hl7:"4,required,table=9999,display=Component Units"`
	ComponentStrength                NM      `hl7:"5,display=Component Strength"`
	ComponentStrengthUnits           *CWE    `hl7:"6,table=9999,display=Component Strength Units"`
	SupplementaryCode                []CWE   `hl7:"7,table=9999,display=Supplementary Code"`
	ComponentDrugStrengthVolume      NM      `hl7:"8,display=Component Drug Strength Volume"`
	ComponentDrugStrengthVolumeUnits *CWE    `hl7:"9,table=9999,display=Component Drug Strength Volume Units"`
}

// Pharmacy/treatment Dispense
type RXD struct {
	HL7                                                     HL7Name `hl7:",name=RXD,type=s"`
	DispenseSubIDCounter                                    NM      `hl7:"1,required,display=Dispense Sub-id Counter"`
	DispenseGiveCode                                        CWE     `hl7:"2,required,table=0292,display=Dispense/Give Code"`
	DateTimeDispensed                                       DTM     `hl7:"3,required,format=YMDHM,display=Date/Time Dispensed"`
	ActualDispenseAmount                                    NM      `hl7:"4,required,display=Actual Dispense Amount"`
	ActualDispenseUnits                                     *CWE    `hl7:"5,conditional,table=9999,display=Actual Dispense Units"`
	ActualDosageForm                                        *CWE    `hl7:"6,table=9999,display=Actual Dosage Form"`
	PrescriptionNumber                                      ST      `hl7:"7,required,display=Prescription Number"`
	NumberOfRefillsRemaining                                NM      `hl7:"8,conditional,display=Number Of Refills Remaining"`
	DispenseNotes                                           []ST    `hl7:"9,display=Dispense Notes"`
	DispensingProvider                                      []XCN   `hl7:"10,display=Dispensing Provider"`
	SubstitutionStatus                                      ID      `hl7:"11,len=1,table=0167,display=Substitution Status"`
	TotalDailyDose                                          *CQ     `hl7:"12,display=Total Daily Dose"`
	DispenseToLocation                                      ST      `hl7:"13,display=Dispense-to Location"`
	NeedsHumanReview                                        ID      `hl7:"14,len=1,table=0136,display=Needs Human Review"`
	PharmacyTreatmentSuppliersSpecialDispensingInstructions []CWE   `hl7:"15,table=9999,display=Pharmacy/Treatment Supplier's Special Dispensing Instructions"`
	ActualStrength                                          NM      `hl7:"16,display=Actual Strength"`
	ActualStrengthUnit                                      *CWE    `hl7:"17,table=9999,display=Actual Strength Unit"`
	SubstanceLotNumber                                      []ST    `hl7:"18,display=Substance Lot Number"`
	SubstanceExpirationDate                                 []DTM   `hl7:"19,format=YMDHM,display=Substance Expiration Date"`
	SubstanceManufacturerName                               []CWE   `hl7:"20,table=0227,display=Substance Manufacturer Name"`
	Indication                                              []CWE   `hl7:"21,table=9999,display=Indication"`
	DispensePackageSize                                     NM      `hl7:"22,display=Dispense Package Size"`
	DispensePackageSizeUnit                                 *CWE    `hl7:"23,table=9999,display=Dispense Package Size Unit"`
	DispensePackageMethod                                   ID      `hl7:"24,len=2,table=0321,display=Dispense Package Method"`
	SupplementaryCode                                       []CWE   `hl7:"25,table=9999,display=Supplementary Code"`
	InitiatingLocation                                      *CWE    `hl7:"26,table=9999,display=Initiating Location"`
	PackagingAssemblyLocation                               *CWE    `hl7:"27,table=9999,display=Packaging/Assembly Location"`
	ActualDrugStrengthVolume                                NM      `hl7:"28,display=Actual Drug Strength Volume"`
	ActualDrugStrengthVolumeUnits                           *CWE    `hl7:"29,table=9999,display=Actual Drug Strength Volume Units"`
	DispenseToPharmacy                                      CWE     `hl7:"30,table=9999,display=Dispense To Pharmacy"`
	DispenseToPharmacyAddress                               XAD     `hl7:"31,display=Dispense To Pharmacy Address"`
	PharmacyOrderType                                       ID      `hl7:"32,len=1,table=0480,display=Pharmacy Order Type"`
	DispenseType                                            *CWE    `hl7:"33,table=0484,display=Dispense Type"`
	PharmacyPhoneNumber                                     []XTN   `hl7:"34,display=Pharmacy Phone Number"`
	DispenseTagIdentifier                                   []EI    `hl7:"35,display=Dispense Tag Identifier"`
}

// Pharmacy/treatment Encoded Order
//
// The RXE segment details the pharmacy or treatment application's encoding of the order. It also contains several pharmacy-specific
// order status fields, such as RXE-16-number of refills remaining, RXE-17-number of refills/doses dispensed, RXE-18-D/T
// of most recent refill or dose dispensed, and RXE-19-total daily dose.
//
// Note that ORC-7-quantity/timing has a different meaning from RXE-1-quantity/timing and RXG-3-quantity/timing. The
// pharmacy or treatment department has the "authority" (and/or necessity) to schedule dispense/give events. Hence, the
// pharmacy or treatment department has the responsibility to encode this scheduling information in RXE-1-quantity/timing
// and RXG-3-quantity/timing. ORC-7-quantity/timing does not change: it always specifies the requested give/dispense
// schedule of the original order.
type RXE struct {
	HL7                                                     HL7Name `hl7:",name=RXE,type=s"`
	QuantityTiming                                          ST      `hl7:"1,display=Quantity/Timing"`
	GiveCode                                                CWE     `hl7:"2,required,table=0292,display=Give Code"`
	GiveAmountMinimum                                       NM      `hl7:"3,required,display=Give Amount - Minimum"`
	GiveAmountMaximum                                       NM      `hl7:"4,display=Give Amount - Maximum"`
	GiveUnits                                               CWE     `hl7:"5,required,table=9999,display=Give Units"`
	GiveDosageForm                                          *CWE    `hl7:"6,table=9999,display=Give Dosage Form"`
	ProvidersAdministrationInstructions                     []CWE   `hl7:"7,table=9999,display=Provider's Administration Instructions"`
	DeliverToLocation                                       ST      `hl7:"8,display=Deliver-to Location"`
	SubstitutionStatus                                      ID      `hl7:"9,len=1,table=0167,display=Substitution Status"`
	DispenseAmount                                          NM      `hl7:"10,conditional,display=Dispense Amount"`
	DispenseUnits                                           *CWE    `hl7:"11,conditional,table=9999,display=Dispense Units"`
	NumberOfRefills                                         NM      `hl7:"12,display=Number Of Refills"`
	OrderingProvidersDeaNumber                              []XCN   `hl7:"13,display=Ordering Provider's Dea Number"`
	PharmacistTreatmentSuppliersVerifierID                  []XCN   `hl7:"14,display=Pharmacist/Treatment Supplier's Verifier Id"`
	PrescriptionNumber                                      ST      `hl7:"15,conditional,display=Prescription Number"`
	NumberOfRefillsRemaining                                NM      `hl7:"16,conditional,display=Number Of Refills Remaining"`
	NumberOfRefillsDosesDispensed                           NM      `hl7:"17,conditional,display=Number Of Refills/Doses Dispensed"`
	DTOfMostRecentRefillOrDoseDispensed                     DTM     `hl7:"18,conditional,format=YMDHM,display=D/T Of Most Recent Refill Or Dose Dispensed"`
	TotalDailyDose                                          *CQ     `hl7:"19,conditional,display=Total Daily Dose"`
	NeedsHumanReview                                        ID      `hl7:"20,len=1,table=0136,display=Needs Human Review"`
	PharmacyTreatmentSuppliersSpecialDispensingInstructions []CWE   `hl7:"21,table=9999,display=Pharmacy/Treatment Supplier's Special Dispensing Instructions"`
	GivePerTimeUnit                                         ST      `hl7:"22,conditional,display=Give Per (time Unit)"`
	GiveRateAmount                                          ST      `hl7:"23,display=Give Rate Amount"`
	GiveRateUnits                                           *CWE    `hl7:"24,table=9999,display=Give Rate Units"`
	GiveStrength                                            NM      `hl7:"25,display=Give Strength"`
	GiveStrengthUnits                                       *CWE    `hl7:"26,table=9999,display=Give Strength Units"`
	GiveIndication                                          []CWE   `hl7:"27,table=9999,display=Give Indication"`
	DispensePackageSize                                     NM      `hl7:"28,display=Dispense Package Size"`
	DispensePackageSizeUnit                                 *CWE    `hl7:"29,table=9999,display=Dispense Package Size Unit"`
	DispensePackageMethod                                   ID      `hl7:"30,len=2,table=0321,display=Dispense Package Method"`
	SupplementaryCode                                       []CWE   `hl7:"31,table=9999,display=Supplementary Code"`
	OriginalOrderDateTime                                   DTM     `hl7:"32,format=YMDHM,display=Original Order Date/Time"`
	GiveDrugStrengthVolume                                  NM      `hl7:"33,display=Give Drug Strength Volume"`
	GiveDrugStrengthVolumeUnits                             *CWE    `hl7:"34,table=9999,display=Give Drug Strength Volume Units"`
	ControlledSubstanceSchedule                             *CWE    `hl7:"35,table=0477,display=Controlled Substance Schedule"`
	FormularyStatus                                         ID      `hl7:"36,len=1,table=0478,display=Formulary Status"`
	PharmaceuticalSubstanceAlternative                      []CWE   `hl7:"37,table=9999,display=Pharmaceutical Substance Alternative"`
	PharmacyOfMostRecentFill                                *CWE    `hl7:"38,table=9999,display=Pharmacy Of Most Recent Fill"`
	InitialDispenseAmount                                   NM      `hl7:"39,display=Initial Dispense Amount"`
	DispensingPharmacy                                      CWE     `hl7:"40,table=9999,display=Dispensing Pharmacy"`
	DispensingPharmacyAddress                               XAD     `hl7:"41,display=Dispensing Pharmacy Address"`
	DeliverToPatientLocation                                *PL     `hl7:"42,display=Deliver-to Patient Location"`
	DeliverToAddress                                        *XAD    `hl7:"43,display=Deliver-to Address"`
	PharmacyOrderType                                       ID      `hl7:"44,len=1,table=0480,display=Pharmacy Order Type"`
	PharmacyPhoneNumber                                     []XTN   `hl7:"45,display=Pharmacy Phone Number"`
}

// Pharmacy/treatment Give
type RXG struct {
	HL7                                                         HL7Name `hl7:",name=RXG,type=s"`
	GiveSubIDCounter                                            NM      `hl7:"1,required,display=Give Sub-id Counter"`
	DispenseSubIDCounter                                        NM      `hl7:"2,display=Dispense Sub-id Counter"`
	QuantityTiming                                              ST      `hl7:"3,display=Quantity/Timing"`
	GiveCode                                                    CWE     `hl7:"4,required,table=0292,display=Give Code"`
	GiveAmountMinimum                                           NM      `hl7:"5,required,display=Give Amount - Minimum"`
	GiveAmountMaximum                                           NM      `hl7:"6,display=Give Amount - Maximum"`
	GiveUnits                                                   CWE     `hl7:"7,required,table=9999,display=Give Units"`
	GiveDosageForm                                              *CWE    `hl7:"8,table=9999,display=Give Dosage Form"`
	AdministrationNotes                                         []CWE   `hl7:"9,table=9999,display=Administration Notes"`
	SubstitutionStatus                                          ID      `hl7:"10,len=1,table=0167,display=Substitution Status"`
	DispenseToLocation                                          ST      `hl7:"11,display=Dispense-to Location"`
	NeedsHumanReview                                            ID      `hl7:"12,len=1,table=0136,display=Needs Human Review"`
	PharmacyTreatmentSuppliersSpecialAdministrationInstructions []CWE   `hl7:"13,len=250,table=9999,display=Pharmacy/Treatment Supplier's Special Administration Instructions"`
	GivePerTimeUnit                                             ST      `hl7:"14,conditional,display=Give Per (time Unit)"`
	GiveRateAmount                                              ST      `hl7:"15,display=Give Rate Amount"`
	GiveRateUnits                                               *CWE    `hl7:"16,table=9999,display=Give Rate Units"`
	GiveStrength                                                NM      `hl7:"17,display=Give Strength"`
	GiveStrengthUnits                                           *CWE    `hl7:"18,table=9999,display=Give Strength Units"`
	SubstanceLotNumber                                          []ST    `hl7:"19,display=Substance Lot Number"`
	SubstanceExpirationDate                                     []DTM   `hl7:"20,format=YMDHM,display=Substance Expiration Date"`
	SubstanceManufacturerName                                   []CWE   `hl7:"21,table=0227,display=Substance Manufacturer Name"`
	Indication                                                  []CWE   `hl7:"22,table=9999,display=Indication"`
	GiveDrugStrengthVolume                                      NM      `hl7:"23,display=Give Drug Strength Volume"`
	GiveDrugStrengthVolumeUnits                                 *CWE    `hl7:"24,table=9999,display=Give Drug Strength Volume Units"`
	GiveBarcodeIdentifier                                       *CWE    `hl7:"25,table=9999,display=Give Barcode Identifier"`
	PharmacyOrderType                                           ID      `hl7:"26,len=1,table=0480,display=Pharmacy Order Type"`
	DispenseToPharmacy                                          CWE     `hl7:"27,table=9999,display=Dispense To Pharmacy"`
	DispenseToPharmacyAddress                                   XAD     `hl7:"28,display=Dispense To Pharmacy Address"`
	DeliverToPatientLocation                                    *PL     `hl7:"29,display=Deliver-to Patient Location"`
	DeliverToAddress                                            *XAD    `hl7:"30,display=Deliver-to Address"`
	GiveTagIdentifier                                           []EI    `hl7:"31,display=Give Tag Identifier"`
	DispenseAmount                                              NM      `hl7:"32,conditional,display=Dispense Amount"`
	DispenseUnits                                               *CWE    `hl7:"33,conditional,display=Dispense Units"`
}

// Pharmacy/treatment Order
//
// This is the "master" pharmacy/treatment order segment. It contains order data not specific to components or additives.
// Unlike the OBR, it does not contain status fields or other data that are results-only.
//
// It can be used for any type of pharmacy order, including inpatient (unit dose and compound unit dose), outpatient, IVs,
// and hyperalimentation IVs (nutritional IVs), as well as other non-pharmacy treatments, e.g., respiratory therapy,
// oxygen, and many nursing treatments.
//
// In addition to the pharmaceutical/treatment information, this segment contains additional data such as provider and
// text comments.
//
// A quantity/timing field is not needed in the RXO segment. The ORC segment contains the requested ORC-7-quantity/timing
// of the original order which does not change as the order is encoded, dispensed, or administered.
type RXO struct {
	HL7                                    HL7Name `hl7:",name=RXO,type=s"`
	RequestedGiveCode                      *CWE    `hl7:"1,conditional,table=9999,display=Requested Give Code"`
	RequestedGiveAmountMinimum             NM      `hl7:"2,conditional,display=Requested Give Amount - Minimum"`
	RequestedGiveAmountMaximum             NM      `hl7:"3,display=Requested Give Amount - Maximum"`
	RequestedGiveUnits                     *CWE    `hl7:"4,conditional,table=9999,display=Requested Give Units"`
	RequestedDosageForm                    *CWE    `hl7:"5,conditional,table=9999,display=Requested Dosage Form"`
	ProvidersPharmacyTreatmentInstructions []CWE   `hl7:"6,table=9999,display=Provider's Pharmacy/Treatment Instructions"`
	ProvidersAdministrationInstructions    []CWE   `hl7:"7,table=9999,display=Provider's Administration Instructions"`
	DeliverToLocation                      ST      `hl7:"8,display=Deliver-to Location"`
	AllowSubstitutions                     ID      `hl7:"9,len=1,table=0161,display=Allow Substitutions"`
	RequestedDispenseCode                  *CWE    `hl7:"10,table=9999,display=Requested Dispense Code"`
	RequestedDispenseAmount                NM      `hl7:"11,display=Requested Dispense Amount"`
	RequestedDispenseUnits                 *CWE    `hl7:"12,table=9999,display=Requested Dispense Units"`
	NumberOfRefills                        NM      `hl7:"13,display=Number Of Refills"`
	OrderingProvidersDeaNumber             []XCN   `hl7:"14,display=Ordering Provider's Dea Number"`
	PharmacistTreatmentSuppliersVerifierID []XCN   `hl7:"15,conditional,display=Pharmacist/Treatment Supplier's Verifier Id"`
	NeedsHumanReview                       ID      `hl7:"16,len=1,table=0136,display=Needs Human Review"`
	RequestedGivePerTimeUnit               ST      `hl7:"17,conditional,display=Requested Give Per (time Unit)"`
	RequestedGiveStrength                  NM      `hl7:"18,display=Requested Give Strength"`
	RequestedGiveStrengthUnits             *CWE    `hl7:"19,table=9999,display=Requested Give Strength Units"`
	Indication                             []CWE   `hl7:"20,table=9999,display=Indication"`
	RequestedGiveRateAmount                ST      `hl7:"21,display=Requested Give Rate Amount"`
	RequestedGiveRateUnits                 *CWE    `hl7:"22,table=9999,display=Requested Give Rate Units"`
	TotalDailyDose                         *CQ     `hl7:"23,display=Total Daily Dose"`
	SupplementaryCode                      []CWE   `hl7:"24,table=9999,display=Supplementary Code"`
	RequestedDrugStrengthVolume            NM      `hl7:"25,display=Requested Drug Strength Volume"`
	RequestedDrugStrengthVolumeUnits       *CWE    `hl7:"26,table=9999,display=Requested Drug Strength Volume Units"`
	PharmacyOrderType                      ID      `hl7:"27,len=1,table=0480,display=Pharmacy Order Type"`
	DispensingInterval                     NM      `hl7:"28,display=Dispensing Interval"`
	MedicationInstanceIdentifier           *EI     `hl7:"29,display=Medication Instance Identifier"`
	SegmentInstanceIdentifier              *EI     `hl7:"30,display=Segment Instance Identifier"`
	MoodCode                               *CNE    `hl7:"31,conditional,table=0725,display=Mood Code"`
	DispensingPharmacy                     CWE     `hl7:"32,table=9999,display=Dispensing Pharmacy"`
	DispensingPharmacyAddress              XAD     `hl7:"33,display=Dispensing Pharmacy Address"`
	DeliverToPatientLocation               *PL     `hl7:"34,display=Deliver-to Patient Location"`
	DeliverToAddress                       *XAD    `hl7:"35,display=Deliver-to Address"`
	PharmacyPhoneNumber                    []XTN   `hl7:"36,display=Pharmacy Phone Number"`
}

// Pharmacy/treatment Route
//
// The Pharmacy/Treatment Route segment contains the alternative combination of route, site, administration device,
// and administration method that are prescribed as they apply to a particular order. The pharmacy, treatment staff and/or
// nursing staff has a choice between the routes based on either their professional judgment or administration instructions
// provided by the physician.
type RXR struct {
	HL7                        HL7Name `hl7:",name=RXR,type=s"`
	Route                      CWE     `hl7:"1,required,table=0162,display=Route"`
	AdministrationSite         *CWE    `hl7:"2,table=0550,display=Administration Site"`
	AdministrationDevice       *CWE    `hl7:"3,table=0164,display=Administration Device"`
	AdministrationMethod       *CWE    `hl7:"4,table=0165,display=Administration Method"`
	RoutingInstruction         *CWE    `hl7:"5,table=9999,display=Routing Instruction"`
	AdministrationSiteModifier *CWE    `hl7:"6,table=0495,display=Administration Site Modifier"`
}

// Pharmacy/Treatment Infusion
//
// The RXV segment details the pharmacy or treatment application’s encoding of specific infusion order parameters
type RXV struct {
	HL7                      HL7Name `hl7:",name=RXV,type=s"`
	SetID                    SI      `hl7:"1,seq,display=Set ID - RXV"`
	BolusType                ID      `hl7:"2,required,len=1,table=0917,display=Bolus Type"`
	BolusDoseAmount          NM      `hl7:"3,display=Bolus Dose Amount"`
	BolusDoseAmountUnits     *CWE    `hl7:"4,display=Bolus Dose Amount Units"`
	BolusDoseVolume          NM      `hl7:"5,display=Bolus Dose Volume"`
	BolusDoseVolumeUnits     *CWE    `hl7:"6,display=Bolus Dose Volume Units"`
	PCAType                  ID      `hl7:"7,required,table=0918,display=PCA Type"`
	PCADoseAmount            NM      `hl7:"8,display=PCA Dose Amount"`
	PCADoseAmountUnits       *CWE    `hl7:"9,display=PCA Dose Amount Units"`
	PCADoseAmountVolume      NM      `hl7:"10,display=PCA Dose Amount Volume"`
	PCADoseAmountVolumeUnits *CWE    `hl7:"11,display=PCA Dose Amount Volume Units"`
	MaxDoseAmount            NM      `hl7:"12,display=Max Dose Amount"`
	MaxDoseAmountUnits       *CWE    `hl7:"13,display=Max Dose Amount Units"`
	MaxDoseAmountVolume      NM      `hl7:"14,display=Max Dose Amount Volume"`
	MaxDoseAmountVolumeUnits *CWE    `hl7:"15,display=Max Dose Amount Volume Units"`
	MaxDosePerTime           CQ      `hl7:"16,required,display=Max Dose per Time"`
	LockoutInterval          *CQ     `hl7:"17,display=Lockout Interval"`
	SyringeManufacturer      *CWE    `hl7:"18,display=Syringe Manufacturer"`
	SyringeModelNumber       *CWE    `hl7:"19,display=Syringe Model Number"`
	SyringeSize              NM      `hl7:"20,conditional,display=Syringe Size"`
	SyringeSizeUnits         *CWE    `hl7:"21,conditional,display=Syringe Size Units"`
	ActionCode               ID      `hl7:"22,table=0206,display=Action Code"`
}

// Specimen Container Detail
//
// The container detail segment is the data necessary to maintain the containers that are being used throughout the Laboratory
// Automation System.
//
// The specimens in many laboratories are transported and processed in containers (e.g., sample tubes). When SPM and SAC
// are used in the same message, then the conceptually duplicate attributes will be valued only in the SPM. This applies to
// SAC-6 Specimen Source, SAC-27 Additives, and SAC-43 Special Handling Considerations.
type SAC struct {
	HL7                               HL7Name `hl7:",name=SAC,type=s"`
	ExternalAccessionIdentifier       *EI     `hl7:"1,display=External Accession Identifier"`
	AccessionIdentifier               *EI     `hl7:"2,display=Accession Identifier"`
	ContainerIdentifier               *EI     `hl7:"3,conditional,display=Container Identifier"`
	PrimaryParentContainerIdentifier  *EI     `hl7:"4,conditional,display=Primary (parent) Container Identifier"`
	EquipmentContainerIdentifier      *EI     `hl7:"5,display=Equipment Container Identifier"`
	SpecimenSource                    ST      `hl7:"6,display=Specimen Source"`
	RegistrationDateTime              DTM     `hl7:"7,format=YMDHM,display=Registration Date/Time"`
	ContainerStatus                   *CWE    `hl7:"8,table=0370,display=Container Status"`
	CarrierType                       *CWE    `hl7:"9,table=0378,display=Carrier Type"`
	CarrierIdentifier                 *EI     `hl7:"10,display=Carrier Identifier"`
	PositionInCarrier                 *NA     `hl7:"11,display=Position In Carrier"`
	TrayType                          *CWE    `hl7:"12,table=0379,display=Tray Type - Sac"`
	TrayIdentifier                    *EI     `hl7:"13,display=Tray Identifier"`
	PositionInTray                    *NA     `hl7:"14,display=Position In Tray"`
	Location                          []CWE   `hl7:"15,table=9999,display=Location"`
	ContainerHeight                   NM      `hl7:"16,display=Container Height"`
	ContainerDiameter                 NM      `hl7:"17,display=Container Diameter"`
	BarrierDelta                      NM      `hl7:"18,display=Barrier Delta"`
	BottomDelta                       NM      `hl7:"19,display=Bottom Delta"`
	ContainerHeightDiameterDeltaUnits *CWE    `hl7:"20,table=9999,display=Container Height/Diameter/Delta Units"`
	ContainerVolume                   NM      `hl7:"21,display=Container Volume"`
	AvailableSpecimenVolume           NM      `hl7:"22,display=Available Specimen Volume"`
	InitialSpecimenVolume             NM      `hl7:"23,display=Initial Specimen Volume"`
	VolumeUnits                       *CWE    `hl7:"24,table=9999,display=Volume Units"`
	SeparatorType                     *CWE    `hl7:"25,table=0380,display=Separator Type"`
	CapType                           *CWE    `hl7:"26,table=0381,display=Cap Type"`
	Additive                          []CWE   `hl7:"27,table=0371,display=Additive"`
	SpecimenComponent                 *CWE    `hl7:"28,table=0372,display=Specimen Component"`
	DilutionFactor                    *SN     `hl7:"29,display=Dilution Factor"`
	Treatment                         *CWE    `hl7:"30,table=0373,display=Treatment"`
	Temperature                       *SN     `hl7:"31,display=Temperature"`
	HemolysisIndex                    NM      `hl7:"32,display=Hemolysis Index"`
	HemolysisIndexUnits               *CWE    `hl7:"33,table=9999,display=Hemolysis Index Units"`
	LipemiaIndex                      NM      `hl7:"34,display=Lipemia Index"`
	LipemiaIndexUnits                 *CWE    `hl7:"35,table=9999,display=Lipemia Index Units"`
	IcterusIndex                      NM      `hl7:"36,display=Icterus Index"`
	IcterusIndexUnits                 *CWE    `hl7:"37,table=9999,display=Icterus Index Units"`
	FibrinIndex                       NM      `hl7:"38,display=Fibrin Index"`
	FibrinIndexUnits                  *CWE    `hl7:"39,table=9999,display=Fibrin Index Units"`
	SystemInducedContaminants         []CWE   `hl7:"40,table=0374,display=System Induced Contaminants"`
	DrugInterference                  []CWE   `hl7:"41,table=0382,display=Drug Interference"`
	ArtificialBlood                   *CWE    `hl7:"42,table=0375,display=Artificial Blood"`
	SpecialHandlingCode               []CWE   `hl7:"43,table=0376,display=Special Handling Code"`
	OtherEnvironmentalFactors         []CWE   `hl7:"44,table=0377,display=Other Environmental Factors"`
}

// Anti-microbial Cycle Data
//
// The SCD segment contains cycle data representing an instance of a sterilization or decontamination.
type SCD struct {
	HL7                    HL7Name `hl7:",name=SCD,type=s"`
	CycleStartTime         TM      `hl7:"1,format=HM,display=Cycle Start Time"`
	CycleCount             NM      `hl7:"2,display=Cycle Count"`
	TempMax                *CQ     `hl7:"3,display=Temp Max"`
	TempMin                *CQ     `hl7:"4,display=Temp Min"`
	LoadNumber             NM      `hl7:"5,display=Load Number"`
	ConditionTime          *CQ     `hl7:"6,display=Condition Time"`
	SterilizeTime          *CQ     `hl7:"7,display=Sterilize Time"`
	ExhaustTime            *CQ     `hl7:"8,display=Exhaust Time"`
	TotalCycleTime         *CQ     `hl7:"9,display=Total Cycle Time"`
	DeviceStatus           *CWE    `hl7:"10,table=0682,display=Device Status"`
	CycleStartDateTime     DTM     `hl7:"11,format=YMDHM,display=Cycle Start Date/Time"`
	DryTime                *CQ     `hl7:"12,display=Dry Time"`
	LeakRate               *CQ     `hl7:"13,display=Leak Rate"`
	ControlTemperature     *CQ     `hl7:"14,display=Control Temperature"`
	SterilizerTemperature  *CQ     `hl7:"15,display=Sterilizer Temperature"`
	CycleCompleteTime      TM      `hl7:"16,format=HM,display=Cycle Complete Time"`
	UnderTemperature       *CQ     `hl7:"17,display=Under Temperature"`
	OverTemperature        *CQ     `hl7:"18,display=Over Temperature"`
	AbortCycle             *CNE    `hl7:"19,table=0532,display=Abort Cycle"`
	Alarm                  *CNE    `hl7:"20,table=0532,display=Alarm"`
	LongInChargePhase      *CNE    `hl7:"21,table=0532,display=Long In Charge Phase"`
	LongInExhaustPhase     *CNE    `hl7:"22,table=0532,display=Long In Exhaust Phase"`
	LongInFastExhaustPhase *CNE    `hl7:"23,table=0532,display=Long In Fast Exhaust Phase"`
	Reset                  *CNE    `hl7:"24,table=0532,display=Reset"`
	OperatorUnload         *XCN    `hl7:"25,display=Operator - Unload"`
	DoorOpen               *CNE    `hl7:"26,table=0532,display=Door Open"`
	ReadingFailure         *CNE    `hl7:"27,table=0532,display=Reading Failure"`
	CycleType              *CWE    `hl7:"28,table=0702,display=Cycle Type"`
	ThermalRinseTime       *CQ     `hl7:"29,display=Thermal Rinse Time"`
	WashTime               *CQ     `hl7:"30,display=Wash Time"`
	InjectionRate          *CQ     `hl7:"31,display=Injection Rate"`
	ProcedureCode          *CNE    `hl7:"32,table=0088,display=Procedure Code"`
	PatientIdentifierList  []CX    `hl7:"33,display=Patient Identifier List"`
	AttendingDoctor        *XCN    `hl7:"34,table=0010,display=Attending Doctor"`
	DilutionFactor         *SN     `hl7:"35,display=Dilution Factor"`
	FillTime               *CQ     `hl7:"36,display=Fill Time"`
	InletTemperature       *CQ     `hl7:"37,display=Inlet Temperature"`
}

// Scheduling Activity Information
//
// The SCH segment contains general information about the scheduled appointment.
type SCH struct {
	HL7                       HL7Name `hl7:",name=SCH,type=s"`
	PlacerAppointmentID       *EI     `hl7:"1,conditional,display=Placer Appointment Id"`
	FillerAppointmentID       *EI     `hl7:"2,conditional,display=Filler Appointment Id"`
	OccurrenceNumber          NM      `hl7:"3,conditional,display=Occurrence Number"`
	PlacerGroupNumber         *EI     `hl7:"4,display=Placer Group Number"`
	ScheduleID                *CWE    `hl7:"5,display=Schedule Id"`
	EventReason               CWE     `hl7:"6,required,display=Event Reason"`
	AppointmentReason         *CWE    `hl7:"7,table=0276,display=Appointment Reason"`
	AppointmentType           *CWE    `hl7:"8,table=0277,display=Appointment Type"`
	AppointmentDuration       NM      `hl7:"9,display=Appointment Duration"`
	AppointmentDurationUnits  CNE     `hl7:"10,display=Appointment Duration Units"`
	AppointmentTimingQuantity ST      `hl7:"11,display=Appointment Timing Quantity"`
	PlacerContactPerson       []XCN   `hl7:"12,display=Placer Contact Person"`
	PlacerContactPhoneNumber  *XTN    `hl7:"13,display=Placer Contact Phone Number"`
	PlacerContactAddress      []XAD   `hl7:"14,display=Placer Contact Address"`
	PlacerContactLocation     *PL     `hl7:"15,display=Placer Contact Location"`
	FillerContactPerson       []XCN   `hl7:"16,required,display=Filler Contact Person"`
	FillerContactPhoneNumber  *XTN    `hl7:"17,display=Filler Contact Phone Number"`
	FillerContactAddress      []XAD   `hl7:"18,display=Filler Contact Address"`
	FillerContactLocation     *PL     `hl7:"19,display=Filler Contact Location"`
	EnteredByPerson           []XCN   `hl7:"20,required,display=Entered By Person"`
	EnteredByPhoneNumber      []XTN   `hl7:"21,display=Entered By Phone Number"`
	EnteredByLocation         *PL     `hl7:"22,display=Entered By Location"`
	ParentPlacerAppointmentID *EI     `hl7:"23,display=Parent Placer Appointment Id"`
	ParentFillerAppointmentID *EI     `hl7:"24,conditional,display=Parent Filler Appointment Id"`
	FillerStatusCode          *CWE    `hl7:"25,table=0278,display=Filler Status Code"`
	PlacerOrderNumber         []EI    `hl7:"26,conditional,display=Placer Order Number"`
	FillerOrderNumber         []EI    `hl7:"27,conditional,display=Filler Order Number"`
}

// Sterilizer Configuration (anti-microbial Devices)
//
// The sterilization configuration segment contains information specific to configuration of a sterilizer or washer for
// processing sterilization or decontamination loads.
type SCP struct {
	HL7                                         HL7Name `hl7:",name=SCP,type=s"`
	NumberOfDecontaminationSterilizationDevices NM      `hl7:"1,display=Number Of Decontamination/Sterilization Devices"`
	LaborCalculationType                        *CWE    `hl7:"2,table=0651,display=Labor Calculation Type"`
	DateFormat                                  *CWE    `hl7:"3,table=0653,display=Date Format"`
	DeviceNumber                                *EI     `hl7:"4,display=Device Number"`
	DeviceName                                  ST      `hl7:"5,display=Device Name"`
	DeviceModelName                             ST      `hl7:"6,display=Device Model Name"`
	DeviceType                                  *CWE    `hl7:"7,table=0657,display=Device Type"`
	LotControl                                  *CWE    `hl7:"8,table=0659,display=Lot Control"`
}

// Sterilization Device Data
//
// The SDD segment contains the attributes of an instance of a cycle that provides sterilization or decontamination of medical
// supplies.
type SDD struct {
	HL7             HL7Name `hl7:",name=SDD,type=s"`
	LotNumber       *EI     `hl7:"1,display=Lot Number"`
	DeviceNumber    *EI     `hl7:"2,display=Device Number"`
	DeviceName      ST      `hl7:"3,display=Device Name"`
	DeviceDataState *CWE    `hl7:"4,table=0667,display=Device Data State"`
	LoadStatus      *CWE    `hl7:"5,table=0669,display=Load Status"`
	ControlCode     NM      `hl7:"6,display=Control Code"`
	OperatorName    ST      `hl7:"7,display=Operator Name"`
}

// Software Segment
//
// This segment provides additional information about the software product(s) used as a Sending Application. The primary
// purpose of this segment is for diagnostic use. There may be additional uses per site-specific agreements.
//
// Implementers are encouraged to use message profile identifiers (as found in 2.14.9.21, "MSH-21 Message Profile Identifier
// (EI) 01598") to control the behavior of the receiving application rather than relying on application or version information
// in the SFT segment.
//
// For example, if software product A has versions 9 and 10 deployed in different Enterprise locations, the fact that they
// use different message types, segments, or fields should be reflected via their message profiles (see section 2B, "Conformance
// Using Message Profiles"). If there is an upgrade from version 10 to 10.1, this would be reflected in the SFT segment, but
// changes to the message contents should be reflected via a new/different conformance profile.
//
// Use Case: An external application has been customized to communicate with a centralized patient drug history system.
// However, due to certain, known characteristics of the external software package, the centralized system must modify
// its behavior in order to process transactions correctly. In one example, the external application may have multiple versions
// in production. As such, the centralized application will need to know the name of the Software Vendor Organization, the
// Software Release Number, the Software Product Name, and the Software Binary ID so that it can correctly identify the software
// submitting the transaction and modify its behavior appropriately.
//
// While preparing a transaction for submission to a centralized system the sending application specifies its Software
// Install Date and its configuration settings (Software Product Information).
// While processing the transaction, the centralized system encounters an error. Upon examination of the error, install
// date and configuration of the software that sent the message, helpdesk staff are able to determine the sending application
// has not been updated to reflect recent application changes.
//
// Use Case: In circumstances where a message is manipulated or modified by multiple systems, a repetition of this segment
// may be appended by each system.
type SFT struct {
	HL7                                     HL7Name `hl7:",name=SFT,type=s"`
	SoftwareVendorOrganization              XON     `hl7:"1,required,display=Software Vendor Organization"`
	SoftwareCertifiedVersionOrReleaseNumber ST      `hl7:"2,required,display=Software Certified Version Or Release Number"`
	SoftwareProductName                     ST      `hl7:"3,required,display=Software Product Name"`
	SoftwareBinaryID                        ST      `hl7:"4,required,display=Software Binary Id"`
	SoftwareProductInformation              TX      `hl7:"5,display=Software Product Information"`
	SoftwareInstallDate                     DTM     `hl7:"6,format=YMDHM,display=Software Install Date"`
}

// Shipment
//
// The intent of this segment is to describe the information associated with the transportation of the shipment.
type SHP struct {
	HL7                        HL7Name `hl7:",name=SHP,type=s"`
	ShipmentID                 EI      `hl7:"1,required,display=Shipment Id"`
	InternalShipmentID         []EI    `hl7:"2,display=Internal Shipment Id"`
	ShipmentStatus             *CWE    `hl7:"3,table=0905,display=Shipment Status"`
	ShipmentStatusDateTime     DTM     `hl7:"4,required,format=YMDHM,display=Shipment Status Date/Time"`
	ShipmentStatusReason       TX      `hl7:"5,display=Shipment Status Reason"`
	ShipmentPriority           *CWE    `hl7:"6,table=0906,display=Shipment Priority"`
	ShipmentConfidentiality    []CWE   `hl7:"7,table=0907,display=Shipment Confidentiality"`
	NumberOfPackagesInShipment NM      `hl7:"8,display=Number Of Packages In Shipment"`
	ShipmentCondition          []CWE   `hl7:"9,table=0544,display=Shipment Condition"`
	ShipmentHandlingCode       []CWE   `hl7:"10,table=0376,display=Shipment Handling Code"`
	ShipmentRiskCode           []CWE   `hl7:"11,table=0489,display=Shipment Risk Code"`
}

// Substance Identifier
//
// The Substance Identifier segment contains data necessary to identify the substance (e.g., reagents) used in the production
// of analytical test results. The combination of these fields must uniquely identify the substance, i.e., depending on
// the manufacturer all or some fields are required (this is the reason the optionality is 'C' (conditional)). If the analysis
// requires multiple substances, this segment is repeated for each substance. The segment(s) should be attached to the TCD
// segment.
//
// Another purpose of this segment is to transfer the control manufacturer, lot, etc., information for control specimens.
// In this case the SID segment should be attached to the SAC segment describing the container with the control specimen.
type SID struct {
	HL7                             HL7Name `hl7:",name=SID,type=s"`
	ApplicationMethodIdentifier     *CWE    `hl7:"1,conditional,table=9999,display=Application/Method Identifier"`
	SubstanceLotNumber              ST      `hl7:"2,conditional,display=Substance Lot Number"`
	SubstanceContainerIdentifier    ST      `hl7:"3,conditional,display=Substance Container Identifier"`
	SubstanceManufacturerIdentifier *CWE    `hl7:"4,conditional,table=0385,display=Substance Manufacturer Identifier"`
}

// Sterilization Lot
//
// The SLT segment defines requests, responses, and notifications of sterilization lots and supply item descriptions.
// This message may be used for CPD (Central Supply) and OR (Sub-sterile area outside of an Operating Room) mode.
type SLT struct {
	HL7            HL7Name `hl7:",name=SLT,type=s"`
	DeviceNumber   *EI     `hl7:"1,display=Device Number"`
	DeviceName     ST      `hl7:"2,display=Device Name"`
	LotNumber      *EI     `hl7:"3,display=Lot Number"`
	ItemIdentifier *EI     `hl7:"4,display=Item Identifier"`
	BarCode        ST      `hl7:"5,display=Bar Code"`
}

// Specimen
//
// The intent of this segment is to describe the characteristics of a specimen. It differs from the intent of the OBR in that
// the OBR addresses order-specific information. It differs from the SAC segment in that the SAC addresses specimen container
// attributes. An advantage afforded by a separate specimen segment is that it generalizes the multiple relationships among
// order(s), results, specimen(s) and specimen container(s).
//
// A specimen is defined as "A physical entity that is an individual, a group, an item, or a part representative of a larger group,
// class or whole that is the target of an observation or analysis for the purpose of drawing conclusions about the group, class,
// or whole." Note that any physical entity in the universe has the potential to become a specimen
//
// A specimen is collected or obtained from a source and may be representative of the source, or may represent a deviation within
// the source. A specimen may be wholly or partially consumed during an observation and any remaining portion of the specimen
// is persistent and can be stored.
//
// This segment may also be used in limited cases to describe a "virtual" specimen. In particular, to identify the characteristics
// required for a specimen in the context of a specific observation or test.
//
// In summary, SPM represents the attributes specific and unique to a specimen.
type SPM struct {
	HL7                        HL7Name `hl7:",name=SPM,type=s"`
	SetID                      SI      `hl7:"1,seq,len=4,display=Set Id - Spm"`
	SpecimenID                 *EIP    `hl7:"2,display=Specimen Id"`
	SpecimenParentIds          []EIP   `hl7:"3,display=Specimen Parent Ids"`
	SpecimenType               CWE     `hl7:"4,required,table=0487,display=Specimen Type"`
	SpecimenTypeModifier       []CWE   `hl7:"5,table=0541,display=Specimen Type Modifier"`
	SpecimenAdditives          []CWE   `hl7:"6,table=0371,display=Specimen Additives"`
	SpecimenCollectionMethod   *CWE    `hl7:"7,table=0488,display=Specimen Collection Method"`
	SpecimenSourceSite         *CWE    `hl7:"8,table=9999,display=Specimen Source Site"`
	SpecimenSourceSiteModifier []CWE   `hl7:"9,table=0542,display=Specimen Source Site Modifier"`
	SpecimenCollectionSite     *CWE    `hl7:"10,table=0543,display=Specimen Collection Site"`
	SpecimenRole               []CWE   `hl7:"11,table=0369,display=Specimen Role"`
	SpecimenCollectionAmount   *CQ     `hl7:"12,display=Specimen Collection Amount"`
	GroupedSpecimenCount       NM      `hl7:"13,conditional,display=Grouped Specimen Count"`
	SpecimenDescription        []ST    `hl7:"14,display=Specimen Description"`
	SpecimenHandlingCode       []CWE   `hl7:"15,table=0376,display=Specimen Handling Code"`
	SpecimenRiskCode           []CWE   `hl7:"16,table=0489,display=Specimen Risk Code"`
	SpecimenCollectionDateTime *DR     `hl7:"17,display=Specimen Collection Date/Time"`
	SpecimenReceivedDateTime   DTM     `hl7:"18,format=YMDHM,display=Specimen Received Date/Time"`
	SpecimenExpirationDateTime DTM     `hl7:"19,format=YMDHM,display=Specimen Expiration Date/Time"`
	SpecimenAvailability       ID      `hl7:"20,len=1,table=0136,display=Specimen Availability"`
	SpecimenRejectReason       []CWE   `hl7:"21,table=0490,display=Specimen Reject Reason"`
	SpecimenQuality            *CWE    `hl7:"22,table=0491,display=Specimen Quality"`
	SpecimenAppropriateness    *CWE    `hl7:"23,table=0492,display=Specimen Appropriateness"`
	SpecimenCondition          []CWE   `hl7:"24,table=0493,display=Specimen Condition"`
	SpecimenCurrentQuantity    *CQ     `hl7:"25,display=Specimen Current Quantity"`
	NumberOfSpecimenContainers NM      `hl7:"26,display=Number Of Specimen Containers"`
	ContainerType              *CWE    `hl7:"27,table=9999,display=Container Type"`
	ContainerCondition         *CWE    `hl7:"28,table=0544,display=Container Condition"`
	SpecimenChildRole          *CWE    `hl7:"29,table=0494,display=Specimen Child Role"`
	AccessionID                []CX    `hl7:"30,display=Accession Id"`
	OtherSpecimenID            []CX    `hl7:"31,display=Other Specimen Id"`
	ShipmentID                 *EI     `hl7:"32,display=Shipment Id"`
}

// Staff Identification
//
// The STF segment can identify any personnel referenced by information systems.  These can be providers, staff, system users,
// and referring agents.  In a network environment, this segment can be used to define personnel to other applications, for
// example, order entry clerks, insurance verification clerks, admission clerks, as well as provider demographics. When
// using the STF and PRA segments in the Staff/Practitioner Master File message, MFE-4-primary key value is used to link all
// the segments pertaining to the same master file entry.  Therefore, in the MFE segment, MFE-4-primary key value must be filled
// in.  Other segments may follow the STF segment to provide data for a particular type of staff member. The PRA segment (practitioner)
// is one such.  It may optionally follow the STF segment in order to add practitioner-specific data. Other segments may be
// defined as needed. When using the segments included in this chapter for other then Staff/Practitioner Master File messages,
// disregard references to MFE-4 - primary key value.
type STF struct {
	HL7                             HL7Name `hl7:",name=STF,type=s"`
	PrimaryKeyValue                 *CWE    `hl7:"1,conditional,table=9999,display=Primary Key Value - Stf"`
	StaffIdentifierList             []CX    `hl7:"2,display=Staff Identifier List"`
	StaffName                       []XPN   `hl7:"3,display=Staff Name"`
	StaffType                       []CWE   `hl7:"4,table=0182,display=Staff Type"`
	AdministrativeSex               *CWE    `hl7:"5,table=0001,display=Administrative Sex"`
	DateTimeOfBirth                 DTM     `hl7:"6,format=YMDHM,display=Date/Time Of Birth"`
	ActiveInactiveFlag              ID      `hl7:"7,len=1,table=0183,display=Active/Inactive Flag"`
	Department                      []CWE   `hl7:"8,table=0184,display=Department"`
	HospitalService                 []CWE   `hl7:"9,table=0069,display=Hospital Service - Stf"`
	Phone                           []XTN   `hl7:"10,display=Phone"`
	OfficeHomeAddressBirthplace     []XAD   `hl7:"11,display=Office/Home Address/Birthplace"`
	InstitutionActivationDate       []DIN   `hl7:"12,display=Institution Activation Date"`
	InstitutionInactivationDate     []DIN   `hl7:"13,display=Institution Inactivation Date"`
	BackupPersonID                  []CWE   `hl7:"14,display=Backup Person Id"`
	EMailAddress                    []ST    `hl7:"15,display=E-mail Address"`
	PreferredMethodOfContact        *CWE    `hl7:"16,table=0185,display=Preferred Method Of Contact"`
	MaritalStatus                   *CWE    `hl7:"17,table=0002,display=Marital Status"`
	JobTitle                        ST      `hl7:"18,display=Job Title"`
	JobCodeClass                    *JCC    `hl7:"19,display=Job Code/Class"`
	EmploymentStatusCode            *CWE    `hl7:"20,table=0066,display=Employment Status Code"`
	AdditionalInsuredOnAuto         ID      `hl7:"21,len=1,table=0136,display=Additional Insured On Auto"`
	DriversLicenseNumberStaff       *DLN    `hl7:"22,display=Driver's License Number - Staff"`
	CopyAutoIns                     ID      `hl7:"23,len=1,table=0136,display=Copy Auto Ins"`
	AutoInsExpires                  DT      `hl7:"24,format=YMD,display=Auto Ins Expires"`
	DateLastDmvReview               DT      `hl7:"25,format=YMD,display=Date Last Dmv Review"`
	DateNextDmvReview               DT      `hl7:"26,format=YMD,display=Date Next Dmv Review"`
	Race                            *CWE    `hl7:"27,table=0005,display=Race"`
	EthnicGroup                     *CWE    `hl7:"28,table=0189,display=Ethnic Group"`
	ReActivationApprovalIndicator   ID      `hl7:"29,len=1,table=0136,display=Re-activation Approval Indicator"`
	Citizenship                     []CWE   `hl7:"30,table=0171,display=Citizenship"`
	DateTimeOfDeath                 DTM     `hl7:"31,format=YMDHM,display=Date/Time Of Death"`
	DeathIndicator                  ID      `hl7:"32,len=1,table=0136,display=Death Indicator"`
	InstitutionRelationshipTypeCode *CWE    `hl7:"33,table=0538,display=Institution Relationship Type Code"`
	InstitutionRelationshipPeriod   *DR     `hl7:"34,display=Institution Relationship Period"`
	ExpectedReturnDate              DT      `hl7:"35,format=YMD,display=Expected Return Date"`
	CostCenterCode                  []CWE   `hl7:"36,table=0539,display=Cost Center Code"`
	GenericClassificationIndicator  ID      `hl7:"37,len=1,table=0136,display=Generic Classification Indicator"`
	InactiveReasonCode              *CWE    `hl7:"38,table=0540,display=Inactive Reason Code"`
	GenericResourceTypeOrCategory   []CWE   `hl7:"39,table=0771,display=Generic Resource Type Or Category"`
	Religion                        *CWE    `hl7:"40,table=0006,display=Religion"`
	Signature                       *ED     `hl7:"41,display=Signature"`
}

// Sterilization Parameter
//
// The STZ segment contains sterilization-specific attributes of a supply item.
type STZ struct {
	HL7                HL7Name `hl7:",name=STZ,type=s"`
	SterilizationType  *CWE    `hl7:"1,table=0806,display=Sterilization Type"`
	SterilizationCycle *CWE    `hl7:"2,table=0702,display=Sterilization Cycle"`
	MaintenanceCycle   *CWE    `hl7:"3,table=0809,display=Maintenance Cycle"`
	MaintenanceType    *CWE    `hl7:"4,table=0811,display=Maintenance Type"`
}

// Test Code Configuration
//
// The test (e.g., analyte) code configuration segment is the data necessary to maintain and transmit information concerning
// the test entity codes that are being used throughout the "automated system."
type TCC struct {
	HL7                                   HL7Name `hl7:",name=TCC,type=s"`
	UniversalServiceIdentifier            CWE     `hl7:"1,required,display=Universal Service Identifier"`
	EquipmentTestApplicationIdentifier    EI      `hl7:"2,required,display=Equipment Test Application Identifier"`
	SpecimenSource                        ST      `hl7:"3,display=Specimen Source"`
	AutoDilutionFactorDefault             *SN     `hl7:"4,display=Auto-dilution Factor Default"`
	RerunDilutionFactorDefault            *SN     `hl7:"5,display=Rerun Dilution Factor Default"`
	PreDilutionFactorDefault              *SN     `hl7:"6,display=Pre-dilution Factor Default"`
	EndogenousContentOfPreDilutionDiluent *SN     `hl7:"7,display=Endogenous Content Of Pre-dilution Diluent"`
	InventoryLimitsWarningLevel           NM      `hl7:"8,display=Inventory Limits Warning Level"`
	AutomaticRerunAllowed                 ID      `hl7:"9,len=1,table=0136,display=Automatic Rerun Allowed"`
	AutomaticRepeatAllowed                ID      `hl7:"10,len=1,table=0136,display=Automatic Repeat Allowed"`
	AutomaticReflexAllowed                ID      `hl7:"11,len=1,table=0136,display=Automatic Reflex Allowed"`
	EquipmentDynamicRange                 *SN     `hl7:"12,display=Equipment Dynamic Range"`
	Units                                 *CWE    `hl7:"13,table=9999,display=Units"`
	ProcessingType                        *CWE    `hl7:"14,table=0388,display=Processing Type"`
	TestCriticality                       *CWE    `hl7:"15,len=705,display=Test Criticality"`
}

// Test Code Detail
//
// The test code detail segment contains the data necessary to perform operations or calculations, or execute decisions
// by the laboratory automation system, and which are not supported by the original HL7 segments related to orders (ORC, OBR).
// For detail of use see messages of laboratory orders and observations in chapters 4 and 7.
type TCD struct {
	HL7                                   HL7Name `hl7:",name=TCD,type=s"`
	UniversalServiceIdentifier            CWE     `hl7:"1,required,display=Universal Service Identifier"`
	AutoDilutionFactor                    *SN     `hl7:"2,display=Auto-dilution Factor"`
	RerunDilutionFactor                   *SN     `hl7:"3,display=Rerun Dilution Factor"`
	PreDilutionFactor                     *SN     `hl7:"4,display=Pre-dilution Factor"`
	EndogenousContentOfPreDilutionDiluent *SN     `hl7:"5,display=Endogenous Content Of Pre-dilution Diluent"`
	AutomaticRepeatAllowed                ID      `hl7:"6,len=1,table=0136,display=Automatic Repeat Allowed"`
	ReflexAllowed                         ID      `hl7:"7,len=1,table=0136,display=Reflex Allowed"`
	AnalyteRepeatStatus                   *CWE    `hl7:"8,table=0389,display=Analyte Repeat Status"`
}

// Timing/quantity
//
// The TQ1 segment is used to specify the complex timing of events and actions such as those that occur in order management and
// scheduling systems. This segment determines the quantity, frequency, priority and timing of a service. By allowing the
// segment to repeat, it is possible to have service requests that vary the quantity, frequency and priority of a service request
// over time.
//
// Use cases showing when TQ1 may need to repeat:
// a) Cardiac enzymes STAT and then q 4 hours.
// b) Streptokinase studies, draw 1st Stat and run Stat, then draw q 4 hours and run Stat.
// c) Gentamicin 100mg Now and 80mg q12h second dose (First 80mg dose) given exactly 12 hours after the 100mg dose. (Might be
// 2 service requests.)
// Activase 15mg bolus Stat then 50mg over 30 minutes, then 35mg over the next 60 minutes. (Might be 2 service requests.)
// e) Imodium 4mg (2 caps) po initially, then 2mg (1cap) after each unformed stool to a maximum of 16 mg per day. (Might be 2 service
// requests.)
// f) Zithromax 500mg (2tabs) po on the first day then 250mg (1tab) po qd for 5 days. (Might be 2 service requests.)
// g) Zyban (Bupropion) Start 150mg po qam x 3 days, then increase to 150mg po bid for 7 to 12 weeks.
// h) Colchicine 1mg (2 tabs) po now then 1 tablet q1 to 2 hours until pain relief or undesirable side effects (Diarrhea, GI upset).
// (Might be 2 service requests.)
// i) doxycylcine 100mg po bid on the first day then 100mg po qd.
// j) scopolamine, xxx mg, 1 hour before surgery. Relative time = -1^hour, priority = P (preop), or alternately repeat pattern
// = P1H^Preop, 1 Hour before Surgery^99LocalCode, Relative time would be empty and priority would be P (preop).
type TQ1 struct {
	HL7                  HL7Name `hl7:",name=TQ1,type=s"`
	SetID                SI      `hl7:"1,seq,len=4,display=Set Id - Tq1"`
	Quantity             *CQ     `hl7:"2,display=Quantity"`
	RepeatPattern        []RPT   `hl7:"3,display=Repeat Pattern"`
	ExplicitTime         []TM    `hl7:"4,format=HM,display=Explicit Time"`
	RelativeTimeAndUnits []CQ    `hl7:"5,display=Relative Time And Units"`
	ServiceDuration      *CQ     `hl7:"6,display=Service Duration"`
	StartDateTime        DTM     `hl7:"7,format=YMDHM,display=Start Date/Time"`
	EndDateTime          DTM     `hl7:"8,format=YMDHM,display=End Date/Time"`
	Priority             []CWE   `hl7:"9,table=0485,display=Priority"`
	ConditionText        TX      `hl7:"10,display=Condition Text"`
	TextInstruction      TX      `hl7:"11,display=Text Instruction"`
	Conjunction          ID      `hl7:"12,conditional,len=1,table=0472,display=Conjunction"`
	OccurrenceDuration   *CQ     `hl7:"13,display=Occurrence Duration"`
	TotalOccurrences     NM      `hl7:"14,display=Total Occurrences"`
}

// Timing/quantity Relationship
//
// The TQ2 segment is used to form a relationship between the service request the TQ1/TQ2 segments are associated with, and
// other service requests. The TQ2 segment will link the current service request with one or more other service requests.
//
// There are many situations, such as the creation of a service request for a group of intravenous (IV) solutions, where the
// sequence of the individual intravenous solutions (each a service in itself) needs to be specified, e.g., hyperalimentation
// with multi-vitamins in every third bottle.
//
// There are other situations where part of the service request's instructions contains a results condition of some type,
// such as "PRN pain." There is currently a free text "condition" field of TQ1-10 - Condition text which allows any condition
// to be specified. However, to support a fully encoded version of service request sequencing, or results condition, the
// TQ2, Timing/Quantity Relationship segment has been defined.
//
// TQ2 Usage notes:
// a) Cyclic placer service request groups
// To implement a cyclic group of four IV service requests using the parent/child paradigm, the parent specifies a custom
// group of IVs, and the following occurs:
// - TQ2 of the second child service request specifies that it follow the first child service request.
// - TQ2 of the third child service request specifies that it follow the second child service request.
// - TQ2 of the fourth child service request specifies that it follow the third service request.
// To repeat the group of four child service requests in a cyclic manner, the following occurs:
// - TQ2 of the first child service request specifies that it is to be executed once without any dependence on the completion
// of other service requests. Its second execution follows the completion of the fourth service request. See example in Section
// 4A.5.2 RXO segment field examples.
// This scheme allows the following to be tracked:
// - The status of the whole group of service requests to be reported back at the level of the parent service request.
// - The status for each individual IV service request by following the status of the corresponding child service request.
// Separate Service requests example:
// - The same group of service requests can be sent as a group of four service requests (without a common parent), linked only
// by the data in their quantity/timing fields. In this case, there is no convenient HL7 method of transmitting the service
// request status of the group as a whole without transmitting the status of each of the four separate service requests.
//
// b) Inheritance of service request status
// Cancellation/discontinuation/hold service request control events:
// - This logic implies the normal execution of the referenced predecessor service request. Thus a cancel (or discontinuation
// or hold) of a predecessor service request implies the cancellation (or discontinuation or hold) of all subsequent service
// requests in the chain.
// - If the referenced service request has been canceled (or discontinued or held), the current service request inherits
// that same status.
// - In the case of hold, the removal of the hold of the predecessor implies a removal of the hold for the given service request
// (which can then be executed according to the specification in the TQ2 segment).
type TQ2 struct {
	HL7                               HL7Name `hl7:",name=TQ2,type=s"`
	SetID                             SI      `hl7:"1,seq,len=4,display=Set Id - Tq2"`
	SequenceResultsFlag               ID      `hl7:"2,len=1,table=0503,display=Sequence/Results Flag"`
	RelatedPlacerNumber               []EI    `hl7:"3,conditional,display=Related Placer Number"`
	RelatedFillerNumber               []EI    `hl7:"4,conditional,display=Related Filler Number"`
	RelatedPlacerGroupNumber          []EI    `hl7:"5,conditional,display=Related Placer Group Number"`
	SequenceConditionCode             ID      `hl7:"6,conditional,table=0504,display=Sequence Condition Code"`
	CyclicEntryExitIndicator          ID      `hl7:"7,conditional,len=1,table=0505,display=Cyclic Entry/Exit Indicator"`
	SequenceConditionTimeInterval     *CQ     `hl7:"8,display=Sequence Condition Time Interval"`
	CyclicGroupMaximumNumberOfRepeats NM      `hl7:"9,display=Cyclic Group Maximum Number Of Repeats"`
	SpecialServiceRequestRelationship ID      `hl7:"10,conditional,len=1,table=0506,display=Special Service Request Relationship"`
}

// Transcription Document Header
//
// The TXA segment contains information specific to a transcribed document but does not include the text of the document.
// The message is created as a result of a document status change.  This information updates other healthcare systems and allows
// them to identify reports that are available in the transcription system. By maintaining the TXA message information in
// these systems, the information is available when constructing queries to the transcription system requesting the full
// document text.
type TXA struct {
	HL7                                      HL7Name `hl7:",name=TXA,type=s"`
	SetID                                    SI      `hl7:"1,seq,required,len=4,display=Set Id- Txa"`
	DocumentType                             CWE     `hl7:"2,required,table=0270,display=Document Type"`
	DocumentContentPresentation              ID      `hl7:"3,conditional,table=0191,display=Document Content Presentation"`
	ActivityDateTime                         DTM     `hl7:"4,format=YMDHM,display=Activity Date/Time"`
	PrimaryActivityProviderCodeName          []XCN   `hl7:"5,conditional,display=Primary Activity Provider Code/Name"`
	OriginationDateTime                      DTM     `hl7:"6,format=YMDHM,display=Origination Date/Time"`
	TranscriptionDateTime                    DTM     `hl7:"7,conditional,format=YMDHM,display=Transcription Date/Time"`
	EditDateTime                             []DTM   `hl7:"8,format=YMDHM,display=Edit Date/Time"`
	OriginatorCodeName                       []XCN   `hl7:"9,display=Originator Code/Name"`
	AssignedDocumentAuthenticator            []XCN   `hl7:"10,display=Assigned Document Authenticator"`
	TranscriptionistCodeName                 []XCN   `hl7:"11,conditional,display=Transcriptionist Code/Name"`
	UniqueDocumentNumber                     EI      `hl7:"12,required,display=Unique Document Number"`
	ParentDocumentNumber                     *EI     `hl7:"13,conditional,display=Parent Document Number"`
	PlacerOrderNumber                        []EI    `hl7:"14,display=Placer Order Number"`
	FillerOrderNumber                        *EI     `hl7:"15,display=Filler Order Number"`
	UniqueDocumentFileName                   ST      `hl7:"16,display=Unique Document File Name"`
	DocumentCompletionStatus                 ID      `hl7:"17,required,len=2,table=0271,display=Document Completion Status"`
	DocumentConfidentialityStatus            ID      `hl7:"18,len=1,table=0272,display=Document Confidentiality Status"`
	DocumentAvailabilityStatus               ID      `hl7:"19,len=2,table=0273,display=Document Availability Status"`
	DocumentStorageStatus                    ID      `hl7:"20,len=2,table=0275,display=Document Storage Status"`
	DocumentChangeReason                     ST      `hl7:"21,display=Document Change Reason"`
	AuthenticationPersonTimeStampSet         []PPN   `hl7:"22,conditional,display=Authentication Person- Time Stamp (set)"`
	DistributedCopiesCodeAndNameOfRecipientS []XCN   `hl7:"23,display=Distributed Copies (code And Name Of Recipient(s) )"`
	FolderAssignment                         []CWE   `hl7:"24,display=Folder Assignment"`
	DocumentTitle                            []ST    `hl7:"25,display=Document Title"`
	AgreedDueDateTime                        DTM     `hl7:"26,format=YMDHM,display=Agreed Due Date/Time"`
}

// User Authentication Credential Segment
//
// This optional segment provides user authentication credentials, a Kerberos Service Ticket or SAML assertion, to be used
// by the receiving system to obtain user identification data. Refer to HL7 Table 0615 - User Authentication Credential Type
// Code. It is to be used in when the receiving application system requires the sending system to provide end-user identification
// for accountability or access control in interactive applications. Since user authentication implementations often
// limit the time period for validity of the session authentication credentials, this segment is not intended for use in non-interactive
// applications.
//
// It is possible that various user authentication credential standards' data may be communicated. Kerberos and SAML are
// two such standards. A user authentication credential is an encapsulated data (ED type) element, as defined by standards,
// with no HL7-relevant structure.
//
// Note: The UAC segment is defined for use within simple protocols, such as MLLP, that do not have user authentication semantics.
// Implementations that use WSDL/SOAP, or similar protocols, to envelope HL7 should employ the user authentication semantics
// and data structures available within the scope of those protocols rather than the UAC segment.
//
// If the receiving system accepts the user credentials in the UAC segment, no specific acknowledgement is required. However,
// if the receiving system detects an error while processing the UAC segment, its acknowledgment message shall report it
// to the sender via an MSA and ERR segment pair:
// - The ERR-3 (error code) field value is 207 to signify an application error
// - The ERR-7 (diagnostic information) field reports the specific error. Examples of possible errors are:
// - User credentials expected but not provided
// - User credentials invalid
// - User credentials expired
// - User credentials from an unknown or untrusted source
// - User unknown
// - User not allowed to create or access data on the receiving system.
// - User not allowed to initiate a processing function on the receiving system.
//
// When an MSA and ERR segment pair is reported to the sender, an application data response shall not occur. In such cases it
// is correct to assume that the sending application's user is not authorized to get the data.
//
// The processing rules for the ERR segment are outside of HL7's scope.
type UAC struct {
	HL7                                  HL7Name `hl7:",name=UAC,type=s"`
	UserAuthenticationCredentialTypeCode CWE     `hl7:"1,required,table=0615,display=User Authentication Credential Type Code"`
	UserAuthenticationCredential         ED      `hl7:"2,required,display=User Authentication Credential"`
}

// Ub82
//
// The UB1 segment contains data specific to the United States. Only billing/claims fields that do not exist in other HL7 defined
// segments appear in this segment. The codes listed as examples are not an exhaustive or current list.
//
// Attention: UB1-2 was deprecated as of v2.3 and the detail was withdrawn and removed from the standard as of v 2.6.
type UB1 struct {
	HL7                     HL7Name `hl7:",name=UB1,type=s"`
	SetID                   ST      `hl7:"1,seq,display=Set Id - Ub1"`
	BloodDeductible         ST      `hl7:"2,display=Blood Deductible"`
	BloodFurnishedPints     ST      `hl7:"3,display=Blood Furnished-pints"`
	BloodReplacedPints      ST      `hl7:"4,display=Blood Replaced-pints"`
	BloodNotReplacedPints   ST      `hl7:"5,display=Blood Not Replaced-pints"`
	CoInsuranceDays         ST      `hl7:"6,display=Co-insurance Days"`
	ConditionCode           []ST    `hl7:"7,max=5,display=Condition Code"`
	CoveredDays             ST      `hl7:"8,display=Covered Days"`
	NonCoveredDays          ST      `hl7:"9,display=Non Covered Days"`
	ValueAmountCode         []ST    `hl7:"10,max=8,display=Value Amount & Code"`
	NumberOfGraceDays       ST      `hl7:"11,display=Number Of Grace Days"`
	SpecialProgramIndicator ST      `hl7:"12,display=Special Program Indicator"`
	PsroUrApprovalIndicator ST      `hl7:"13,display=Psro/Ur Approval Indicator"`
	PsroUrApprovedStayFm    ST      `hl7:"14,display=Psro/Ur Approved Stay-fm"`
	PsroUrApprovedStayTo    ST      `hl7:"15,display=Psro/Ur Approved Stay-to"`
	Occurrence              []ST    `hl7:"16,max=5,display=Occurrence"`
	OccurrenceSpan          ST      `hl7:"17,display=Occurrence Span"`
	OccurSpanStartDate      ST      `hl7:"18,display=Occur Span Start Date"`
	OccurSpanEndDate        ST      `hl7:"19,display=Occur Span End Date"`
	Ub82Locator2            ST      `hl7:"20,display=Ub-82 Locator 2"`
	Ub82Locator9            ST      `hl7:"21,display=Ub-82 Locator 9"`
	Ub82Locator27           ST      `hl7:"22,display=Ub-82 Locator 27"`
	Ub82Locator45           ST      `hl7:"23,display=Ub-82 Locator 45"`
}

// Uniform Billing Data
//
// The UB2 segment contains data necessary to complete UB92 bills specific to the United States. Realms outside the US are
// referred to chapter 16. Only Uniform Billing fields that do not exist in other HL7 defined segments appear in this segment.
// For example, Patient Name and Date of Birth are required; they are included in the PID segment and therefore do not appear
// here. Uniform Billing field locators are provided in parentheses ( ). The UB codes listed as examples are not an exhaustive
// or current list; refer to a UB specification for additional information.
type UB2 struct {
	HL7                       HL7Name `hl7:",name=UB2,type=s"`
	SetID                     SI      `hl7:"1,seq,len=4,display=Set Id - Ub2"`
	CoInsuranceDays9          ST      `hl7:"2,len=3,display=Co-insurance Days (9)"`
	ConditionCode2430         []CWE   `hl7:"3,max=7,table=0043,display=Condition Code (24-30)"`
	CoveredDays7              ST      `hl7:"4,len=3,display=Covered Days (7)"`
	NonCoveredDays8           ST      `hl7:"5,len=4,display=Non-covered Days (8)"`
	ValueAmountCode           []UVC   `hl7:"6,max=12,display=Value Amount & Code"`
	OccurrenceCodeDate3235    []OCD   `hl7:"7,max=8,display=Occurrence Code & Date (32-35)"`
	OccurrenceSpanCodeDates36 []OSP   `hl7:"8,max=2,display=Occurrence Span Code/Dates (36)"`
	UB92Locator2State         []ST    `hl7:"9,max=2,len=29,display=UB92 Locator 2 (state)"`
	UB92Locator11State        []ST    `hl7:"10,max=2,len=12,display=UB92 Locator 11 (state)"`
	UB92Locator31National     ST      `hl7:"11,len=5,display=UB92 Locator 31 (national)"`
	DocumentControlNumber     []ST    `hl7:"12,max=3,len=23,display=Document Control Number"`
	UB92Locator49National     []ST    `hl7:"13,max=23,len=4,display=UB92 Locator 49 (national)"`
	UB92Locator56State        []ST    `hl7:"14,max=5,len=14,display=UB92 Locator 56 (state)"`
	UB92Locator57National     ST      `hl7:"15,len=27,display=UB92 Locator 57 (national)"`
	UB92Locator78State        []ST    `hl7:"16,max=2,len=2,display=UB92 Locator 78 (state)"`
	SpecialVisitCount         NM      `hl7:"17,len=3,display=Special Visit Count"`
}

// Results/Update Definition
type URD struct {
	HL7   HL7Name `hl7:",name=URD,type=s"`
	Value ST      `hl7:"1,display=URD.1"`
}

// Results/Update Selection Criteria
type URS struct {
	HL7   HL7Name `hl7:",name=URS,type=s"`
	Value ST      `hl7:"1,display=URS.1"`
}

// Variance
//
// The variance segment contains the data necessary to describe differences that may have occurred at the time when a healthcare
// event was documented.
type VAR struct {
	HL7                    HL7Name `hl7:",name=VAR,type=s"`
	VarianceInstanceID     EI      `hl7:"1,required,display=Variance Instance Id"`
	DocumentedDateTime     DTM     `hl7:"2,required,format=YMDHM,display=Documented Date/Time"`
	StatedVarianceDateTime DTM     `hl7:"3,format=YMDHM,display=Stated Variance Date/Time"`
	VarianceOriginator     []XCN   `hl7:"4,display=Variance Originator"`
	VarianceClassification *CWE    `hl7:"5,display=Variance Classification"`
	VarianceDescription    []ST    `hl7:"6,display=Variance Description"`
}

// Purchasing Vendor
//
// This segment contains purchasing vendors that supply the inventory supply item specified in the ITM segment.
type VND struct {
	HL7                    HL7Name `hl7:",name=VND,type=s"`
	SetID                  SI      `hl7:"1,seq,required,len=4,display=Set Id - Vnd"`
	VendorIdentifier       EI      `hl7:"2,required,display=Vendor Identifier"`
	VendorName             ST      `hl7:"3,display=Vendor Name"`
	VendorCatalogNumber    *EI     `hl7:"4,display=Vendor Catalog Number"`
	PrimaryVendorIndicator *CNE    `hl7:"5,table=0532,display=Primary Vendor Indicator"`
}
